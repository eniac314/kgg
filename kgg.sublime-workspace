{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ga",
				"gameId"
			],
			[
				"buff",
				"buffering"
			],
			[
				"cent",
				"centerX"
			],
			[
				"b",
				"broadcast"
			],
			[
				"wo",
				"words"
			],
			[
				"getW",
				"getWordsEndGame"
			],
			[
				"new",
				"newGameState"
			],
			[
				"con",
				"concatMap"
			],
			[
				"mb",
				"mbKanjiMeta"
			],
			[
				"Padd",
				"paddingXY"
			],
			[
				"on",
				"onYomiView"
			],
			[
				"kun",
				"kunYomiView"
			],
			[
				"read",
				"readingsView"
			],
			[
				"mea",
				"meaningView"
			],
			[
				"kan",
				"kanjidic"
			],
			[
				"kanji",
				"kanjidic"
			],
			[
				"Game",
				"GameConfig"
			],
			[
				"show",
				"showingHints"
			],
			[
				"en",
				"entries"
			],
			[
				"kaj",
				"kanjidic"
			],
			[
				"Kanji",
				"KanjidicEntry"
			],
			[
				"ka",
				"kanjidic"
			],
			[
				"game",
				"gameId"
			],
			[
				"from",
				"fromChar"
			],
			[
				"buf",
				"bufferedKanji"
			],
			[
				"bu",
				"buffering"
			],
			[
				"gam",
				"gameId"
			],
			[
				"kgg",
				"kggames"
			],
			[
				"fil",
				"filter"
			],
			[
				"k",
				"kggames"
			],
			[
				"cen",
				"centerX"
			],
			[
				"this",
				"thisPlayerIsPlaying"
			],
			[
				"se",
				"sessionId"
			],
			[
				"cm",
				"cmds"
			],
			[
				"curr",
				"currentPlayers"
			],
			[
				"time",
				"timeStampedModel"
			],
			[
				"send",
				"sendToBackend"
			],
			[
				"su",
				"substate"
			],
			[
				"bro",
				"broadcastGame"
			],
			[
				"newGam",
				"newGameState"
			],
			[
				"init",
				"initialLoading"
			],
			[
				"ent",
				"entries"
			],
			[
				"ini",
				"currentGameInitialLoadingStatus"
			],
			[
				"In",
				"InPlay"
			],
			[
				"gm",
				"gameId"
			],
			[
				"buffer",
				"bufferSize"
			],
			[
				"Key",
				"KeyboardMsg"
			],
			[
				"N",
				"Nothing"
			],
			[
				"he",
				"head"
			],
			[
				"snee",
				"sendToBackend"
			],
			[
				"Front",
				"FrontendModel"
			],
			[
				"is",
				"isIFrameTestPort"
			],
			[
				"user",
				"UserInfoPayload"
			],
			[
				"S",
				"String"
			],
			[
				"de",
				"decomposer"
			],
			[
				"mem",
				"membersBlogIndex"
			],
			[
				"in",
				"inlines"
			],
			[
				"ligh",
				"lightBlue"
			],
			[
				"Ba",
				"BackgroundColor"
			],
			[
				"al",
				"alignBottom"
			],
			[
				"ru",
				"ruby"
			],
			[
				"writ",
				"writingsToStr"
			],
			[
				"wi",
				"withDefault"
			],
			[
				"jap",
				"japExtractor"
			],
			[
				"star",
				"startsWithNoJap"
			],
			[
				"le",
				"legacyReading"
			],
			[
				"chom",
				"chompWhile"
			],
			[
				"get",
				"getChompedString"
			],
			[
				"html",
				"htmlRubyParser"
			],
			[
				"pa",
				"paddingXY"
			],
			[
				"Kan",
				"KanjiEditor"
			],
			[
				"swa",
				"swapUp"
			],
			[
				"remo",
				"removeCoreMeaning"
			],
			[
				"remove",
				"removeAnyMeaning"
			],
			[
				"ed",
				"editAnyMeanings"
			],
			[
				"editM",
				"EditMeanings"
			],
			[
				"grou",
				"groupColor"
			],
			[
				"B",
				"Background"
			],
			[
				"to",
				"toFloat"
			],
			[
				"mainContent",
				"mainContentFullScreen"
			],
			[
				"ht",
				"html"
			],
			[
				"padd",
				"paddingEach"
			],
			[
				"ali",
				"alignRight"
			],
			[
				"fix",
				"fixLittleTsu"
			],
			[
				"meain",
				"frenchMeaning"
			],
			[
				"cet",
				"centerY"
			],
			[
				"pass",
				"passive"
			],
			[
				"poten",
				"potentielle"
			],
			[
				"conf",
				"configView"
			],
			[
				"dic",
				"dictionnaire"
			],
			[
				"VTT",
				"VTTeForm"
			],
			[
				"re",
				"remove"
			],
			[
				"ver",
				"VerbsTableConfig"
			],
			[
				"showingB",
				"showingVerbQuiz"
			],
			[
				"Verbs",
				"VerbsTableConfig"
			],
			[
				"col",
				"columnData"
			],
			[
				"header",
				"headerInFrench"
			],
			[
				"conjugateA",
				"conjugateAdjective"
			],
			[
				"answe",
				"answerType"
			],
			[
				"inter",
				"inderdictForm"
			],
			[
				"fi",
				"fill"
			],
			[
				"anser",
				"answered"
			],
			[
				"sc",
				"scrollbarY"
			],
			[
				"ans",
				"answer"
			],
			[
				"pitch",
				"pitchAccentsToString"
			],
			[
				"pitchAcc",
				"pitchAccentInput"
			],
			[
				"showing",
				"showingPitchAccents"
			],
			[
				"parseCo",
				"parseCorrected"
			],
			[
				"acc",
				"accent"
			],
			[
				"st",
				"startingPoint"
			],
			[
				"pi",
				"pitchAccentToSvg"
			],
			[
				"pit",
				"pitchAccentFromCodeString"
			],
			[
				"morae",
				"moraeDecomp"
			],
			[
				"mo",
				"moraeDecomposition"
			],
			[
				"Pit",
				"PitchAccent"
			],
			[
				"fla",
				"flattenJap"
			],
			[
				"ad",
				"adjectives"
			],
			[
				"na",
				"naKeyYouShiQuizzed"
			],
			[
				"Qui",
				"QuizDisplay"
			],
			[
				"Adjective",
				"AdjectiveForm"
			],
			[
				"Adje",
				"AdjectiveForm"
			],
			[
				"del",
				"delim2"
			],
			[
				"fl",
				"flatStr"
			],
			[
				"IKeiY",
				"IKeiYouShi"
			],
			[
				"IKe",
				"IKeiYouShi"
			],
			[
				"Ke",
				"KeiYouShi"
			],
			[
				"s",
				"shrink"
			],
			[
				"te",
				"teForm"
			]
		]
	},
	"buffers":
	[
		{
			"file": "elm-pkg-js/coms.js",
			"settings":
			{
				"buffer_size": 1231,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJwAAAAAAAAAAAAAAIgAAAAAAAAAiAAAAAAAAAAIAAAAgIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"paste",
					null,
					"AQAAACEAAAAAAAAAiQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAAA0QA"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "host"
					},
					"BQAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABwAAAAAAAAAAYAAABwYXJlbnRwAAAAAAAAAHEAAAAAAAAAAAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8AAAAAAAAAdQAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAAzwIAAAAAAACEAgAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCAoZXZlbnQpID0+IHsKICAgIGNvbnNvbGUubG9nKCJNZXNzYWdlIGZyb20gaG9zdDoiLCBldmVudC5kYXRhKTsKfSk7CgogIGFwcC5wb3J0cy5nZXRHZW9sb2Muc3Vic2NyaWJlKGFzeW5jIGZ1bmN0aW9uKCkgewogICAgZ2V0TG9jYXRpb24oYXBwKQogIH0pCn0KCmZ1bmN0aW9uIGdldExvY2F0aW9uKGFwcCkgewogIHZhciBvcHRpb25zID0gewogICAgZW5hYmxlSGlnaEFjY3VyYWN5OiB0cnVlLAogICAgdGltZW91dDogNTAwMCwKICAgIG1heGltdW1BZ2U6IDAKICB9OwoKCiAgaWYgKG5hdmlnYXRvci5nZW9sb2NhdGlvbikgewogICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGFwcC5wb3J0cy5nZW9sb2Muc2VuZCwKICAgICAgICBmdW5jdGlvbihlcnJvcikgewogICAgICAgICAgYXBwLnBvcnRzLmdlb2xvYy5zZW5kKCJnZW9sb2NhdGlvbiBub3QgYWxsb3dlZCIpOwogICAgICAgICAgfSwgb3B0aW9ucyk7CiAgfSBlbHNlIHsKICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgibm8gZ2VvbG9jYXRpb24iKTsKICAgIGNvbnNvbGUubG9nKCJubyBnZW9sb2NhdGlvbiIpOwogIH0KfSA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMAAAAAAAAAcwAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"EQAAAM4CAAAAAAAA0QIAAAAAAAAAAAAAyAIAAAAAAADLAgAAAAAAAAAAAAChAgAAAAAAAKQCAAAAAAAAAAAAAHACAAAAAAAAcwIAAAAAAAAAAAAAYwIAAAAAAABmAgAAAAAAAAAAAABNAgAAAAAAAFACAAAAAAAAAAAAAD4CAAAAAAAAQQIAAAAAAAAAAAAA/AEAAAAAAAD/AQAAAAAAAAAAAADeAQAAAAAAAOEBAAAAAAAAAAAAAJYBAAAAAAAAmQEAAAAAAAAAAAAAdQEAAAAAAAB4AQAAAAAAAAAAAABtAQAAAAAAAHABAAAAAAAAAAAAAFYBAAAAAAAAWQEAAAAAAAAAAAAAPgEAAAAAAABBAQAAAAAAAAAAAAAbAQAAAAAAAB4BAAAAAAAAAAAAAAcBAAAAAAAACgEAAAAAAAAAAAAA6wAAAAAAAADuAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsAAAAAAAAAzwIAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AwAAAOUAAAAAAAAA6AAAAAAAAAAAAAAAzAAAAAAAAADPAAAAAAAAAAAAAACXAAAAAAAAAJoAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcAAAAAAAAA5wAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAACwMAAAAAAAALAwAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIChldmVudCkgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCJNZXNzYWdlIGZyb20gaG9zdDoiLCBldmVudC5kYXRhKTsKICAgIH0pOwoKICAgIC8vIGFwcC5wb3J0cy5nZXRHZW9sb2Muc3Vic2NyaWJlKGFzeW5jIGZ1bmN0aW9uKCkgewogICAgLy8gICAgIGdldExvY2F0aW9uKGFwcCkKICAgIC8vIH0pCn0KCi8vIGZ1bmN0aW9uIGdldExvY2F0aW9uKGFwcCkgewovLyAgICAgdmFyIG9wdGlvbnMgPSB7Ci8vICAgICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5IDogdHJ1ZSwKLy8gICAgICAgICB0aW1lb3V0IDogNTAwMCwKLy8gICAgICAgICBtYXhpbXVtQWdlIDogMAovLyAgICAgfTsKCi8vICAgICBpZiAobmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7Ci8vICAgICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihhcHAucG9ydHMuZ2VvbG9jLnNlbmQsCi8vICAgICAgICAgICAgIGZ1bmN0aW9uKGVycm9yKSB7Ci8vICAgICAgICAgICAgICAgICBhcHAucG9ydHMuZ2VvbG9jLnNlbmQoImdlb2xvY2F0aW9uIG5vdCBhbGxvd2VkIik7Ci8vICAgICAgICAgICAgIH0sCi8vICAgICAgICAgICAgIG9wdGlvbnMpOwovLyAgICAgfSBlbHNlIHsKLy8gICAgICAgICBhcHAucG9ydHMuZ2VvbG9jLnNlbmQoIm5vIGdlb2xvY2F0aW9uIik7Ci8vICAgICAgICAgY29uc29sZS5sb2coIm5vIGdlb2xvY2F0aW9uIik7Ci8vICAgICB9Ci8vIH0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4BAAAAAAAAjgEAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"paste",
					null,
					"AQAAACMAAAAAAAAAVwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAABEQA"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcAAAAAAAAAVwAAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "kgg-"
					},
					"BgAAAD4AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAAA/AAAAAAAAABEAAABIZWxsbyBmcm9tIGlmcmFtZUgAAAAAAAAASAAAAAAAAAAEAAAAICAgID8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAEIAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8AAAAAAAAAPgAAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "loaded"
					},
					"BgAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIAAAAAAAAAQgAAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAAPgMAAAAAAAA+AwAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgICB3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKCJrZ2ctbG9hZGVkIiwgIioiKTsKCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIChldmVudCkgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCJNZXNzYWdlIGZyb20gaG9zdDoiLCBldmVudC5kYXRhKTsKICAgIH0pOwoKICAgIC8vIGFwcC5wb3J0cy5nZXRHZW9sb2Muc3Vic2NyaWJlKGFzeW5jIGZ1bmN0aW9uKCkgewogICAgLy8gICAgIGdldExvY2F0aW9uKGFwcCkKICAgIC8vIH0pCn0KCi8vIGZ1bmN0aW9uIGdldExvY2F0aW9uKGFwcCkgewovLyAgICAgdmFyIG9wdGlvbnMgPSB7Ci8vICAgICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5IDogdHJ1ZSwKLy8gICAgICAgICB0aW1lb3V0IDogNTAwMCwKLy8gICAgICAgICBtYXhpbXVtQWdlIDogMAovLyAgICAgfTsKCi8vICAgICBpZiAobmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7Ci8vICAgICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihhcHAucG9ydHMuZ2VvbG9jLnNlbmQsCi8vICAgICAgICAgICAgIGZ1bmN0aW9uKGVycm9yKSB7Ci8vICAgICAgICAgICAgICAgICBhcHAucG9ydHMuZ2VvbG9jLnNlbmQoImdlb2xvY2F0aW9uIG5vdCBhbGxvd2VkIik7Ci8vICAgICAgICAgICAgIH0sCi8vICAgICAgICAgICAgIG9wdGlvbnMpOwovLyAgICAgfSBlbHNlIHsKLy8gICAgICAgICBhcHAucG9ydHMuZ2VvbG9jLnNlbmQoIm5vIGdlb2xvY2F0aW9uIik7Ci8vICAgICAgICAgY29uc29sZS5sb2coIm5vIGdlb2xvY2F0aW9uIik7Ci8vICAgICB9Ci8vIH0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMAAAAAAAAAswAAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"cut",
					null,
					"AQAAACMAAAAAAAAAIwAAAAAAAAAtAAAAd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSgia2dnLWxvYWRlZCIsICIqIik7",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMAAAAAAAAAUAAAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"BAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABdAAAAAAAAAAAAAABdAAAAAAAAAF8AAAAAAAAAAAAAAF8AAAAAAAAAYQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgAAAAAAAAAWAAAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"paste",
					null,
					"AQAAAGEAAAAAAAAAjgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEAAAAAAAAAYQAAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					2,
					"left_delete",
					null,
					"AgAAAH0AAAAAAAAAfQAAAAAAAAAJAAAAZ2ctbG9hZGVkfAAAAAAAAAB8AAAAAAAAAAEAAABr",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0AAAAAAAAAhgAAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "JSON/"
					},
					"BQAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsAAAAAAAAAewAAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"left_delete",
					null,
					"AQAAAH8AAAAAAAAAfwAAAAAAAAABAAAALw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAH8AAAAAAAAAgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8AAAAAAAAAfwAAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAH8AAAAAAAAAfwAAAAAAAAABAAAALA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": ".stri"
					},
					"BQAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAIIAAAAAAAAAAAAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8AAAAAAAAAfwAAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-typescript\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							46,
							79,
							1
						],
						"trigger": "stringify"
					},
					"BgAAAIMAAAAAAAAAgwAAAAAAAAABAAAAaYIAAAAAAAAAggAAAAAAAAABAAAAcoEAAAAAAAAAgQAAAAAAAAABAAAAdIAAAAAAAAAAgAAAAAAAAAABAAAAc38AAAAAAAAAfwAAAAAAAAABAAAALn8AAAAAAAAAiQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAIkAAAAAAAAAigAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkAAAAAAAAAiQAAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIwAAAAAAAAAjQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					2,
					"left_delete",
					null,
					"AgAAAIsAAAAAAAAAiwAAAAAAAAABAAAAIooAAAAAAAAAigAAAAAAAAABAAAAIg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIoAAAAAAAAAjAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoAAAAAAAAAigAAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					2,
					"left_delete",
					null,
					"AgAAAIsAAAAAAAAAiwAAAAAAAAABAAAAfYoAAAAAAAAAigAAAAAAAAABAAAAew",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "en"
					},
					"AgAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoAAAAAAAAAigAAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAAIsAAAAAAAAAiwAAAAAAAAABAAAAbg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "ce"
					},
					"AgAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsAAAAAAAAAiwAAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					2,
					"left_delete",
					null,
					"AgAAAIwAAAAAAAAAjAAAAAAAAAABAAAAZYsAAAAAAAAAiwAAAAAAAAABAAAAYw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0AAAAAAAAAjQAAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "ven"
					},
					"AwAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAI4AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsAAAAAAAAAiwAAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":2,\"session_name\":\"LSP-typescript\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							56,
							89,
							1
						],
						"trigger": "event"
					},
					"CwAAAI0AAAAAAAAAjQAAAAAAAAABAAAAbowAAAAAAAAAjAAAAAAAAAABAAAAZYsAAAAAAAAAiwAAAAAAAAABAAAAdosAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACMAAAAAAAAAIwAAAAAAAAAAQAAAGWLAAAAAAAAAIsAAAAAAAAAAQAAAGOLAAAAAAAAAIwAAAAAAAAAAAAAAIsAAAAAAAAAiwAAAAAAAAABAAAAbooAAAAAAAAAigAAAAAAAAABAAAAZYoAAAAAAAAAjwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4AAAAAAAAAjgAAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": ".data"
					},
					"BQAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8AAAAAAAAAjwAAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAATwMAAAAAAABVAwAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgICAKCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIChldmVudCkgPT4gewogICAgICAgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkoZXZlbnQuZGF0YSksICIqIik7CiAgICAgICAgY29uc29sZS5sb2coIk1lc3NhZ2UgZnJvbSBob3N0OiIsIGV2ZW50LmRhdGEpOwogICAgfSk7CgogICAgLy8gYXBwLnBvcnRzLmdldEdlb2xvYy5zdWJzY3JpYmUoYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAvLyAgICAgZ2V0TG9jYXRpb24oYXBwKQogICAgLy8gfSkKfQoKLy8gZnVuY3Rpb24gZ2V0TG9jYXRpb24oYXBwKSB7Ci8vICAgICB2YXIgb3B0aW9ucyA9IHsKLy8gICAgICAgICBlbmFibGVIaWdoQWNjdXJhY3kgOiB0cnVlLAovLyAgICAgICAgIHRpbWVvdXQgOiA1MDAwLAovLyAgICAgICAgIG1heGltdW1BZ2UgOiAwCi8vICAgICB9OwoKLy8gICAgIGlmIChuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHsKLy8gICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGFwcC5wb3J0cy5nZW9sb2Muc2VuZCwKLy8gICAgICAgICAgICAgZnVuY3Rpb24oZXJyb3IpIHsKLy8gICAgICAgICAgICAgICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgiZ2VvbG9jYXRpb24gbm90IGFsbG93ZWQiKTsKLy8gICAgICAgICAgICAgfSwKLy8gICAgICAgICAgICAgb3B0aW9ucyk7Ci8vICAgICB9IGVsc2UgewovLyAgICAgICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgibm8gZ2VvbG9jYXRpb24iKTsKLy8gICAgICAgICBjb25zb2xlLmxvZygibm8gZ2VvbG9jYXRpb24iKTsKLy8gICAgIH0KLy8gfQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkAAAAAAAAAmQAAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACoAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8AAAAAAAAAnwAAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"paste",
					null,
					"AQAAAJ8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8AAAAAAAAAnwAAAAAAAAAAAAAAAABUQA"
				],
				[
					124,
					1,
					"paste",
					null,
					"AgAAAKkAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC3AAAAAAAAAAYAAABnZW9sb2M",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkAAAAAAAAArwAAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"left_delete",
					null,
					"AQAAAL0AAAAAAAAAvQAAAAAAAAAZAAAAImdlb2xvY2F0aW9uIG5vdCBhbGxvd2VkIg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAA1gAAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "eben"
					},
					"BAAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAC/AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					3,
					"left_delete",
					null,
					"AwAAAMAAAAAAAAAAwAAAAAAAAAABAAAAbr8AAAAAAAAAvwAAAAAAAAABAAAAZb4AAAAAAAAAvgAAAAAAAAABAAAAYg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEAAAAAAAAAwQAAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "vent.d"
					},
					"BgAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAADDAAAAAAAAAMQAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4AAAAAAAAAvgAAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "ata"
					},
					"AwAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAAggMAAAAAAACCAwAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIChldmVudCkgPT4gewogICAgICAgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkoZXZlbnQuZGF0YSksICIqIik7CiAgICAgICAgYXBwLnBvcnRzLmZyb21QYXJlbnRQb3J0LnNlbmQoZXZlbnQuZGF0YSk7CiAgICAgICAgY29uc29sZS5sb2coIk1lc3NhZ2UgZnJvbSBob3N0OiIsIGV2ZW50LmRhdGEpOwogICAgfSk7CgogICAgLy8gYXBwLnBvcnRzLmdldEdlb2xvYy5zdWJzY3JpYmUoYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAvLyAgICAgZ2V0TG9jYXRpb24oYXBwKQogICAgLy8gfSkKfQoKLy8gZnVuY3Rpb24gZ2V0TG9jYXRpb24oYXBwKSB7Ci8vICAgICB2YXIgb3B0aW9ucyA9IHsKLy8gICAgICAgICBlbmFibGVIaWdoQWNjdXJhY3kgOiB0cnVlLAovLyAgICAgICAgIHRpbWVvdXQgOiA1MDAwLAovLyAgICAgICAgIG1heGltdW1BZ2UgOiAwCi8vICAgICB9OwoKLy8gICAgIGlmIChuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHsKLy8gICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGFwcC5wb3J0cy5nZW9sb2Muc2VuZCwKLy8gICAgICAgICAgICAgZnVuY3Rpb24oZXJyb3IpIHsKLy8gICAgICAgICAgICAgICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgiZ2VvbG9jYXRpb24gbm90IGFsbG93ZWQiKTsKLy8gICAgICAgICAgICAgfSwKLy8gICAgICAgICAgICAgb3B0aW9ucyk7Ci8vICAgICB9IGVsc2UgewovLyAgICAgICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgibm8gZ2VvbG9jYXRpb24iKTsKLy8gICAgICAgICBjb25zb2xlLmxvZygibm8gZ2VvbG9jYXRpb24iKTsKLy8gICAgIH0KLy8gfQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcAAAAAAAAAxwAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAALQAAAAAAAAAAAAAAJAAAAAAAAAAkAAAAAAAAAAQAAAAgICAg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAACMAAAAAAAAAuQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAREA"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAHgAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AAAAAAAAAHgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAEkAAAAAAAAASwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAAAAAAAAAEkAAAAAAAAAAAAAAAAAREA"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAIsAAAAAAAAAjQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAAAAAAAAAIsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAMAAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADEAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAALgQAAAAAAAAqBAAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgICBpZiAod2luZG93LnNlbGYgIT09IHdpbmRvdy50b3ApIHsKICAgICAgY29uc29sZS5sb2coIlRoaXMgcGFnZSBpcyBpbnNpZGUgYW4gaWZyYW1lLiIpOwogICAgfSBlbHNlIHsKICAgICAgY29uc29sZS5sb2coIlRoaXMgcGFnZSBpcyBub3QgaW5zaWRlIGFuIGlmcmFtZS4iKTsKICAgIH0KCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIChldmVudCkgPT4gewogICAgICAgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkoZXZlbnQuZGF0YSksICIqIik7CiAgICAgICAgYXBwLnBvcnRzLmZyb21QYXJlbnRQb3J0LnNlbmQoZXZlbnQuZGF0YSk7CiAgICAgICAgY29uc29sZS5sb2coIk1lc3NhZ2UgZnJvbSBob3N0OiIsIGV2ZW50LmRhdGEpOwogICAgfSk7CgogICAgLy8gYXBwLnBvcnRzLmdldEdlb2xvYy5zdWJzY3JpYmUoYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAvLyAgICAgZ2V0TG9jYXRpb24oYXBwKQogICAgLy8gfSkKfQoKLy8gZnVuY3Rpb24gZ2V0TG9jYXRpb24oYXBwKSB7Ci8vICAgICB2YXIgb3B0aW9ucyA9IHsKLy8gICAgICAgICBlbmFibGVIaWdoQWNjdXJhY3kgOiB0cnVlLAovLyAgICAgICAgIHRpbWVvdXQgOiA1MDAwLAovLyAgICAgICAgIG1heGltdW1BZ2UgOiAwCi8vICAgICB9OwoKLy8gICAgIGlmIChuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHsKLy8gICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGFwcC5wb3J0cy5nZW9sb2Muc2VuZCwKLy8gICAgICAgICAgICAgZnVuY3Rpb24oZXJyb3IpIHsKLy8gICAgICAgICAgICAgICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgiZ2VvbG9jYXRpb24gbm90IGFsbG93ZWQiKTsKLy8gICAgICAgICAgICAgfSwKLy8gICAgICAgICAgICAgb3B0aW9ucyk7Ci8vICAgICB9IGVsc2UgewovLyAgICAgICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgibm8gZ2VvbG9jYXRpb24iKTsKLy8gICAgICAgICBjb25zb2xlLmxvZygibm8gZ2VvbG9jYXRpb24iKTsKLy8gICAgIH0KLy8gfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"BAAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABJAAAAAAAAAAAAAABJAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"paste",
					null,
					"AQAAAE0AAAAAAAAAVwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNAAAAAAAAAE0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"paste",
					null,
					"AQAAAFcAAAAAAAAAZwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAAAAAAAAAFcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": ".send"
					},
					"BQAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnAAAAAAAAAGcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGwAAAAAAAAAbQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAGwAAAAAAAAAbAAAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGwAAAAAAAAAbgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG0AAAAAAAAAbwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"paste",
					null,
					"AQAAAG4AAAAAAAAAeAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAAAAAAAAAG4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AAAAAAAAAHgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					2,
					"left_delete",
					null,
					"AgAAAHkAAAAAAAAAeQAAAAAAAAABAAAAOngAAAAAAAAAeAAAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6AAAAAAAAAHoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAHgAAAAAAAAAeQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AAAAAAAAAHgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " true"
					},
					"BQAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AAAAAAAAAHkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAGwAAAAAAAAAbQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAAAAAAAAAGwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAAG0AAAAAAAAAbQAAAAAAAAABAAAAew",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAAAAAAAAAG4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAAH8AAAAAAAAAfwAAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAH8AAAAAAAAAgAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AAAAAAAAAH8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"BAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"paste",
					null,
					"AQAAAM4AAAAAAAAACwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAAAAAAAAAM4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					4,
					"left_delete",
					null,
					"BAAAANQAAAAAAAAA1AAAAAAAAAACAAAAICDSAAAAAAAAANIAAAAAAAAAAgAAACAg0AAAAAAAAADQAAAAAAAAAAIAAAAgIM4AAAAAAAAAzgAAAAAAAAACAAAAICA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAAIBAAAAAAAAAgEAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADAQAAAAAAAAMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "fakse"
					},
					"BgAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD8AAAAAAAAAAQAAAB0cnVl/AAAAAAAAAD9AAAAAAAAAAAAAAD9AAAAAAAAAP4AAAAAAAAAAAAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7AAAAAAAAAP8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					2,
					"left_delete",
					null,
					"AgAAAP8AAAAAAAAA/wAAAAAAAAABAAAAZf4AAAAAAAAA/gAAAAAAAAABAAAAcw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "ls"
					},
					"AgAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					3,
					"left_delete",
					null,
					"AwAAAP8AAAAAAAAA/wAAAAAAAAABAAAAc/4AAAAAAAAA/gAAAAAAAAABAAAAbP0AAAAAAAAA/QAAAAAAAAABAAAAaw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "lse"
					},
					"AwAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAAABAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AAAAAAAAAP0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAArwQAAAAAAACpBAAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgICBpZiAod2luZG93LnNlbGYgIT09IHdpbmRvdy50b3ApIHsKICAgICAgICBhcHAucG9ydHMuaXNJRnJhbWVUZXN0UG9ydC5zZW5kKHtpc0luSWZyYW1lOiB0cnVlfSk7CiAgICAgICAgY29uc29sZS5sb2coIlRoaXMgcGFnZSBpcyBpbnNpZGUgYW4gaWZyYW1lLiIpOwogICAgfSBlbHNlIHsKICAgICAgICBhcHAucG9ydHMuaXNJRnJhbWVUZXN0UG9ydC5zZW5kKHtpc0luSWZyYW1lOiBmYWxzZX0pOwogICAgICAgIGNvbnNvbGUubG9nKCJUaGlzIHBhZ2UgaXMgbm90IGluc2lkZSBhbiBpZnJhbWUuIik7CiAgICB9CgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCAoZXZlbnQpID0+IHsKICAgICAgICB3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKEpTT04uc3RyaW5naWZ5KGV2ZW50LmRhdGEpLCAiKiIpOwogICAgICAgIGFwcC5wb3J0cy5mcm9tUGFyZW50UG9ydC5zZW5kKGV2ZW50LmRhdGEpOwogICAgICAgIGNvbnNvbGUubG9nKCJNZXNzYWdlIGZyb20gaG9zdDoiLCBldmVudC5kYXRhKTsKICAgIH0pOwoKICAgIC8vIGFwcC5wb3J0cy5nZXRHZW9sb2Muc3Vic2NyaWJlKGFzeW5jIGZ1bmN0aW9uKCkgewogICAgLy8gICAgIGdldExvY2F0aW9uKGFwcCkKICAgIC8vIH0pCn0KCi8vIGZ1bmN0aW9uIGdldExvY2F0aW9uKGFwcCkgewovLyAgICAgdmFyIG9wdGlvbnMgPSB7Ci8vICAgICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5IDogdHJ1ZSwKLy8gICAgICAgICB0aW1lb3V0IDogNTAwMCwKLy8gICAgICAgICBtYXhpbXVtQWdlIDogMAovLyAgICAgfTsKCi8vICAgICBpZiAobmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7Ci8vICAgICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihhcHAucG9ydHMuZ2VvbG9jLnNlbmQsCi8vICAgICAgICAgICAgIGZ1bmN0aW9uKGVycm9yKSB7Ci8vICAgICAgICAgICAgICAgICBhcHAucG9ydHMuZ2VvbG9jLnNlbmQoImdlb2xvY2F0aW9uIG5vdCBhbGxvd2VkIik7Ci8vICAgICAgICAgICAgIH0sCi8vICAgICAgICAgICAgIG9wdGlvbnMpOwovLyAgICAgfSBlbHNlIHsKLy8gICAgICAgICBhcHAucG9ydHMuZ2VvbG9jLnNlbmQoIm5vIGdlb2xvY2F0aW9uIik7Ci8vICAgICAgICAgY29uc29sZS5sb2coIm5vIGdlb2xvY2F0aW9uIik7Ci8vICAgICB9Ci8vIH0",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"paste",
					null,
					"AQAAAG0AAAAAAAAAewAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAAAAAAAAAG0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAHsAAAAAAAAAfAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7AAAAAAAAAHsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"paste",
					null,
					"AQAAAAABAAAAAAAADgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAA4BAAAAAAAADwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAAzQQAAAAAAADNBAAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgICBpZiAod2luZG93LnNlbGYgIT09IHdpbmRvdy50b3ApIHsKICAgICAgICBhcHAucG9ydHMuaXNJRnJhbWVUZXN0UG9ydC5zZW5kKEpTT04uc3RyaW5naWZ5KHsgaXNJbklmcmFtZSA6IHRydWUgfSk7CiAgICAgICAgY29uc29sZS5sb2coIlRoaXMgcGFnZSBpcyBpbnNpZGUgYW4gaWZyYW1lLiIpOwogICAgfSBlbHNlIHsKICAgICAgICBhcHAucG9ydHMuaXNJRnJhbWVUZXN0UG9ydC5zZW5kKEpTT04uc3RyaW5naWZ5KHsgaXNJbklmcmFtZSA6IGZhbHNlIH0pOwogICAgICAgIGNvbnNvbGUubG9nKCJUaGlzIHBhZ2UgaXMgbm90IGluc2lkZSBhbiBpZnJhbWUuIik7CiAgICB9CgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCAoZXZlbnQpID0+IHsKICAgICAgICB3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKEpTT04uc3RyaW5naWZ5KGV2ZW50LmRhdGEpLCAiKiIpOwogICAgICAgIGFwcC5wb3J0cy5mcm9tUGFyZW50UG9ydC5zZW5kKGV2ZW50LmRhdGEpOwogICAgICAgIGNvbnNvbGUubG9nKCJNZXNzYWdlIGZyb20gaG9zdDoiLCBldmVudC5kYXRhKTsKICAgIH0pOwoKICAgIC8vIGFwcC5wb3J0cy5nZXRHZW9sb2Muc3Vic2NyaWJlKGFzeW5jIGZ1bmN0aW9uKCkgewogICAgLy8gICAgIGdldExvY2F0aW9uKGFwcCkKICAgIC8vIH0pCn0KCi8vIGZ1bmN0aW9uIGdldExvY2F0aW9uKGFwcCkgewovLyAgICAgdmFyIG9wdGlvbnMgPSB7Ci8vICAgICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5IDogdHJ1ZSwKLy8gICAgICAgICB0aW1lb3V0IDogNTAwMCwKLy8gICAgICAgICBtYXhpbXVtQWdlIDogMAovLyAgICAgfTsKCi8vICAgICBpZiAobmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7Ci8vICAgICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihhcHAucG9ydHMuZ2VvbG9jLnNlbmQsCi8vICAgICAgICAgICAgIGZ1bmN0aW9uKGVycm9yKSB7Ci8vICAgICAgICAgICAgICAgICBhcHAucG9ydHMuZ2VvbG9jLnNlbmQoImdlb2xvY2F0aW9uIG5vdCBhbGxvd2VkIik7Ci8vICAgICAgICAgICAgIH0sCi8vICAgICAgICAgICAgIG9wdGlvbnMpOwovLyAgICAgfSBlbHNlIHsKLy8gICAgICAgICBhcHAucG9ydHMuZ2VvbG9jLnNlbmQoIm5vIGdlb2xvY2F0aW9uIik7Ci8vICAgICAgICAgY29uc29sZS5sb2coIm5vIGdlb2xvY2F0aW9uIik7Ci8vICAgICB9Ci8vIH0",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAQAAAAAAACYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACYBAAAAAAAAJwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAQAAAAAAACYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAAAAAAAAAJIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAAzwQAAAAAAADPBAAAZXhwb3J0cy5pbml0ID0gZnVuY3Rpb24oYXBwKSB7CiAgICBpZiAod2luZG93LnNlbGYgIT09IHdpbmRvdy50b3ApIHsKICAgICAgICBhcHAucG9ydHMuaXNJRnJhbWVUZXN0UG9ydC5zZW5kKEpTT04uc3RyaW5naWZ5KHsgaXNJbklmcmFtZSA6IHRydWUgfSkpOwogICAgICAgIGNvbnNvbGUubG9nKCJUaGlzIHBhZ2UgaXMgaW5zaWRlIGFuIGlmcmFtZS4iKTsKICAgIH0gZWxzZSB7CiAgICAgICAgYXBwLnBvcnRzLmlzSUZyYW1lVGVzdFBvcnQuc2VuZChKU09OLnN0cmluZ2lmeSh7IGlzSW5JZnJhbWUgOiBmYWxzZSB9KSk7CiAgICAgICAgY29uc29sZS5sb2coIlRoaXMgcGFnZSBpcyBub3QgaW5zaWRlIGFuIGlmcmFtZS4iKTsKICAgIH0KCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIChldmVudCkgPT4gewogICAgICAgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkoZXZlbnQuZGF0YSksICIqIik7CiAgICAgICAgYXBwLnBvcnRzLmZyb21QYXJlbnRQb3J0LnNlbmQoZXZlbnQuZGF0YSk7CiAgICAgICAgY29uc29sZS5sb2coIk1lc3NhZ2UgZnJvbSBob3N0OiIsIGV2ZW50LmRhdGEpOwogICAgfSk7CgogICAgLy8gYXBwLnBvcnRzLmdldEdlb2xvYy5zdWJzY3JpYmUoYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAvLyAgICAgZ2V0TG9jYXRpb24oYXBwKQogICAgLy8gfSkKfQoKLy8gZnVuY3Rpb24gZ2V0TG9jYXRpb24oYXBwKSB7Ci8vICAgICB2YXIgb3B0aW9ucyA9IHsKLy8gICAgICAgICBlbmFibGVIaWdoQWNjdXJhY3kgOiB0cnVlLAovLyAgICAgICAgIHRpbWVvdXQgOiA1MDAwLAovLyAgICAgICAgIG1heGltdW1BZ2UgOiAwCi8vICAgICB9OwoKLy8gICAgIGlmIChuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHsKLy8gICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGFwcC5wb3J0cy5nZW9sb2Muc2VuZCwKLy8gICAgICAgICAgICAgZnVuY3Rpb24oZXJyb3IpIHsKLy8gICAgICAgICAgICAgICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgiZ2VvbG9jYXRpb24gbm90IGFsbG93ZWQiKTsKLy8gICAgICAgICAgICAgfSwKLy8gICAgICAgICAgICAgb3B0aW9ucyk7Ci8vICAgICB9IGVsc2UgewovLyAgICAgICAgIGFwcC5wb3J0cy5nZW9sb2Muc2VuZCgibm8gZ2VvbG9jYXRpb24iKTsKLy8gICAgICAgICBjb25zb2xlLmxvZygibm8gZ2VvbG9jYXRpb24iKTsKLy8gICAgIH0KLy8gfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "src/Game.elm",
			"settings":
			{
				"buffer_size": 23861,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					107,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFY5AAAAAAAAVzkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVjkAAAAAAABWOQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFc5AAAAAAAAWDkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVzkAAAAAAABXOQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"paste",
					null,
					"AQAAAFg5AAAAAAAAZjoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWDkAAAAAAABYOQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"left_delete",
					null,
					"AQAAAFg5AAAAAAAAWDkAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAWTkAAAAAAABZOQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAAYFwAAAAAAAAQYwAAbW9kdWxlIEdhbWUgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzCmltcG9ydCBEaWN0CmltcG9ydCBIZWxwZXJzIGV4cG9zaW5nIChzaHVmZmxlU2VlZCkKaW1wb3J0IExhbWRlcmEgZXhwb3NpbmcgKENsaWVudElkLCBicm9hZGNhc3QsIHNlbmRUb0Zyb250ZW5kKQppbXBvcnQgTGlzdC5FeHRyYQppbXBvcnQgUmFuZG9tCmltcG9ydCBTZXQKaW1wb3J0IFRpbWUKaW1wb3J0IFR5cGVzIGV4cG9zaW5nICguLikKCgpidWZmZXJTaXplID0KICAgIDUKCgp1cGRhdGVDb25maWcgOgogICAgQmFja2VuZE1vZGVsCiAgICAtPiBHYW1lSWQKICAgIC0+IEdhbWVDb25maWcKICAgIC0+ICggQmFja2VuZE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCnVwZGF0ZUNvbmZpZyBtb2RlbCBnYW1lSWQgY29uZmlnID0KICAgIGNhc2UgRGljdC5nZXQgZ2FtZUlkIG1vZGVsLmtnZ2FtZXMgb2YKICAgICAgICBKdXN0IGdhbWUgLT4KICAgICAgICAgICAgY2FzZSBnYW1lLmdhbWVTdGF0ZSBvZgogICAgICAgICAgICAgICAgTG9iYnkgXyAtPgogICAgICAgICAgICAgICAgICAgIGxldAogICAgICAgICAgICAgICAgICAgICAgICBuZXdHYW1lID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZ2FtZSB8IGdhbWVTdGF0ZSA9IExvYmJ5IGNvbmZpZyB9CiAgICAgICAgICAgICAgICAgICAgaW4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBrZ2dhbWVzID0gRGljdC5pbnNlcnQgZ2FtZUlkIG5ld0dhbWUgbW9kZWwua2dnYW1lcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3RHYW1lIG5ld0dhbWUKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgXyAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCiAgICAgICAgXyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKY3JlYXRlR2FtZSA6IEJhY2tlbmRNb2RlbCAtPiBUaW1lLlBvc2l4IC0+IFBsYXllciAtPiBHYW1lQ29uZmlnIC0+ICggQmFja2VuZE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnID0KICAgIGxldAogICAgICAgIG5leHRJZCA9CiAgICAgICAgICAgIERpY3Qua2V5cyBtb2RlbC5rZ2dhbWVzCiAgICAgICAgICAgICAgICB8PiBMaXN0LmZvbGRyIG1heCAtMQogICAgICAgICAgICAgICAgfD4gKFxuIC0+IG4gKyAxKQoKICAgICAgICBuZXdHYW1lID0KICAgICAgICAgICAgeyBnYW1lSWQgPSBuZXh0SWQKICAgICAgICAgICAgLCBob3N0ID0gaG9zdAogICAgICAgICAgICAsIHBsYXllcnMgPSBbIGhvc3QgXQogICAgICAgICAgICAsIGdhbWVTdGF0ZSA9IExvYmJ5IGNvbmZpZwogICAgICAgICAgICAsIGxhc3RVcGRhdGVkID0gVGltZS5wb3NpeFRvTWlsbGlzIG5vdwogICAgICAgICAgICAsIGJ1ZmZlcmluZyA9IEZhbHNlCgogICAgICAgICAgICAtLSwgcm91bmRMZW5ndGggOiBJbnQKICAgICAgICAgICAgfQogICAgaW4KICAgICggeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBuZXh0SWQgbmV3R2FtZSBtb2RlbC5rZ2dhbWVzIH0sIGJyb2FkY2FzdEdhbWUgbmV3R2FtZSApCgoKam9pbkdhbWUgOiBCYWNrZW5kTW9kZWwgLT4gUGxheWVyIC0+IEdhbWVJZCAtPiAoIEJhY2tlbmRNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQpqb2luR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkID0KICAgIGNhc2UgRGljdC5nZXQgZ2FtZUlkIG1vZGVsLmtnZ2FtZXMgb2YKICAgICAgICBKdXN0IGdhbWUgLT4KICAgICAgICAgICAgbGV0CiAgICAgICAgICAgICAgICBuZXdHYW1lID0KICAgICAgICAgICAgICAgICAgICB7IGdhbWUKICAgICAgICAgICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCA8fCBMaXN0Lm1lbWJlciBwbGF5ZXIgZ2FtZS5wbGF5ZXJzIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXIgOjogZ2FtZS5wbGF5ZXJzCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdhbWUucGxheWVycwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgaW4KICAgICAgICAgICAgKCB7IG1vZGVsIHwga2dnYW1lcyA9IERpY3QuaW5zZXJ0IGdhbWVJZCBuZXdHYW1lIG1vZGVsLmtnZ2FtZXMgfSwgYnJvYWRjYXN0R2FtZSBuZXdHYW1lICkKCiAgICAgICAgXyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKbGVhdmVHYW1lIDogQmFja2VuZE1vZGVsIC0+IFBsYXllciAtPiBHYW1lSWQgLT4gKCBCYWNrZW5kTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQgPQogICAgY2FzZSBEaWN0LmdldCBnYW1lSWQgbW9kZWwua2dnYW1lcyBvZgogICAgICAgIEp1c3QgZ2FtZSAtPgogICAgICAgICAgICBsZXQKICAgICAgICAgICAgICAgIG5ld0dhbWUgPQogICAgICAgICAgICAgICAgICAgIHsgZ2FtZQogICAgICAgICAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgTGlzdC5tZW1iZXIgcGxheWVyIGdhbWUucGxheWVycyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGlzdC5FeHRyYS5yZW1vdmUgcGxheWVyIGdhbWUucGxheWVycwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnYW1lLnBsYXllcnMKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGluCiAgICAgICAgICAgICggeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBnYW1lSWQgbmV3R2FtZSBtb2RlbC5rZ2dhbWVzIH0sIGJyb2FkY2FzdEdhbWUgbmV3R2FtZSApCgogICAgICAgIF8gLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCmluaXRpYWxMb2FkaW5nIDogQmFja2VuZE1vZGVsIC0+IEdhbWVJZCAtPiAoIEJhY2tlbmRNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQppbml0aWFsTG9hZGluZyBtb2RlbCBnYW1lSWQgPQogICAgY2FzZSBEaWN0LmdldCBnYW1lSWQgbW9kZWwua2dnYW1lcyBvZgogICAgICAgIEp1c3QgZ2FtZSAtPgogICAgICAgICAgICBjYXNlIGdhbWUuZ2FtZVN0YXRlIG9mCiAgICAgICAgICAgICAgICBMb2JieSBjb25maWcgLT4KICAgICAgICAgICAgICAgICAgICBsZXQKICAgICAgICAgICAgICAgICAgICAgICAgKCBuZXdTZWVkLCBrYW5qaUZvclRoaXNHYW1lLCBidWZmZXJlZEthbmppICkgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKFwoIHMsIHIgKSAtPiAoIHMsIExpc3QuZHJvcCBidWZmZXJTaXplIHIsIExpc3QudGFrZSBidWZmZXJTaXplIHIgKSkgPHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIGNvbmZpZy5rYW5qaVNldCBvZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKbHB0U2V0IGxldmVscyAtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGlzdC5maWx0ZXJNYXAgKFxuIC0+IERpY3QuZ2V0IG4gamxwdCkgbGV2ZWxzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfD4gTGlzdC5jb25jYXRNYXAgU3RyaW5nLnRvTGlzdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHw+IHNodWZmbGVTZWVkIG1vZGVsLnNlZWQKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEN1c3RvbUthbmppU2V0IGthbmppTGlzdCAtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCBtb2RlbC5zZWVkLCBrYW5qaUxpc3QgKQoKICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEthbmppID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpc3QuaGVhZCBidWZmZXJlZEthbmppIHw+IE1heWJlLndpdGhEZWZhdWx0ICfinYwnCgogICAgICAgICAgICAgICAgICAgICAgICBuZXdHYW1lU3RhdGUgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBjdXJyZW50S2FuamkgPSBjdXJyZW50S2FuamkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgcmVtYWluaW5nS2FuamkgPSBrYW5qaUZvclRoaXNHYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIGJ1ZmZlcmVkS2FuamkgPSBMaXN0LnRhaWwgYnVmZmVyZWRLYW5qaSB8PiBNYXliZS53aXRoRGVmYXVsdCBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLCBhbGxvd2VkV29yZHMgPSBEaWN0LmVtcHR5CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLS0sIGthbmppZGljID0gRGljdC5lbXB0eQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLCB0aW1lVGlsbFJvdW5kRW5kID0gY29uZmlnLnJvdW5kTGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIHRpbWVUaWxsR2FtZU92ZXIgPSBjb25maWcuc3RhcnRpbmdDb3VudGRvd24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgcm91bmRMZW5ndGggPSBjb25maWcucm91bmRMZW5ndGgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgc3RhcnRpbmdDb3VudGRvd24gPSBjb25maWcuc3RhcnRpbmdDb3VudGRvd24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgaW5pdGlhbEJ1ZmZlciA9IHsgYnVmZmVyU2l6ZSA9IGJ1ZmZlclNpemUsIGRvbmUgPSBTZXQuZW1wdHkgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLCBzaG93aW5nSGludHMgPSBjb25maWcuc2hvd2luZ0hpbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBuZXdHYW1lID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZ2FtZSB8IGdhbWVTdGF0ZSA9IExvYWRpbmcgPHwgbmV3R2FtZVN0YXRlLCBidWZmZXJpbmcgPSBUcnVlIH0KICAgICAgICAgICAgICAgICAgICBpbgogICAgICAgICAgICAgICAgICAgICggeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBnYW1lSWQgbmV3R2FtZSBtb2RlbC5rZ2dhbWVzLCBzZWVkID0gbmV3U2VlZCB9CiAgICAgICAgICAgICAgICAgICAgLCBDbWQuYmF0Y2gKICAgICAgICAgICAgICAgICAgICAgICAgWyBBcGlDYWxscy5nZXRBbGxUaGVXb3JkcyBnYW1lSWQgYnVmZmVyZWRLYW5qaQogICAgICAgICAgICAgICAgICAgICAgICAsIGlmIGNvbmZpZy5zaG93aW5nSGludHMgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQXBpQ2FsbHMuZ2V0S2FuamlzRGF0YWJhc2UgZ2FtZUlkIChidWZmZXJlZEthbmppIHw+IExpc3QubWFwIFN0cmluZy5mcm9tQ2hhcikKCiAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgQ21kLm5vbmUKICAgICAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3RHYW1lIG5ld0dhbWUKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBfIC0+CiAgICAgICAgICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBfIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgpsYXVuY2hQbGF5IDogQmFja2VuZE1vZGVsIC0+IEdhbWVJZCAtPiAoIEJhY2tlbmRNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQpsYXVuY2hQbGF5IG1vZGVsIGdhbWVJZCA9CiAgICBjYXNlIERpY3QuZ2V0IGdhbWVJZCBtb2RlbC5rZ2dhbWVzIG9mCiAgICAgICAgSnVzdCBnYW1lIC0+CiAgICAgICAgICAgIGNhc2UgZ2FtZS5nYW1lU3RhdGUgb2YKICAgICAgICAgICAgICAgIExvYWRpbmcgc3Vic3RhdGUgLT4KICAgICAgICAgICAgICAgICAgICBsZXQKICAgICAgICAgICAgICAgICAgICAgICAgbmV3R2FtZVN0YXRlID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc2NvcmUgPSAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIGN1cnJlbnRLYW5qaSA9IHN1YnN0YXRlLmN1cnJlbnRLYW5qaQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLCByZW1haW5pbmdLYW5qaSA9IHN1YnN0YXRlLnJlbWFpbmluZ0thbmppCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIGJ1ZmZlcmVkS2FuamkgPSBzdWJzdGF0ZS5idWZmZXJlZEthbmppCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIGthbmppU2VlbiA9IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIHdvcmRzID0gRGljdC5lbXB0eQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLCBhbGxvd2VkV29yZHMgPSBzdWJzdGF0ZS5hbGxvd2VkV29yZHMKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLSwga2FuamlkaWMgPSBzdWJzdGF0ZS5rYW5qaWRpYwogICAgICAgICAgICAgICAgICAgICAgICAgICAgLCByZXF1ZXN0ZWRTa2lwID0gW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgdGltZVRpbGxSb3VuZEVuZCA9IHN1YnN0YXRlLnJvdW5kTGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIHRpbWVUaWxsR2FtZU92ZXIgPSBzdWJzdGF0ZS5zdGFydGluZ0NvdW50ZG93bgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLCByb3VuZExlbmd0aCA9IHN1YnN0YXRlLnJvdW5kTGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIHN0YXJ0aW5nQ291bnRkb3duID0gc3Vic3RhdGUuc3RhcnRpbmdDb3VudGRvd24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgc2hvd2luZ0hpbnRzID0gc3Vic3RhdGUuc2hvd2luZ0hpbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBuZXdHYW1lID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZ2FtZSB8IGdhbWVTdGF0ZSA9IEluUGxheSA8fCBuZXdHYW1lU3RhdGUgfQogICAgICAgICAgICAgICAgICAgIGluCiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwga2dnYW1lcyA9IERpY3QuaW5zZXJ0IGdhbWVJZCBuZXdHYW1lIG1vZGVsLmtnZ2FtZXMgfQogICAgICAgICAgICAgICAgICAgICwgQ21kLmJhdGNoCiAgICAgICAgICAgICAgICAgICAgICAgIFsgYnJvYWRjYXN0R2FtZSBuZXdHYW1lCiAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgXyAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCiAgICAgICAgXyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKcnVuR2FtZXMgOiBCYWNrZW5kTW9kZWwgLT4gVGltZS5Qb3NpeCAtPiAoIEJhY2tlbmRNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQpydW5HYW1lcyBtb2RlbCBub3cgPQogICAgTGlzdC5mb2xkcgogICAgICAgIChcZyAoIGN1cnJlbnRNb2RlbCwgY21kcyApIC0+CiAgICAgICAgICAgIGlmIGdhbWVSdW5uaW5nIGcgdGhlbgogICAgICAgICAgICAgICAgbGV0CiAgICAgICAgICAgICAgICAgICAgKCBuZXdNb2RlbCwgbmV3Q21kICkgPQogICAgICAgICAgICAgICAgICAgICAgICBydW5HYW1lIGN1cnJlbnRNb2RlbCBub3cgZy5nYW1lSWQKICAgICAgICAgICAgICAgIGluCiAgICAgICAgICAgICAgICAoIHsgY3VycmVudE1vZGVsIHwga2dnYW1lcyA9IG5ld01vZGVsLmtnZ2FtZXMgfQogICAgICAgICAgICAgICAgLCBuZXdDbWQgOjogY21kcwogICAgICAgICAgICAgICAgKQoKICAgICAgICAgICAgZWxzZSBpZiBnYW1lT3JwaGFuZWQgbW9kZWwucGxheWVycyBub3cgZyB0aGVuCiAgICAgICAgICAgICAgICAoIHsgY3VycmVudE1vZGVsIHwga2dnYW1lcyA9IERpY3QucmVtb3ZlIGcuZ2FtZUlkIGN1cnJlbnRNb2RlbC5rZ2dhbWVzIH0sIGNtZHMgKQoKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgKCBjdXJyZW50TW9kZWwsIGNtZHMgKQogICAgICAgICkKICAgICAgICAoIG1vZGVsLCBbXSApCiAgICAgICAgKERpY3QudmFsdWVzIG1vZGVsLmtnZ2FtZXMpCiAgICAgICAgfD4gVHVwbGUubWFwU2Vjb25kIENtZC5iYXRjaAoKCnJ1bkdhbWUgOiBCYWNrZW5kTW9kZWwgLT4gVGltZS5Qb3NpeCAtPiBHYW1lSWQgLT4gKCBCYWNrZW5kTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkID0KICAgIGNhc2UgRGljdC5nZXQgZ2FtZUlkIG1vZGVsLmtnZ2FtZXMgb2YKICAgICAgICBKdXN0IGdhbWUgLT4KICAgICAgICAgICAgbGV0CiAgICAgICAgICAgICAgICB0aW1lU3RhbXBlZE1vZGVsID0KICAgICAgICAgICAgICAgICAgICBhZGRUaW1lU3RhbXBNb2RlbCBtb2RlbCBnYW1lSWQgbm93CiAgICAgICAgICAgIGluCiAgICAgICAgICAgIGNhc2UgZ2FtZS5nYW1lU3RhdGUgb2YKICAgICAgICAgICAgICAgIExvYmJ5IGNvbmZpZyAtPgogICAgICAgICAgICAgICAgICAgIGluaXRpYWxMb2FkaW5nIHRpbWVTdGFtcGVkTW9kZWwgZ2FtZUlkCgogICAgICAgICAgICAgICAgTG9hZGluZyBzdWJzdGF0ZSAtPgogICAgICAgICAgICAgICAgICAgIGxhdW5jaFBsYXkgdGltZVN0YW1wZWRNb2RlbCBnYW1lSWQKCiAgICAgICAgICAgICAgICBJblBsYXkgXyAtPgogICAgICAgICAgICAgICAgICAgIHRvTmV4dFJvdW5kIHRpbWVTdGFtcGVkTW9kZWwgZ2FtZUlkCgogICAgICAgICAgICAgICAgVmljdG9yeSBfIC0+CiAgICAgICAgICAgICAgICAgICAgY2xlYW5HYW1lIHRpbWVTdGFtcGVkTW9kZWwgZ2FtZUlkCgogICAgICAgICAgICAgICAgR2FtZU92ZXIgXyAtPgogICAgICAgICAgICAgICAgICAgIGNsZWFuR2FtZSB0aW1lU3RhbXBlZE1vZGVsIGdhbWVJZAoKICAgICAgICBfIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgpyZXF1ZXN0TmV4dEthbmppIDogQmFja2VuZE1vZGVsIC0+IEdhbWVJZCAtPiBQbGF5ZXIgLT4gKCBCYWNrZW5kTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKcmVxdWVzdE5leHRLYW5qaSBtb2RlbCBnYW1lSWQgcGxheWVyID0KICAgIGNhc2UgRGljdC5nZXQgZ2FtZUlkIG1vZGVsLmtnZ2FtZXMgb2YKICAgICAgICBKdXN0IGdhbWUgLT4KICAgICAgICAgICAgaWYgZ2FtZS5idWZmZXJpbmcgdGhlbgogICAgICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgY2FzZSBnYW1lLmdhbWVTdGF0ZSBvZgogICAgICAgICAgICAgICAgICAgIEluUGxheSBzdWJzdGF0ZSAtPgogICAgICAgICAgICAgICAgICAgICAgICBsZXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0dhbWVTdGF0ZSA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW5QbGF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3Vic3RhdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgcmVxdWVzdGVkU2tpcCA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IDx8IExpc3QubWVtYmVyIHBsYXllciBzdWJzdGF0ZS5yZXF1ZXN0ZWRTa2lwIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyIDo6IHN1YnN0YXRlLnJlcXVlc3RlZFNraXAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJzdGF0ZS5yZXF1ZXN0ZWRTa2lwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdHYW1lID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGdhbWUgfCBnYW1lU3RhdGUgPSBuZXdHYW1lU3RhdGUgfQogICAgICAgICAgICAgICAgICAgICAgICBpbgogICAgICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBrZ2dhbWVzID0gRGljdC5pbnNlcnQgZ2FtZUlkIG5ld0dhbWUgbW9kZWwua2dnYW1lcyB9LCBicm9hZGNhc3RHYW1lIG5ld0dhbWUgKQoKICAgICAgICAgICAgICAgICAgICBfIC0+CiAgICAgICAgICAgICAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCiAgICAgICAgXyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKYWxsUGxheWVyUmVxdWVzdGVkTmV4dEthbmppIGdhbWUgPQogICAgY2FzZSBnYW1lLmdhbWVTdGF0ZSBvZgogICAgICAgIEluUGxheSBzdWJzdGF0ZSAtPgogICAgICAgICAgICBTZXQuZnJvbUxpc3QgKExpc3QubWFwIC5pZCBnYW1lLnBsYXllcnMpID09IFNldC5mcm9tTGlzdCAoTGlzdC5tYXAgLmlkIHN1YnN0YXRlLnJlcXVlc3RlZFNraXApCgogICAgICAgIF8gLT4KICAgICAgICAgICAgRmFsc2UKCgphZGRXb3JkIDogQmFja2VuZE1vZGVsIC0+IEdhbWVJZCAtPiBQbGF5ZXIgLT4gU3RyaW5nIC0+ICggQmFja2VuZE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkID0KICAgIGNhc2UgRGljdC5nZXQgZ2FtZUlkIG1vZGVsLmtnZ2FtZXMgb2YKICAgICAgICBKdXN0IGdhbWUgLT4KICAgICAgICAgICAgY2FzZSBnYW1lLmdhbWVTdGF0ZSBvZgogICAgICAgICAgICAgICAgSW5QbGF5IHN1YnN0YXRlIC0+CiAgICAgICAgICAgICAgICAgICAgbGV0CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRXb3JkcyA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEaWN0LmdldCBwbGF5ZXIuaWQgc3Vic3RhdGUud29yZHMgfD4gTWF5YmUud2l0aERlZmF1bHQgW10KCiAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlck9mUGxheWVycyA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMaXN0Lmxlbmd0aCBnYW1lLnBsYXllcnMKCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVCb251cyA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbG9vciAoMTAgLyB0b0Zsb2F0IG51bWJlck9mUGxheWVycykKCiAgICAgICAgICAgICAgICAgICAgICAgIHJvdW5kVGltZUJvbnVzID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb29yICg1IC8gdG9GbG9hdCBudW1iZXJPZlBsYXllcnMpCgogICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVHYW1lIG5zID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0dhbWUgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGdhbWUgfCBnYW1lU3RhdGUgPSBJblBsYXkgbnMgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICggeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBnYW1lSWQgbmV3R2FtZSBtb2RlbC5rZ2dhbWVzIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgQ21kLmJhdGNoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWyBicm9hZGNhc3RHYW1lIG5ld0dhbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIGlmIG5vdCA8fCBjYW5BZGRXb3JkIHdvcmQgZ2FtZSB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRUb0Zyb250ZW5kIHBsYXllci5pZCAoV3JvbmdXb3JkVEYgd29yZCkKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENtZC5ub25lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICAgICAgICAgICAgICAgICAgbmV3U3Vic3RhdGUgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgY2FuQWRkV29yZCB3b3JkIGdhbWUgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3Vic3RhdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBzY29yZSA9IHN1YnN0YXRlLnNjb3JlICsgMTAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCB3b3JkcyA9IERpY3QuaW5zZXJ0IHBsYXllci5pZCAod29yZCA6OiBjdXJyZW50V29yZHMpIHN1YnN0YXRlLndvcmRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgdGltZVRpbGxSb3VuZEVuZCA9IHN1YnN0YXRlLnRpbWVUaWxsUm91bmRFbmQgKyByb3VuZFRpbWVCb251cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIHRpbWVUaWxsR2FtZU92ZXIgPSBzdWJzdGF0ZS50aW1lVGlsbEdhbWVPdmVyICsgdGltZUJvbnVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN1YnN0YXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdGltZVRpbGxSb3VuZEVuZCA9IHN1YnN0YXRlLnRpbWVUaWxsUm91bmRFbmQgLSByb3VuZFRpbWVCb251cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIHRpbWVUaWxsR2FtZU92ZXIgPSBzdWJzdGF0ZS50aW1lVGlsbEdhbWVPdmVyIC0gdGltZUJvbnVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGluCiAgICAgICAgICAgICAgICAgICAgdXBkYXRlR2FtZSBuZXdTdWJzdGF0ZQoKICAgICAgICAgICAgICAgIF8gLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIE5vdGhpbmcgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCmNhbkFkZFdvcmQgOiBTdHJpbmcgLT4gS2FuamlHdWVzc2luZ0dhbWUgLT4gQm9vbApjYW5BZGRXb3JkIHdvcmQgZ2FtZSA9CiAgICBjYXNlIGdhbWUuZ2FtZVN0YXRlIG9mCiAgICAgICAgSW5QbGF5IHN1YnN0YXRlIC0+CiAgICAgICAgICAgIGNhc2UgRGljdC5nZXQgc3Vic3RhdGUuY3VycmVudEthbmppIHN1YnN0YXRlLmFsbG93ZWRXb3JkcyBvZgogICAgICAgICAgICAgICAgSnVzdCByZWxldmFudEFsbG93ZWRXb3JkcyAtPgogICAgICAgICAgICAgICAgICAgIChub3QgPHwgTGlzdC5tZW1iZXIgd29yZCAoTGlzdC5jb25jYXQgPHwgRGljdC52YWx1ZXMgc3Vic3RhdGUud29yZHMpKQogICAgICAgICAgICAgICAgICAgICAgICAmJiBMaXN0Lm1lbWJlciB3b3JkIHJlbGV2YW50QWxsb3dlZFdvcmRzCgogICAgICAgICAgICAgICAgXyAtPgogICAgICAgICAgICAgICAgICAgIEZhbHNlCgogICAgICAgIF8gLT4KICAgICAgICAgICAgRmFsc2UKCgp0b05leHRSb3VuZCA6IEJhY2tlbmRNb2RlbCAtPiBHYW1lSWQgLT4gKCBCYWNrZW5kTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdG9OZXh0Um91bmQgbW9kZWwgZ2FtZUlkID0KICAgIGNhc2UgRGljdC5nZXQgZ2FtZUlkIG1vZGVsLmtnZ2FtZXMgb2YKICAgICAgICBKdXN0IGdhbWUgLT4KICAgICAgICAgICAgY2FzZSBnYW1lLmdhbWVTdGF0ZSBvZgogICAgICAgICAgICAgICAgSW5QbGF5IHN1YnN0YXRlIC0+CiAgICAgICAgICAgICAgICAgICAgLS1pZiBzdWJzdGF0ZS5pbml0aWFsQnVmZmVyLmJ1ZmZlclNpemUgLz0gU2V0LnNpemUgc3Vic3RhdGUuaW5pdGlhbEJ1ZmZlci5kb25lIHRoZW4KICAgICAgICAgICAgICAgICAgICAtLSAgICAoIG1vZGVsLCBDbWQubm9uZSApCiAgICAgICAgICAgICAgICAgICAgLS1lbHNlCiAgICAgICAgICAgICAgICAgICAgbGV0CiAgICAgICAgICAgICAgICAgICAgICAgIG5vTW9yZVRpbWUgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Vic3RhdGUudGltZVRpbGxHYW1lT3ZlciA8PSAxCgogICAgICAgICAgICAgICAgICAgICAgICByb3VuZE92ZXIgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Vic3RhdGUudGltZVRpbGxSb3VuZEVuZCA8PSAxCgogICAgICAgICAgICAgICAgICAgICAgICBuZXdHYW1lU3RhdGUgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdWJzdGF0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdGltZVRpbGxSb3VuZEVuZCA9IG1heCAwIDx8IHN1YnN0YXRlLnRpbWVUaWxsUm91bmRFbmQgLSAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCB0aW1lVGlsbEdhbWVPdmVyID0gbWF4IDAgPHwgc3Vic3RhdGUudGltZVRpbGxHYW1lT3ZlciAtIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUdhbWUgZ3MgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3R2FtZSA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZ2FtZSB8IGdhbWVTdGF0ZSA9IEluUGxheSBncyB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBnYW1lSWQgbmV3R2FtZSBtb2RlbC5rZ2dhbWVzIH0KICAgICAgICAgICAgICAgICAgICBpbgogICAgICAgICAgICAgICAgICAgIGlmIG5vTW9yZVRpbWUgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICBsZXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0dhbWUgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZ2FtZSB8IGdhbWVTdGF0ZSA9IEdhbWVPdmVyIHsgc2NvcmUgPSBzdWJzdGF0ZS5zY29yZSwgIHdvcmRzID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERpY3QudmFsdWVzIHN1YnN0YXRlLndvcmRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfD4gTGlzdC5jb25jYXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8PiBMaXN0Lm1hcCAoXHcgLT4gKCB3LCBbXSApKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHw+IERpY3QuZnJvbUxpc3QgfSB9CiAgICAgICAgICAgICAgICAgICAgICAgIGluCiAgICAgICAgICAgICAgICAgICAgICAgICggeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBnYW1lSWQgbmV3R2FtZSBtb2RlbC5rZ2dhbWVzIH0sIGJyb2FkY2FzdEdhbWUgbmV3R2FtZSApCgogICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgYWxsUGxheWVyUmVxdWVzdGVkTmV4dEthbmppIGdhbWUgJiYgKG5vdCA8fCBnYW1lLmJ1ZmZlcmluZykgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICBsb2FkTmV4dEthbmppICh1cGRhdGVHYW1lIHsgbmV3R2FtZVN0YXRlIHwgcmVxdWVzdGVkU2tpcCA9IFtdIH0pIGdhbWVJZAoKICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIHJvdW5kT3ZlciB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWROZXh0S2FuamkgKHVwZGF0ZUdhbWUgbmV3R2FtZVN0YXRlKSBnYW1lSWQKCiAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAoIHVwZGF0ZUdhbWUgbmV3R2FtZVN0YXRlLCBicm9hZGNhc3RHYW1lVGltZXMgeyBnYW1lIHwgZ2FtZVN0YXRlID0gSW5QbGF5IG5ld0dhbWVTdGF0ZSB9ICkKCiAgICAgICAgICAgICAgICBfIC0+CiAgICAgICAgICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBfIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgpsb2FkTmV4dEthbmppIDogQmFja2VuZE1vZGVsIC0+IEdhbWVJZCAtPiAoIEJhY2tlbmRNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQpsb2FkTmV4dEthbmppIG1vZGVsIGdhbWVJZCA9CiAgICBjYXNlIERpY3QuZ2V0IGdhbWVJZCBtb2RlbC5rZ2dhbWVzIG9mCiAgICAgICAgSnVzdCBnYW1lIC0+CiAgICAgICAgICAgIGNhc2UgZ2FtZS5nYW1lU3RhdGUgb2YKICAgICAgICAgICAgICAgIEluUGxheSBzdWJzdGF0ZSAtPgogICAgICAgICAgICAgICAgICAgIGxldAogICAgICAgICAgICAgICAgICAgICAgICBtYk5leHRLYW5qaVRvQnVmZmVyID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpc3QuaGVhZCBzdWJzdGF0ZS5yZW1haW5pbmdLYW5qaQoKICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlR2FtZSBuZ3MgYnVmZmVyaW5nIGNtZCA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdHYW1lID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBnYW1lIHwgZ2FtZVN0YXRlID0gbmdzLCBidWZmZXJpbmcgPSBidWZmZXJpbmcgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICggeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBnYW1lSWQgbmV3R2FtZSBtb2RlbC5rZ2dhbWVzIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgQ21kLmJhdGNoIFsgYnJvYWRjYXN0R2FtZSBuZXdHYW1lLCBjbWQgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIGluCiAgICAgICAgICAgICAgICAgICAgY2FzZSBzdWJzdGF0ZS5idWZmZXJlZEthbmppIG9mCiAgICAgICAgICAgICAgICAgICAgICAgIFtdIC0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVHYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKFZpY3RvcnkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzY29yZSA9IHN1YnN0YXRlLnNjb3JlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgd29yZHMgPQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGljdC52YWx1ZXMgc3Vic3RhdGUud29yZHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8PiBMaXN0LmNvbmNhdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHw+IExpc3QubWFwIChcdyAtPiAoIHcsIFtdICkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfD4gRGljdC5mcm9tTGlzdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ21kLm5vbmUKCiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRLYW5qaSA6OiB0YWlsIC0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVHYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKEluUGxheQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN1YnN0YXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGN1cnJlbnRLYW5qaSA9IG5leHRLYW5qaQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCBrYW5qaVNlZW4gPSBzdWJzdGF0ZS5jdXJyZW50S2FuamkgOjogc3Vic3RhdGUua2FuamlTZWVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIHRpbWVUaWxsUm91bmRFbmQgPSBzdWJzdGF0ZS5yb3VuZExlbmd0aAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCByZW1haW5pbmdLYW5qaSA9IExpc3QudGFpbCBzdWJzdGF0ZS5yZW1haW5pbmdLYW5qaSB8PiBNYXliZS53aXRoRGVmYXVsdCBbXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCBidWZmZXJlZEthbmppID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXliZS5tYXAgKFxua2IgLT4gdGFpbCArKyBbIG5rYiBdKSBtYk5leHRLYW5qaVRvQnVmZmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHw+IE1heWJlLndpdGhEZWZhdWx0IHN1YnN0YXRlLmJ1ZmZlcmVkS2FuamkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKENtZC5iYXRjaAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbIE1heWJlLm1hcCAoXG5rYiAtPiBBcGlDYWxscy5nZXRXb3JkcyBnYW1lSWQgbmtiKSBtYk5leHRLYW5qaVRvQnVmZmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8PiBNYXliZS53aXRoRGVmYXVsdCBDbWQubm9uZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsIGlmIHN1YnN0YXRlLnNob3dpbmdIaW50cyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXliZS5tYXAgKFxua2IgLT4gQXBpQ2FsbHMuZ2V0S2FuamlzRGF0YWJhc2UgZ2FtZUlkIFsgU3RyaW5nLmZyb21DaGFyIG5rYiBdKSBtYk5leHRLYW5qaVRvQnVmZmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfD4gTWF5YmUud2l0aERlZmF1bHQgQ21kLm5vbmUKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ21kLm5vbmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBfIC0+CiAgICAgICAgICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBOb3RoaW5nIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgpjbGVhbkdhbWUgOiBCYWNrZW5kTW9kZWwgLT4gR2FtZUlkIC0+ICggQmFja2VuZE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmNsZWFuR2FtZSBtb2RlbCBnYW1lSWQgPQogICAgKCB7IG1vZGVsIHwga2dnYW1lcyA9IERpY3QucmVtb3ZlIGdhbWVJZCBtb2RlbC5rZ2dhbWVzIH0sIENtZC5ub25lICkKCgpnYW1lT3JwaGFuZWQgOgogICAgRGljdC5EaWN0CiAgICAgICAgTGFtZGVyYS5TZXNzaW9uSWQKICAgICAgICB7IHBsYXllciA6IFBsYXllcgogICAgICAgICwgcGhwU2Vzc2lvbklkIDogUGhwU2Vzc2lvbklkCiAgICAgICAgfQogICAgLT4gVGltZS5Qb3NpeAogICAgLT4gS2FuamlHdWVzc2luZ0dhbWUKICAgIC0+IEJvb2wKZ2FtZU9ycGhhbmVkIHBsYXllcnMgbm93IGdhbWUgPQogICAgbGV0CiAgICAgICAgY3VycmVudFBsYXllcnMgPQogICAgICAgICAgICBEaWN0LnZhbHVlcyBwbGF5ZXJzCiAgICAgICAgICAgICAgICB8PiBMaXN0Lm1hcCAucGxheWVyCgogICAgICAgIHRvb09sZCA9CiAgICAgICAgICAgIFRpbWUucG9zaXhUb01pbGxpcyBub3cgLSBnYW1lLmxhc3RVcGRhdGVkID4gMTAwMCAqIDYwCiAgICBpbgogICAgKG5vdCA8fCBMaXN0Lm1lbWJlciBnYW1lLmhvc3QgY3VycmVudFBsYXllcnMpIHx8IHRvb09sZAoKCmdhbWVSdW5uaW5nIDogS2FuamlHdWVzc2luZ0dhbWUgLT4gQm9vbApnYW1lUnVubmluZyBnYW1lID0KICAgIGNhc2UgZ2FtZS5nYW1lU3RhdGUgb2YKICAgICAgICBJblBsYXkgXyAtPgogICAgICAgICAgICBUcnVlCgogICAgICAgIEdhbWVPdmVyIF8gLT4KICAgICAgICAgICAgVHJ1ZQoKICAgICAgICBWaWN0b3J5IF8gLT4KICAgICAgICAgICAgVHJ1ZQoKICAgICAgICBfIC0+CiAgICAgICAgICAgIEZhbHNlCgoKZ2FtZXNSdW5uaW5nIDogQmFja2VuZE1vZGVsIC0+IEJvb2wKZ2FtZXNSdW5uaW5nIHsga2dnYW1lcyB9ID0KICAgIExpc3QuYW55CiAgICAgICAgKFxnIC0+CiAgICAgICAgICAgIGNhc2UgZy5nYW1lU3RhdGUgb2YKICAgICAgICAgICAgICAgIEluUGxheSBfIC0+CiAgICAgICAgICAgICAgICAgICAgVHJ1ZQoKICAgICAgICAgICAgICAgIF8gLT4KICAgICAgICAgICAgICAgICAgICBGYWxzZQogICAgICAgICkKICAgICAgICAoRGljdC52YWx1ZXMga2dnYW1lcykKCgphZGRUaW1lU3RhbXAgOiBLYW5qaUd1ZXNzaW5nR2FtZSAtPiBUaW1lLlBvc2l4IC0+IEthbmppR3Vlc3NpbmdHYW1lCmFkZFRpbWVTdGFtcCBnYW1lIG5vdyA9CiAgICB7IGdhbWUgfCBsYXN0VXBkYXRlZCA9IFRpbWUucG9zaXhUb01pbGxpcyBub3cgfQoKCmFkZFRpbWVTdGFtcE1vZGVsIDogQmFja2VuZE1vZGVsIC0+IEdhbWVJZCAtPiBUaW1lLlBvc2l4IC0+IEJhY2tlbmRNb2RlbAphZGRUaW1lU3RhbXBNb2RlbCBtb2RlbCBnYW1lSWQgbm93ID0KICAgIGNhc2UgRGljdC5nZXQgZ2FtZUlkIG1vZGVsLmtnZ2FtZXMgb2YKICAgICAgICBKdXN0IGdhbWUgLT4KICAgICAgICAgICAgeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBnYW1lSWQgeyBnYW1lIHwgbGFzdFVwZGF0ZWQgPSBUaW1lLnBvc2l4VG9NaWxsaXMgbm93IH0gbW9kZWwua2dnYW1lcyB9CgogICAgICAgIF8gLT4KICAgICAgICAgICAgbW9kZWwKCgppbml0aWFsR2FtZXNCcm9hZGNhc3QgOiBCYWNrZW5kTW9kZWwgLT4gQ2xpZW50SWQgLT4gQ21kIEJhY2tlbmRNc2cKaW5pdGlhbEdhbWVzQnJvYWRjYXN0IG1vZGVsIGNsaWVudElkID0KICAgIGxldAogICAgICAgIGdhbWVTdGF0ZUxpZ2h0IGcgPQogICAgICAgICAgICBjYXNlIGcuZ2FtZVN0YXRlIG9mCiAgICAgICAgICAgICAgICBJblBsYXkgc3Vic3RhdGUgLT4KICAgICAgICAgICAgICAgICAgICBJblBsYXkgeyBzdWJzdGF0ZSB8IGFsbG93ZWRXb3JkcyA9IERpY3QuZW1wdHksIHJlbWFpbmluZ0thbmppID0gW10gfQoKICAgICAgICAgICAgICAgIF8gLT4KICAgICAgICAgICAgICAgICAgICBnLmdhbWVTdGF0ZQogICAgaW4KICAgIERpY3QudmFsdWVzIG1vZGVsLmtnZ2FtZXMKICAgICAgICB8PiBMaXN0Lm1hcCAoXGcgLT4geyBnIHwgZ2FtZVN0YXRlID0gZ2FtZVN0YXRlTGlnaHQgZyB9KQogICAgICAgIHw+IExpc3QubWFwIChzZW5kVG9Gcm9udGVuZCBjbGllbnRJZCA8PCBHYW1lQnJvYWRjYXN0VEYpCiAgICAgICAgfD4gQ21kLmJhdGNoCgoKYnJvYWRjYXN0R2FtZSA6IEthbmppR3Vlc3NpbmdHYW1lIC0+IENtZCBCYWNrZW5kTXNnCmJyb2FkY2FzdEdhbWUgZ2FtZSA9CiAgICBsZXQKICAgICAgICBnYW1lU3RhdGVMaWdodCA9CiAgICAgICAgICAgIGNhc2UgZ2FtZS5nYW1lU3RhdGUgb2YKICAgICAgICAgICAgICAgIEluUGxheSBzdWJzdGF0ZSAtPgogICAgICAgICAgICAgICAgICAgIEluUGxheSB7IHN1YnN0YXRlIHwgYWxsb3dlZFdvcmRzID0gRGljdC5lbXB0eSwgcmVtYWluaW5nS2FuamkgPSBbXSB9CgogICAgICAgICAgICAgICAgXyAtPgogICAgICAgICAgICAgICAgICAgIGdhbWUuZ2FtZVN0YXRlCiAgICBpbgogICAgYnJvYWRjYXN0IDx8IEdhbWVCcm9hZGNhc3RURiB7IGdhbWUgfCBnYW1lU3RhdGUgPSBnYW1lU3RhdGVMaWdodCB9CgoKYnJvYWRjYXN0R2FtZVRpbWVzIDogS2FuamlHdWVzc2luZ0dhbWUgLT4gQ21kIEJhY2tlbmRNc2cKYnJvYWRjYXN0R2FtZVRpbWVzIGdhbWUgPQogICAgY2FzZSBnYW1lLmdhbWVTdGF0ZSBvZgogICAgICAgIEluUGxheSBzdWJzdGF0ZSAtPgogICAgICAgICAgICBicm9hZGNhc3QgPHwKICAgICAgICAgICAgICAgIEdhbWVUaW1lc0Jyb2FkY2FzdFRGCiAgICAgICAgICAgICAgICAgICAgeyBnYW1lSWQgPSBnYW1lLmdhbWVJZAogICAgICAgICAgICAgICAgICAgICwgbGFzdFVwZGF0ZWQgPSBnYW1lLmxhc3RVcGRhdGVkCiAgICAgICAgICAgICAgICAgICAgLCB0aW1lVGlsbEdhbWVPdmVyID0gc3Vic3RhdGUudGltZVRpbGxHYW1lT3ZlcgogICAgICAgICAgICAgICAgICAgICwgdGltZVRpbGxSb3VuZEVuZCA9IHN1YnN0YXRlLnRpbWVUaWxsUm91bmRFbmQKICAgICAgICAgICAgICAgICAgICAsIGJ1ZmZlcmluZyA9IGdhbWUuYnVmZmVyaW5nCiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICBfIC0+CiAgICAgICAgICAgIENtZC5ub25lCgoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgpyYW5kb21KTFBUS2FuamlMaXN0IDogUmFuZG9tLlNlZWQgLT4gSW50IC0+ICggUmFuZG9tLlNlZWQsIExpc3QgQ2hhciApCnJhbmRvbUpMUFRLYW5qaUxpc3Qgc2VlZCBsZXZlbCA9CiAgICBjYXNlIERpY3QuZ2V0IGxldmVsIGpscHQgb2YKICAgICAgICBKdXN0IGthbmppU3RyIC0+CiAgICAgICAgICAgIHNodWZmbGVTZWVkIHNlZWQgKFN0cmluZy50b0xpc3Qga2FuamlTdHIpCgogICAgICAgIF8gLT4KICAgICAgICAgICAgKCBzZWVkLCBbXSApCgoKamxwdCA9CiAgICBEaWN0LmZyb21MaXN0CiAgICAgICAgWyAoIDUsICLml6XkuIDlm73kurrlubTlpKfljYHkuozmnKzkuK3plbflh7rkuInmmYLooYzopovmnIjliIblvozliY3nlJ/kupTplpPkuIrmnbHlm5vku4rph5HkuZ3lhaXlrabpq5jlhoblrZDlpJblhavlha3kuIvmnaXmsJflsI/kuIPlsbHoqbHlpbPljJfljYjnmb7mm7jlhYjlkI3lt53ljYPmsLTljYrnlLfopb/pm7vmoKHoqp7lnJ/mnKjogZ7po5/ou4rkvZXljZfkuIfmr47nmb3lpKnmr43ngavlj7Poqq3lj4vlt6bkvJHniLbpm6jlupfmlZnlo7Lnn6XotbfoqIAiICkKICAgICAgICAsICggNCwgIuS8muWQjOS6i+iHquekvueZuuiAheWcsOalreaWueaWsOWgtOWToeeri+mWi+aJi+WKm+WVj+S7o+aYjuWLleS6rOebrumAmueQhuS9k+eUsOS4u+mhjOaEj+S4jeS9nOeUqOW6puW8t+WFrOaMgemHjuS7peaAneWutuS4luWkmuato+WuiemZouW/g+eVjOaWh+WFg+mHjei/keiAg+eUu+a1t+mBk+mbhuWIpeeJqeS9v+WTgeioiOatu+eJueengeWni+acnemBi+e1guWPsOW6g+S9j+eEoeecn+acieWPo+WwkeeUuuaWmeW3peW7uuepuuaApeatoumAgeWIh+i7oueglOi2s+eptualveedgOeXheizquW+heippuaXj+mKgOaXqeaYoOimqumok+iLseWMu+S7leWOu+WRs+WGmeWtl+etlOWknOmfs+azqOW4sOWPpOatjOiyt+aCquWbs+mAseWupOatqemiqOe0mem7kuiKseaYpei1pOmdkumkqOWxi+iJsui1sOeni+Wkj+e/kumnhea0i+aXheacjeWkleWAn+abnOmjsuiCieiyuOWggumzpemjr+WLieWGrOaYvOiMtuW8n+eJm+mtmuWFhOeKrOWmueWniea8oiIgKQogICAgICAgICwgKCAzLCAi5pS/6K2w5rCR6YCj5a++6YOo5ZCI5biC5YaF55u45a6a5Zue6YG457Gz5a6f6Zai5rG65YWo6KGo5oim57WM5pyA54++6Kq/5YyW5b2T57SE6aaW5rOV5oCn55qE6KaB5Yi25rK75YuZ5oiQ5pyf5Y+W6YO95ZKM5qmf5bmz5Yqg5Y+X57aa6YCy5pWw6KiY5Yid5oyH5qip5pSv55Sj54K55aCx5riI5rS75Y6f5YWx5b6X6Kej5Lqk6LOH5LqI5ZCR6Zqb5Yud6Z2i5ZGK5Y+N5Yik6KqN5Y+C5Yip57WE5L+h5Zyo5Lu25YG05Lu75byV5rGC5omA5qyh5pio6KuW5a6Y5aKX5L+C5oSf5oOF5oqV56S65aSJ5omT55u05Lih5byP56K65p6c5a655b+F5ryU5q2z5LqJ6KuH6IO95L2N572u5rWB5qC855aR6YGO5bGA5pS+5bi454q255CD6IG35LiO5L6b5b255qeL5Ymy6Lqr6LK75LuY55Sx6Kqs6Zuj5YSq5aSr5Y+O5pat55+z6YGV5raI56We55Wq6KaP6KGT5YKZ5a6F5a6z6YWN6K2m6IKy5bit6Kiq5LmX5q6L5oOz5aOw5Yqp5Yq05L6L54S26ZmQ6L+95ZWG6JGJ5Lyd5YON5b2i5pmv6JC95aW96YCA6aCt6LKg5rih5aSx5beu5pyr5a6I6Iul56iu576O5ZG956aP5pyb6Z2e6Kaz5a+f5q615qiq5rex55Sz5qeY6LKh5riv6K2Y5ZG86YGU6Imv6Ziq5YCZ56iL5rqA5pWX5YCk56qB5YWJ6Lev56eR56mN5LuW5Yem5aSq5a6i5ZCm5bir55m75piT6YCf5a2Y6aOb5q665Y+35Y2Y5bqn56C06Zmk5a6M6ZmN6LKs5o2V5Y2x57Wm6Ium6L+O5ZyS5YW36L6e5Zug6aas5oSb5a+M5b285pyq6Iie5Lqh5Ya36YGp5amm5a+E6L686aGU6aGe5L2Z546L6L+U5aa76IOM54ax5a6/6Jas6Zm66aC86Kaa6Ii56YCU6Kix5oqc5L6/55WZ572q5Yqq57K+5pWj6Z2Z5ama5Zac5rWu57W25bm45oq85YCS562J6ICB5puy5omV5bqt5b6S5Yuk6YGF5bGF6ZuR5oub5Zuw5qyg5pu05Yi76LOb5oqx54qv5oGQ5oGv6YGg5oi76aGY57W16LaK5qyy55eb56yR5LqS5p2f5Ly85YiX5o6i6YCD6YGK6L+35aSi5ZCb6ZaJ57eS5oqY6I2J5pqu6YWS5oKy5pm05o6b5Yiw5a+d5pqX55uX5ZC46Zm95b6h5q2v5b+Y6Zuq5ZC55aiY6Kqk5rSX5oWj56S856qT5piU6LKn5oCS5rOz56WW5p2v55ay55qG6bO06IW554WZ55yg5oCW6ICz6aCC566x5pmp5a+S6auq5b+Z5omN6Z205oGl5YG25YGJ54yr5bm+6KqwIiApCiAgICAgICAgLCAoIDIsICLlhZrljZTnt4/ljLrpoJjnnIzoqK3kv53mlLnnrKzntZDmtL7lupzmn7vlp5Tou43moYjnrZblm6PlkITls7bpnanmnZHli6LmuJvlho3nqI7llrbmr5TpmLLoo5zlooPlsI7lia/nrpfovLjov7Dnt5rovrLlt57mrabosaHln5/poY3mrKfmi4Xmupbos57ovrrpgKDooqvmioDkvY7lvqnnp7vlgIvploDoqrLohLPmpbXlkKvolLXph4/lnovms4Hph53lsILosLflj7Lpmo7nrqHlhbXmjqXntLDlirnkuLjmub7pjLLnnIHml6fmqYvlsrjlkajmnZDmiLjlpK7liLjnt6jmjZznq7notoXkuKbnmYLmjqHmo67nq7bku4vmoLnosqnmrbTlsIbluYXoiKzosr/orJvmnpfoo4Xoq7jliofmsrPoiKrpiYTlhZDnpoHljbDpgIbmj5vkuYXnn63msrnmmrTovKrljaDmpI3muIXlgI3lnYflhITlnKfoirjnvbLkvLjlgZzniIbpmbjnjonms6LluK/lu7bnvr3lm7rliYfkubHmma7muKzosYrljprpvaLlm7LljZLnlaXmib/poIblsqnnt7Tou73kuobluoHln47mgqPlsaTniYjku6Top5LntaHmkI3li5/oo4/ku4/nuL7nr4nosqjmt7fmmIfmsaDooYDmuKnlraPmmJ/msLjokZfoqozluqvliIrlg4/pppnlnYLlupXluIPlr7rlroflt6jpnIfluIzop6bkvp3nsY3msZrmnpropIfpg7Xku7LmoITmnK3mnb/pqqjlgr7lsYrlt7vnh4Pot6HljIXpp5DlvLHntLnpm4fmm7/poJDnhLznsKHnq6Doh5PlvovotIjnhafoloTnvqTnp5LlpaXoqbDlj4zliLrntJTnv4zlv6vniYfmlazmgqnms4nnmq7mvIHojZLosq/noazln4vmn7Hnpa3ooovnrYboqJPmtbTnq6Xlrp3lsIHog7jnoILloanos6LohZXlhYbluormr5vnt5HlsIrnpZ3mn5Tmrr/mv4PmtrLooaPogqnpm7blubzojbfms4rpu4TnlJjoh6PmtYXmjoPpm7Lmjpjmjajou5/msojlh43kubPmgYvntIXpg4rohbDngq3ouIrlhorli4fmorDoj5znj43ljbXmuZbllqvlubLomavliLfmua/murbpibHmtpnljLnlravpi63mnp3loZfou5Lmr5Llj6vmi53msLfkub7mo5LnpYjmi77nsonns7jntr/msZfpioXmub/nk7blkrLlj6znvLbpmrvohILokrjogozogJXpiI3ms6XpmoXnga/ovpvno6jpuqblp5PnrZLpvLvnspLoqZ7og4PnlbPmnLrohprmv6/loZTmsrjngbDoj5PluL3mnq/mtrzoiJ/osp3nrKbmho7nmr/ogq/nh6XnlZzlnYrmjJ/mm4fmu7TkvLoiICkKICAgICAgICBdCg",
					"AQAAAAAAAAABAAAAWDkAAAAAAABYOQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIkJAAAAAAAAigkAAAAAAAAAAAAAigkAAAAAAACWCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQkAAAAAAACJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAIkJAAAAAAAAigkAAAAAAAAAAAAAigkAAAAAAACLCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQkAAAAAAACJCQAAAAAAAAAAAAAAAF5A"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " pla"
					},
					"BAAAAIsJAAAAAAAAjAkAAAAAAAAAAAAAjAkAAAAAAACNCQAAAAAAAAAAAACNCQAAAAAAAI4JAAAAAAAAAAAAAI4JAAAAAAAAjwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwkAAAAAAACLCQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert_completion",
					{
						"completion": "player",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "player"
					},
					"AgAAAIwJAAAAAAAAjAkAAAAAAAADAAAAcGxhjAkAAAAAAACSCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwkAAAAAAACPCQAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAJIJAAAAAAAAkwkAAAAAAAAAAAAAkwkAAAAAAACUCQAAAAAAAAAAAACUCQAAAAAAAJUJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgkAAAAAAACSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUJAAAAAAAAlgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQkAAAAAAACVCQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "game.o"
					},
					"BgAAAJYJAAAAAAAAlwkAAAAAAAAAAAAAlwkAAAAAAACYCQAAAAAAAAAAAACYCQAAAAAAAJkJAAAAAAAAAAAAAJkJAAAAAAAAmgkAAAAAAAAAAAAAmgkAAAAAAACbCQAAAAAAAAAAAACbCQAAAAAAAJwJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgkAAAAAAACWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAAJsJAAAAAAAAmwkAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAnAkAAAAAAACcCQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "hos"
					},
					"AwAAAJsJAAAAAAAAnAkAAAAAAAAAAAAAnAkAAAAAAACdCQAAAAAAAAAAAACdCQAAAAAAAJ4JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwkAAAAAAACbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert_completion",
					{
						"completion": "host",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "host"
					},
					"AgAAAJsJAAAAAAAAmwkAAAAAAAADAAAAaG9zmwkAAAAAAACfCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngkAAAAAAACeCQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " then"
					},
					"BQAAAJ8JAAAAAAAAoAkAAAAAAAAAAAAAoAkAAAAAAAChCQAAAAAAAAAAAAChCQAAAAAAAKIJAAAAAAAAAAAAAKIJAAAAAAAAowkAAAAAAAAAAAAAowkAAAAAAACkCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwkAAAAAAACfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQJAAAAAAAApQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAkAAAAAAACkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKUJAAAAAAAApgkAAAAAAAAAAAAApgkAAAAAAACyCQAAAAAAAAAAAACyCQAAAAAAALYJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQkAAAAAAAClCQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALYJAAAAAAAAuAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgkAAAAAAAC2CQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAALYJAAAAAAAAtwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgkAAAAAAAC2CQAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "model."
					},
					"BgAAALgJAAAAAAAAuQkAAAAAAAAAAAAAuQkAAAAAAAC6CQAAAAAAAAAAAAC6CQAAAAAAALsJAAAAAAAAAAAAALsJAAAAAAAAvAkAAAAAAAAAAAAAvAkAAAAAAAC9CQAAAAAAAAAAAAC9CQAAAAAAAL4JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAkAAAAAAAC4CQAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"left_delete",
					null,
					"AQAAAL0JAAAAAAAAvQkAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAvgkAAAAAAAC+CQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAAL0JAAAAAAAAvgkAAAAAAAAAAAAAvgkAAAAAAAC/CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQkAAAAAAAC9CQAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL8JAAAAAAAAwAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwkAAAAAAAC/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "Dict.reno"
					},
					"CQAAAMAJAAAAAAAAwQkAAAAAAAAAAAAAwQkAAAAAAADCCQAAAAAAAAAAAADCCQAAAAAAAMMJAAAAAAAAAAAAAMMJAAAAAAAAxAkAAAAAAAAAAAAAxAkAAAAAAADFCQAAAAAAAAAAAADFCQAAAAAAAMYJAAAAAAAAAAAAAMYJAAAAAAAAxwkAAAAAAAAAAAAAxwkAAAAAAADICQAAAAAAAAAAAADICQAAAAAAAMkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAkAAAAAAADACQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					2,
					"left_delete",
					null,
					"AgAAAMgJAAAAAAAAyAkAAAAAAAABAAAAb8cJAAAAAAAAxwkAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAyQkAAAAAAADJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "move"
					},
					"BAAAAMcJAAAAAAAAyAkAAAAAAAAAAAAAyAkAAAAAAADJCQAAAAAAAAAAAADJCQAAAAAAAMoJAAAAAAAAAAAAAMoJAAAAAAAAywkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwkAAAAAAADHCQAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAMsJAAAAAAAAzAkAAAAAAAAAAAAAzAkAAAAAAADNCQAAAAAAAAAAAADNCQAAAAAAAM4JAAAAAAAAAAAAAM4JAAAAAAAAzwkAAAAAAAAAAAAAzwkAAAAAAADQCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywkAAAAAAADLCQAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert_completion",
					{
						"completion": "gameId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gameId"
					},
					"AgAAAMwJAAAAAAAAzAkAAAAAAAAEAAAAZ2FtZcwJAAAAAAAA0gkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AkAAAAAAADQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": " model."
					},
					"BwAAANIJAAAAAAAA0wkAAAAAAAAAAAAA0wkAAAAAAADUCQAAAAAAAAAAAADUCQAAAAAAANUJAAAAAAAAAAAAANUJAAAAAAAA1gkAAAAAAAAAAAAA1gkAAAAAAADXCQAAAAAAAAAAAADXCQAAAAAAANgJAAAAAAAAAAAAANgJAAAAAAAA2QkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gkAAAAAAADSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "kgg"
					},
					"AwAAANkJAAAAAAAA2gkAAAAAAAAAAAAA2gkAAAAAAADbCQAAAAAAAAAAAADbCQAAAAAAANwJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QkAAAAAAADZCQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert_completion",
					{
						"completion": "kggames",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "kggames"
					},
					"AgAAANkJAAAAAAAA2QkAAAAAAAADAAAAa2dn2QkAAAAAAADgCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AkAAAAAAADcCQAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMAJAAAAAAAAwQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAkAAAAAAADACQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "kgg"
					},
					"AwAAAMAJAAAAAAAAwQkAAAAAAAAAAAAAwQkAAAAAAADCCQAAAAAAAAAAAADCCQAAAAAAAMMJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAkAAAAAAADACQAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert_completion",
					{
						"completion": "kggames",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "kggames"
					},
					"AgAAAMAJAAAAAAAAwAkAAAAAAAADAAAAa2dnwAkAAAAAAADHCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwkAAAAAAADDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMcJAAAAAAAAyAkAAAAAAAAAAAAAyAkAAAAAAADJCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwkAAAAAAADHCQAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkJAAAAAAAAygkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQkAAAAAAADJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOwJAAAAAAAA7QkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AkAAAAAAADsCQAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO0JAAAAAAAA7gkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QkAAAAAAADtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "send"
					},
					"BAAAAO4JAAAAAAAA7wkAAAAAAAAAAAAA7wkAAAAAAADwCQAAAAAAAAAAAADwCQAAAAAAAPEJAAAAAAAAAAAAAPEJAAAAAAAA8gkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gkAAAAAAADuCQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					4,
					"left_delete",
					null,
					"BAAAAPEJAAAAAAAA8QkAAAAAAAABAAAAZPAJAAAAAAAA8AkAAAAAAAABAAAAbu8JAAAAAAAA7wkAAAAAAAABAAAAZe4JAAAAAAAA7gkAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA8gkAAAAAAADyCQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "bor"
					},
					"AwAAAO4JAAAAAAAA7wkAAAAAAAAAAAAA7wkAAAAAAADwCQAAAAAAAAAAAADwCQAAAAAAAPEJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gkAAAAAAADuCQAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					2,
					"left_delete",
					null,
					"AgAAAPAJAAAAAAAA8AkAAAAAAAABAAAAcu8JAAAAAAAA7wkAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA8QkAAAAAAADxCQAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert_completion",
					{
						"completion": "broadcast",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "broadcast"
					},
					"AgAAAO4JAAAAAAAA7gkAAAAAAAABAAAAYu4JAAAAAAAA9wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wkAAAAAAADvCQAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " <|"
					},
					"AwAAAPcJAAAAAAAA+AkAAAAAAAAAAAAA+AkAAAAAAAD5CQAAAAAAAAAAAAD5CQAAAAAAAPoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wkAAAAAAAD3CQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " Cance"
					},
					"BgAAAPoJAAAAAAAA+wkAAAAAAAAAAAAA+wkAAAAAAAD8CQAAAAAAAAAAAAD8CQAAAAAAAP0JAAAAAAAAAAAAAP0JAAAAAAAA/gkAAAAAAAAAAAAA/gkAAAAAAAD/CQAAAAAAAAAAAAD/CQAAAAAAAAAKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gkAAAAAAAD6CQAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "lGame"
					},
					"BQAAAAAKAAAAAAAAAQoAAAAAAAAAAAAAAQoAAAAAAAACCgAAAAAAAAAAAAACCgAAAAAAAAMKAAAAAAAAAAAAAAMKAAAAAAAABAoAAAAAAAAAAAAABAoAAAAAAAAFCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "TF"
					},
					"AgAAAAUKAAAAAAAABgoAAAAAAAAAAAAABgoAAAAAAAAHCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQoAAAAAAAAFCgAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAAcKAAAAAAAACAoAAAAAAAAAAAAACAoAAAAAAAAJCgAAAAAAAAAAAAAJCgAAAAAAAAoKAAAAAAAAAAAAAAoKAAAAAAAACwoAAAAAAAAAAAAACwoAAAAAAAAMCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwoAAAAAAAAHCgAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert_completion",
					{
						"completion": "gameId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gameId"
					},
					"AgAAAAgKAAAAAAAACAoAAAAAAAAEAAAAZ2FtZQgKAAAAAAAADgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAoAAAAAAAAMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAA4KAAAAAAAADwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgoAAAAAAAAOCgAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABwKAAAAAAAAHQoAAAAAAAAAAAAAHQoAAAAAAAApCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAoAAAAAAAAcCgAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "else"
					},
					"BAAAABwKAAAAAAAAHQoAAAAAAAAAAAAAHQoAAAAAAAAeCgAAAAAAAAAAAAAeCgAAAAAAAB8KAAAAAAAAAAAAAB8KAAAAAAAAIAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAoAAAAAAAAcCgAAAAAAAAAAAAAAAF5A"
				],
				[
					196,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAAIAoAAAAAAAAgCgAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"paste",
					null,
					"AgAAAPwJAAAAAAAACgoAAAAAAAAAAAAACgoAAAAAAAAKCgAAAAAAAAwAAABDYW5jZWxHYW1lVEY",
					"AQAAAAAAAAABAAAA/AkAAAAAAAAICgAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAACgoAAAAAAAAKCgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/Frontend.elm",
			"settings":
			{
				"buffer_size": 10129,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADsQAAAAAAAAPBAAAAAAAAAAAAAAPBAAAAAAAABIEAAAAAAAAAAAAABIEAAAAAAAAEkQAAAAAAAAAAAAAEkQAAAAAAAAVRAAAAAAAAAAAAAAPBAAAAAAAAA8EAAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAOxAAAAAAAAA7EAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAEUQAAAAAAAARRAAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAASRAAAAAAAABJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAEUQAAAAAAAAVxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARRAAAAAAAABFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " gameI"
					},
					"BgAAAFcQAAAAAAAAWBAAAAAAAAAAAAAAWBAAAAAAAABZEAAAAAAAAAAAAABZEAAAAAAAAFoQAAAAAAAAAAAAAFoQAAAAAAAAWxAAAAAAAAAAAAAAWxAAAAAAAABcEAAAAAAAAAAAAABcEAAAAAAAAF0QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVxAAAAAAAABXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAF0QAAAAAAAAXhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRAAAAAAAABdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " bool"
					},
					"BQAAAF4QAAAAAAAAXxAAAAAAAAAAAAAAXxAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGEQAAAAAAAAAAAAAGEQAAAAAAAAYhAAAAAAAAAAAAAAYhAAAAAAAABjEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhAAAAAAAABeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAGMQAAAAAAAAZBAAAAAAAAAAAAAAZBAAAAAAAABlEAAAAAAAAAAAAABlEAAAAAAAAGYQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxAAAAAAAABjEAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYQAAAAAAAAZxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhAAAAAAAABmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "\nKgg."
					},
					"BwAAAGcQAAAAAAAAaBAAAAAAAAAAAAAAaBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAdRAAAAAAAAAAAAAAdRAAAAAAAAB2EAAAAAAAAAAAAAB2EAAAAAAAAHcQAAAAAAAAAAAAAHcQAAAAAAAAeBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxAAAAAAAABnEAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "set"
					},
					"AwAAAHgQAAAAAAAAeRAAAAAAAAAAAAAAeRAAAAAAAAB6EAAAAAAAAAAAAAB6EAAAAAAAAHsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBAAAAAAAAB4EAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHsQAAAAAAAAfBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexAAAAAAAAB7EAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"left_delete",
					null,
					"AQAAAHsQAAAAAAAAexAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAfBAAAAAAAAB8EAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "ShowingH"
					},
					"CAAAAHsQAAAAAAAAfBAAAAAAAAAAAAAAfBAAAAAAAAB9EAAAAAAAAAAAAAB9EAAAAAAAAH4QAAAAAAAAAAAAAH4QAAAAAAAAfxAAAAAAAAAAAAAAfxAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAIEQAAAAAAAAAAAAAIEQAAAAAAAAghAAAAAAAAAAAAAAghAAAAAAAACDEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexAAAAAAAAB7EAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"left_delete",
					null,
					"AQAAAIIQAAAAAAAAghAAAAAAAAABAAAASA",
					"AQAAAAAAAAABAAAAgxAAAAAAAACDEAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "hing"
					},
					"BAAAAIIQAAAAAAAAgxAAAAAAAAAAAAAAgxAAAAAAAACEEAAAAAAAAAAAAACEEAAAAAAAAIUQAAAAAAAAAAAAAIUQAAAAAAAAhhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghAAAAAAAACCEAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					4,
					"left_delete",
					null,
					"BAAAAIUQAAAAAAAAhRAAAAAAAAABAAAAZ4QQAAAAAAAAhBAAAAAAAAABAAAAboMQAAAAAAAAgxAAAAAAAAABAAAAaYIQAAAAAAAAghAAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAhhAAAAAAAACGEAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "Hints"
					},
					"BQAAAIIQAAAAAAAAgxAAAAAAAAAAAAAAgxAAAAAAAACEEAAAAAAAAAAAAACEEAAAAAAAAIUQAAAAAAAAAAAAAIUQAAAAAAAAhhAAAAAAAAAAAAAAhhAAAAAAAACHEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghAAAAAAAACCEAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIcQAAAAAAAAiBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxAAAAAAAACHEAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIgQAAAAAAAAiRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBAAAAAAAACIEAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAAIgQAAAAAAAAiBAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiRAAAAAAAACJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "model"
					},
					"BQAAAIgQAAAAAAAAiRAAAAAAAAAAAAAAiRAAAAAAAACKEAAAAAAAAAAAAACKEAAAAAAAAIsQAAAAAAAAAAAAAIsQAAAAAAAAjBAAAAAAAAAAAAAAjBAAAAAAAACNEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBAAAAAAAACIEAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0QAAAAAAAAjhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRAAAAAAAACNEAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "gzm"
					},
					"AwAAAI4QAAAAAAAAjxAAAAAAAAAAAAAAjxAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAJEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhAAAAAAAACOEAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					2,
					"left_delete",
					null,
					"AgAAAJAQAAAAAAAAkBAAAAAAAAABAAAAbY8QAAAAAAAAjxAAAAAAAAABAAAAeg",
					"AQAAAAAAAAABAAAAkRAAAAAAAACREAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "ameId"
					},
					"BQAAAI8QAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACREAAAAAAAAAAAAACREAAAAAAAAJIQAAAAAAAAAAAAAJIQAAAAAAAAkxAAAAAAAAAAAAAAkxAAAAAAAACUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxAAAAAAAACPEAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " bool"
					},
					"BQAAAJQQAAAAAAAAlRAAAAAAAAAAAAAAlRAAAAAAAACWEAAAAAAAAAAAAACWEAAAAAAAAJcQAAAAAAAAAAAAAJcQAAAAAAAAmBAAAAAAAAAAAAAAmBAAAAAAAACZEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBAAAAAAAACUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJkQAAAAAAAAmhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRAAAAAAAACZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAJkQAAAAAAAAmRAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAmhAAAAAAAACaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAAmRAAAAAAAACZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL8UAAAAAAAAwBQAAAAAAAAAAAAAwBQAAAAAAADMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxQAAAAAAAC/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAAMgUAAAAAAAAyBQAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAzBQAAAAAAADMFAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAMgUAAAAAAAAyRQAAAAAAAAAAAAAyRQAAAAAAADRFAAAAAAAAAAAAADAFAAAAAAAAMAUAAAAAAAACAAAACAgICAgICAg",
					"AQAAAAAAAAABAAAAyBQAAAAAAADIFAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"paste",
					null,
					"AQAAAMkUAAAAAAAA5hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRQAAAAAAADJFAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAOYUAAAAAAAA5xQAAAAAAAAAAAAA5xQAAAAAAADoFAAAAAAAAAAAAADoFAAAAAAAAOkUAAAAAAAAAAAAAOkUAAAAAAAA6hQAAAAAAAAAAAAA6hQAAAAAAADrFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hQAAAAAAADmFAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert_completion",
					{
						"completion": "gameId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gameId"
					},
					"AgAAAOcUAAAAAAAA5xQAAAAAAAAEAAAAZ2FtZecUAAAAAAAA7RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xQAAAAAAADrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAO0UAAAAAAAA7hQAAAAAAAAAAAAA7hQAAAAAAADvFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RQAAAAAAADtFAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAAO4UAAAAAAAA7hQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA7xQAAAAAAADvFAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "word"
					},
					"BAAAAO4UAAAAAAAA7xQAAAAAAAAAAAAA7xQAAAAAAADwFAAAAAAAAAAAAADwFAAAAAAAAPEUAAAAAAAAAAAAAPEUAAAAAAAA8hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hQAAAAAAADuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPIUAAAAAAAA8xQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hQAAAAAAADyFAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "res"
					},
					"AwAAAPMUAAAAAAAA9BQAAAAAAAAAAAAA9BQAAAAAAAD1FAAAAAAAAAAAAAD1FAAAAAAAAPYUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xQAAAAAAADzFAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAPYUAAAAAAAA9xQAAAAAAAAAAAAA9xQAAAAAAAD4FAAAAAAAAAAAAAD4FAAAAAAAAPkUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hQAAAAAAAD2FAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkUAAAAAAAA+hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RQAAAAAAAD5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAPoUAAAAAAAA+xQAAAAAAAAAAAAA+xQAAAAAAAADFQAAAAAAAAAAAAADFQAAAAAAAAcVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hQAAAAAAAD6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "Kgg,"
					},
					"BAAAAAcVAAAAAAAACBUAAAAAAAAAAAAACBUAAAAAAAAJFQAAAAAAAAAAAAAJFQAAAAAAAAoVAAAAAAAAAAAAAAoVAAAAAAAACxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxUAAAAAAAAHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"left_delete",
					null,
					"AQAAAAoVAAAAAAAAChUAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAACxUAAAAAAAALFQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAAoVAAAAAAAACxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChUAAAAAAAAKFQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"paste",
					null,
					"AQAAAAsVAAAAAAAAKBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxUAAAAAAAALFQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"left_delete",
					null,
					"AQAAAAsVAAAAAAAACxUAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAADBUAAAAAAAAMFQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAAsVAAAAAAAADBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxUAAAAAAAALFQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " model"
					},
					"BgAAACgVAAAAAAAAKRUAAAAAAAAAAAAAKRUAAAAAAAAqFQAAAAAAAAAAAAAqFQAAAAAAACsVAAAAAAAAAAAAACsVAAAAAAAALBUAAAAAAAAAAAAALBUAAAAAAAAtFQAAAAAAAAAAAAAtFQAAAAAAAC4VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBUAAAAAAAAoFQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAC4VAAAAAAAALxUAAAAAAAAAAAAALxUAAAAAAAAwFQAAAAAAAAAAAAAwFQAAAAAAADEVAAAAAAAAAAAAADEVAAAAAAAAMhUAAAAAAAAAAAAAMhUAAAAAAAAzFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhUAAAAAAAAuFQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert_completion",
					{
						"completion": "gameId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gameId"
					},
					"AgAAAC8VAAAAAAAALxUAAAAAAAAEAAAAZ2FtZS8VAAAAAAAANRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxUAAAAAAAAzFQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " wir"
					},
					"BAAAADUVAAAAAAAANhUAAAAAAAAAAAAANhUAAAAAAAA3FQAAAAAAAAAAAAA3FQAAAAAAADgVAAAAAAAAAAAAADgVAAAAAAAAORUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRUAAAAAAAA1FQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"left_delete",
					null,
					"AQAAADgVAAAAAAAAOBUAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAORUAAAAAAAA5FQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAADgVAAAAAAAAORUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBUAAAAAAAA4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					2,
					"left_delete",
					null,
					"AgAAADgVAAAAAAAAOBUAAAAAAAABAAAAbzcVAAAAAAAANxUAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAORUAAAAAAAA5FQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAADcVAAAAAAAAOBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxUAAAAAAAA3FQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert_completion",
					{
						"completion": "word",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "word"
					},
					"AgAAADYVAAAAAAAANhUAAAAAAAACAAAAd282FQAAAAAAADoVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBUAAAAAAAA4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " res"
					},
					"BAAAADoVAAAAAAAAOxUAAAAAAAAAAAAAOxUAAAAAAAA8FQAAAAAAAAAAAAA8FQAAAAAAAD0VAAAAAAAAAAAAAD0VAAAAAAAAPhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhUAAAAAAAA6FQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAACxUAAAAAAAA+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABcZAAAAAAAAGBkAAAAAAAAAAAAAGBkAAAAAAAAwGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxkAAAAAAAAXGQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					2,
					"left_delete",
					null,
					"AgAAACwZAAAAAAAALBkAAAAAAAAEAAAAICAgICgZAAAAAAAAKBkAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAMBkAAAAAAAAwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "Vi"
					},
					"AgAAACgZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAAqGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBkAAAAAAAAoGQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert_completion",
					{
						"completion": "Victory",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Victory"
					},
					"AgAAACgZAAAAAAAAKBkAAAAAAAACAAAAVmkoGQAAAAAAAC8ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhkAAAAAAAAqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAC8ZAAAAAAAAMBkAAAAAAAAAAAAAMBkAAAAAAAAxGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxkAAAAAAAAvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADEZAAAAAAAAMhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRkAAAAAAAAxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					2,
					"left_delete",
					null,
					"AgAAADEZAAAAAAAAMRkAAAAAAAABAAAAIDAZAAAAAAAAMBkAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAMhkAAAAAAAAyGQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADAZAAAAAAAAMhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBkAAAAAAAAwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "words"
					},
					"BQAAADEZAAAAAAAAMhkAAAAAAAAAAAAAMhkAAAAAAAAzGQAAAAAAAAAAAAAzGQAAAAAAADQZAAAAAAAAAAAAADQZAAAAAAAANRkAAAAAAAAAAAAANRkAAAAAAAA2GQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRkAAAAAAAAxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAADcZAAAAAAAAOBkAAAAAAAAAAAAAOBkAAAAAAAA5GQAAAAAAAAAAAAA5GQAAAAAAADoZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxkAAAAAAAA3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADoZAAAAAAAAOxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhkAAAAAAAA6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAADsZAAAAAAAAPBkAAAAAAAAAAAAAPBkAAAAAAABMGQAAAAAAAAAAAABMGQAAAAAAAFAZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxkAAAAAAAA7GQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFAZAAAAAAAAUhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBkAAAAAAABQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAFEZAAAAAAAAUhkAAAAAAAAAAAAAUhkAAAAAAABTGQAAAAAAAAAAAABTGQAAAAAAAFQZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURkAAAAAAABRGQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert_completion",
					{
						"completion": "newModel",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "newModel"
					},
					"AgAAAFEZAAAAAAAAURkAAAAAAAADAAAAbmV3URkAAAAAAABZGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBkAAAAAAABUGQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFkZAAAAAAAAWhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRkAAAAAAABZGQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoZAAAAAAAAWxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhkAAAAAAABaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"paste",
					null,
					"AQAAAFsZAAAAAAAAahkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxkAAAAAAABbGQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " game."
					},
					"BgAAAGoZAAAAAAAAaxkAAAAAAAAAAAAAaxkAAAAAAABsGQAAAAAAAAAAAABsGQAAAAAAAG0ZAAAAAAAAAAAAAG0ZAAAAAAAAbhkAAAAAAAAAAAAAbhkAAAAAAABvGQAAAAAAAAAAAABvGQAAAAAAAHAZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahkAAAAAAABqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "game"
					},
					"BAAAAHAZAAAAAAAAcRkAAAAAAAAAAAAAcRkAAAAAAAByGQAAAAAAAAAAAAByGQAAAAAAAHMZAAAAAAAAAAAAAHMZAAAAAAAAdBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBkAAAAAAABwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert_completion",
					{
						"completion": "gameId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gameId"
					},
					"AgAAAHAZAAAAAAAAcBkAAAAAAAAEAAAAZ2FtZXAZAAAAAAAAdhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBkAAAAAAAB0GQAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHYZAAAAAAAAdxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhkAAAAAAAB2GQAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHcZAAAAAAAAeBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxkAAAAAAAB3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "wor"
					},
					"AwAAAHgZAAAAAAAAeRkAAAAAAAAAAAAAeRkAAAAAAAB6GQAAAAAAAAAAAAB6GQAAAAAAAHsZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBkAAAAAAAB4GQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					5,
					"left_delete",
					null,
					"BQAAAHoZAAAAAAAAehkAAAAAAAABAAAAcnkZAAAAAAAAeRkAAAAAAAABAAAAb3gZAAAAAAAAeBkAAAAAAAABAAAAd3cZAAAAAAAAdxkAAAAAAAABAAAAIHYZAAAAAAAAdhkAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAexkAAAAAAAB7GQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " words"
					},
					"BgAAAHYZAAAAAAAAdxkAAAAAAAAAAAAAdxkAAAAAAAB4GQAAAAAAAAAAAAB4GQAAAAAAAHkZAAAAAAAAAAAAAHkZAAAAAAAAehkAAAAAAAAAAAAAehkAAAAAAAB7GQAAAAAAAAAAAAB7GQAAAAAAAHwZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhkAAAAAAAB2GQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAAfBkAAAAAAAB8GQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "\nim"
					},
					"AwAAAMkCAAAAAAAAygIAAAAAAAAAAAAAygIAAAAAAADLAgAAAAAAAAAAAADLAgAAAAAAAMwCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " port"
					},
					"BQAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAADOAgAAAAAAAM8CAAAAAAAAAAAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADRAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					5,
					"left_delete",
					null,
					"BQAAANACAAAAAAAA0AIAAAAAAAABAAAAdM8CAAAAAAAAzwIAAAAAAAABAAAAcs4CAAAAAAAAzgIAAAAAAAABAAAAb80CAAAAAAAAzQIAAAAAAAABAAAAcMwCAAAAAAAAzAIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA0QIAAAAAAADRAgAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "port"
					},
					"BAAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAADOAgAAAAAAAM8CAAAAAAAAAAAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " Api"
					},
					"BAAAANACAAAAAAAA0QIAAAAAAAAAAAAA0QIAAAAAAADSAgAAAAAAAAAAAADSAgAAAAAAANMCAAAAAAAAAAAAANMCAAAAAAAA1AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AIAAAAAAADQAgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert_completion",
					{
						"completion": "ApiCalls",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ApiCalls"
					},
					"AgAAANECAAAAAAAA0QIAAAAAAAADAAAAQXBp0QIAAAAAAADZAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AIAAAAAAADUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANkCAAAAAAAA2gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert_completion",
					{
						"completion": "exposing",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "exposing"
					},
					"AQAAANoCAAAAAAAA4gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gIAAAAAAADaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOICAAAAAAAA4wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gIAAAAAAADiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOMCAAAAAAAA5QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wIAAAAAAADjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAOQCAAAAAAAA5QIAAAAAAAAAAAAA5QIAAAAAAADmAgAAAAAAAAAAAADmAgAAAAAAAOcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AIAAAAAAADkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "W"
					},
					"AQAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wIAAAAAAADnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert_completion",
					{
						"completion": "getWordsEndGame",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "getWordsEndGame"
					},
					"AgAAAOQCAAAAAAAA5AIAAAAAAAAEAAAAZ2V0V+QCAAAAAAAA8wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AIAAAAAAADoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "(Dict,"
					},
					"BgAAAKUZAAAAAAAAphkAAAAAAAAAAAAAphkAAAAAAACnGQAAAAAAAAAAAACnGQAAAAAAAKgZAAAAAAAAAAAAAKgZAAAAAAAAqRkAAAAAAAAAAAAAqRkAAAAAAACqGQAAAAAAAAAAAACqGQAAAAAAAKsZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRkAAAAAAAClGQAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAKoZAAAAAAAAqhkAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAqxkAAAAAAACrGQAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": ".keys"
					},
					"BQAAAKoZAAAAAAAAqxkAAAAAAAAAAAAAqxkAAAAAAACsGQAAAAAAAAAAAACsGQAAAAAAAK0ZAAAAAAAAAAAAAK0ZAAAAAAAArhkAAAAAAAAAAAAArhkAAAAAAACvGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhkAAAAAAACqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8ZAAAAAAAAsBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxkAAAAAAACvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALUZAAAAAAAAthkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRkAAAAAAAC1GQAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAApyYAAAAAAACpJgAAcG9ydCBtb2R1bGUgRnJvbnRlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nIChnZXRXb3Jkc0VuZEdhbWUpCmltcG9ydCBCcm93c2VyIGV4cG9zaW5nIChVcmxSZXF1ZXN0KC4uKSkKaW1wb3J0IEJyb3dzZXIuTmF2aWdhdGlvbiBhcyBOYXYKaW1wb3J0IERpY3QKaW1wb3J0IEVsZW1lbnQgZXhwb3NpbmcgKC4uKQppbXBvcnQgRWxlbWVudC5CYWNrZ3JvdW5kIGFzIEJhY2tncm91bmQKaW1wb3J0IEVsZW1lbnQuQm9yZGVyIGFzIEJvcmRlcgppbXBvcnQgRWxlbWVudC5FdmVudHMgYXMgRXZlbnRzCmltcG9ydCBFbGVtZW50LkZvbnQgYXMgRm9udAppbXBvcnQgRWxlbWVudC5IZXhDb2xvciBleHBvc2luZyAocmdiQ1NTSGV4KQppbXBvcnQgRWxlbWVudC5JbnB1dCBhcyBJbnB1dAppbXBvcnQgR3Vlc3NpbmdHYW1lIGFzIEtnZwppbXBvcnQgSGVscGVycyBleHBvc2luZyAoLi4pCmltcG9ydCBIdG1sCmltcG9ydCBIdG1sLkF0dHJpYnV0ZXMgYXMgQXR0cgppbXBvcnQgSHRtbC5FdmVudHMgYXMgRXZlbnRzCmltcG9ydCBIdHRwCmltcG9ydCBKc29uLkRlY29kZSBhcyBECmltcG9ydCBKc29uLkVuY29kZSBhcyBFCmltcG9ydCBLZXlib2FyZCBhcyBLCmltcG9ydCBMYW1kZXJhCmltcG9ydCBTdHlsZS5IZWxwZXJzIGV4cG9zaW5nICguLikKaW1wb3J0IFN0eWxlLlBhbGV0dGUgZXhwb3NpbmcgKC4uKQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQppbXBvcnQgVXJsCgoKcG9ydCB0b1BhcmVudFBvcnQgOiBFLlZhbHVlIC0+IENtZCBtc2cKCgpwb3J0IGZyb21QYXJlbnRQb3J0IDogKFN0cmluZyAtPiBtc2cpIC0+IFN1YiBtc2cKCgpwb3J0IGlzSUZyYW1lVGVzdFBvcnQgOiAoU3RyaW5nIC0+IG1zZykgLT4gU3ViIG1zZwoKCmZyb21QYXJlbnQgbW9kZWwganNvblN0ciA9CiAgICBjYXNlIEQuZGVjb2RlU3RyaW5nIGZyb21QYXJlbnRQYXlsb2FkIGpzb25TdHIgb2YKICAgICAgICBPayAoVXNlckluZm9QYXlsb2FkIHNlc3Npb25Db29raWUgdXNlcm5hbWUpIC0+CiAgICAgICAgICAgICggbW9kZWwsIExhbWRlcmEuc2VuZFRvQmFja2VuZCA8fCBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgc2Vzc2lvbkNvb2tpZSApCgogICAgICAgIEVyciBfIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgpnb3RJRnJhbWVUZXN0UmVzdWx0IDogTW9kZWwgLT4gU3RyaW5nIC0+ICggTW9kZWwsIENtZCBGcm9udGVuZE1zZyApCmdvdElGcmFtZVRlc3RSZXN1bHQgbW9kZWwganNvblN0ciA9CiAgICBjYXNlIEQuZGVjb2RlU3RyaW5nIChELmZpZWxkICJpc0luSWZyYW1lIiBELmJvb2wpIGpzb25TdHIgb2YKICAgICAgICBPayByZXMgLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgaXNFbWJlZGRlZCA9IEp1c3QgcmVzIH0sIENtZC5ub25lICkKCiAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgbGV0CiAgICAgICAgICAgICAgICBkID0KICAgICAgICAgICAgICAgICAgICBEZWJ1Zy5sb2cgIiIgZQogICAgICAgICAgICBpbgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKdHlwZSBGcm9tUGFyZW50UGF5bG9hZAogICAgPSBVc2VySW5mb1BheWxvYWQgU3RyaW5nIFN0cmluZwoKCmZyb21QYXJlbnRQYXlsb2FkID0KICAgIEQub25lT2YgWyB1c2VySW5mb1BheWxvYWQgXQoKCnVzZXJJbmZvUGF5bG9hZCA9CiAgICBELm1hcDIgVXNlckluZm9QYXlsb2FkCiAgICAgICAgKEQuZmllbGQgImNvb2tpZSIgRC5zdHJpbmcpCiAgICAgICAgKEQuZmllbGQgInVzZXJuYW1lIiBELnN0cmluZykKCgp0eXBlIGFsaWFzIE1vZGVsID0KICAgIEZyb250ZW5kTW9kZWwKCgphcHAgPQogICAgTGFtZGVyYS5mcm9udGVuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIG9uVXJsUmVxdWVzdCA9IFVybENsaWNrZWQKICAgICAgICAsIG9uVXJsQ2hhbmdlID0gVXJsQ2hhbmdlZAogICAgICAgICwgdXBkYXRlID0gdXBkYXRlCiAgICAgICAgLCB1cGRhdGVGcm9tQmFja2VuZCA9IHVwZGF0ZUZyb21CYWNrZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIFN1Yi5iYXRjaAogICAgICAgICAgICAgICAgICAgIFsgZnJvbVBhcmVudFBvcnQgR290SW5mb0Zyb21QYXJlbnQKICAgICAgICAgICAgICAgICAgICAsIGlzSUZyYW1lVGVzdFBvcnQgR290SUZyYW1lVGVzdFJlc3VsdAogICAgICAgICAgICAgICAgICAgICwgU3ViLm1hcCBLZXlib2FyZE1zZyBLLnN1YnNjcmlwdGlvbnMKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgLCB2aWV3ID0gdmlldwogICAgICAgIH0KCgppbml0IDogVXJsLlVybCAtPiBOYXYuS2V5IC0+ICggTW9kZWwsIENtZCBGcm9udGVuZE1zZyApCmluaXQgdXJsIGtleSA9CiAgICAoIHsga2V5ID0ga2V5CiAgICAgICwgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCB1c2VybmFtZSA9IE5vdGhpbmcKICAgICAgLCB0aGlzUGxheWVyID0gTm90aGluZwogICAgICAsIGN1cnJlbnRseVBsYXlpbmcgPSBOb3RoaW5nCiAgICAgICwgcGxheWVycyA9IFtdCiAgICAgICwga2dnV29yZElucHV0ID0gTm90aGluZwogICAgICAsIGtnZ1dyb25nV29yZEJ1ZmZlciA9IE5vdGhpbmcKICAgICAgLCBrZ2dDb25maWdJbnB1dHMgPQogICAgICAgICAgICB7IGtnZ1JhbmRvbUthbmppSW5wdXQgPSBOb3RoaW5nCiAgICAgICAgICAgICwga2dnUm91bmRMZW5ndGhJbnB1dCA9IE5vdGhpbmcKICAgICAgICAgICAgLCBrZ2dTdGFydGluZ0NvdW50ZG93bklucHV0ID0gTm90aGluZwogICAgICAgICAgICB9CiAgICAgICwgaXNFbWJlZGRlZCA9IE5vdGhpbmcKICAgICAgLCBub3cgPSBUaW1lLm1pbGxpc1RvUG9zaXggMAogICAgICAsIGthbmppZGljID0gRGljdC5lbXB0eQogICAgICB9CiAgICAsIENtZC5ub25lCiAgICApCgoKdXBkYXRlIDogRnJvbnRlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEZyb250ZW5kTXNnICkKdXBkYXRlIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIFVybENsaWNrZWQgdXJsUmVxdWVzdCAtPgogICAgICAgICAgICBjYXNlIHVybFJlcXVlc3Qgb2YKICAgICAgICAgICAgICAgIEludGVybmFsIHVybCAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIE5hdi5wdXNoVXJsIG1vZGVsLmtleSAoVXJsLnRvU3RyaW5nIHVybCkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXh0ZXJuYWwgdXJsIC0+CiAgICAgICAgICAgICAgICAgICAgKCBtb2RlbAogICAgICAgICAgICAgICAgICAgICwgTmF2LmxvYWQgdXJsCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBVcmxDaGFuZ2VkIHVybCAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIEdvdEluZm9Gcm9tUGFyZW50IGpzb25TdHIgLT4KICAgICAgICAgICAgZnJvbVBhcmVudCBtb2RlbCBqc29uU3RyCgogICAgICAgIEdvdElGcmFtZVRlc3RSZXN1bHQganNvblN0ciAtPgogICAgICAgICAgICBnb3RJRnJhbWVUZXN0UmVzdWx0IG1vZGVsIGpzb25TdHIKCiAgICAgICAgVXNlcm5hbWVJbnB1dCBuYW1lIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHVzZXJuYW1lID0gbWJTdHIgbmFtZSB9LCBDbWQubm9uZSApCgogICAgICAgIFNlbmRVc2VyIC0+CiAgICAgICAgICAgIGNhc2UgbW9kZWwudXNlcm5hbWUgb2YKICAgICAgICAgICAgICAgIEp1c3QgdSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwsIExhbWRlcmEuc2VuZFRvQmFja2VuZCA8fCBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdSAiIiApCgogICAgICAgICAgICAgICAgTm90aGluZyAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCiAgICAgICAgUmVxR2V0S2V5IC0+CiAgICAgICAgICAgICggbW9kZWwsIExhbWRlcmEuc2VuZFRvQmFja2VuZCBHZXRLZXlzVEIgKQoKICAgICAgICBLZ2dTZXRDdXN0b21LYW5qaVNldCBnYW1lSWQga2FuamlTdHIgLT4KICAgICAgICAgICAgS2dnLnNldEN1c3RvbUthbmppU2V0IG1vZGVsIGdhbWVJZCBrYW5qaVN0cgoKICAgICAgICBLZ2dTZXRLYW5qaVNldCBrYW5qaVNldCBnYW1lSWQgLT4KICAgICAgICAgICAgS2dnLnNldEthbmppU2V0IG1vZGVsIGthbmppU2V0IGdhbWVJZAoKICAgICAgICBLZ2dTZXRTaG93aW5nSGludHMgZ2FtZUlkIGJvb2wgLT4KICAgICAgICAgICAgS2dnLnNldFNob3dpbmdIaW50cyBtb2RlbCBnYW1lSWQgYm9vbAoKICAgICAgICBLZ2dIb3N0R2FtZSAtPgogICAgICAgICAgICBLZ2cuaG9zdEdhbWUgbW9kZWwKCiAgICAgICAgS2dnSm9pbkdhbWUgZ2FtZUlkIC0+CiAgICAgICAgICAgIEtnZy5qb2luR2FtZSBtb2RlbCBnYW1lSWQKCiAgICAgICAgS2dnTGVhdmVHYW1lIGdhbWVJZCAtPgogICAgICAgICAgICBLZ2cubGVhdmVHYW1lIG1vZGVsIGdhbWVJZAoKICAgICAgICBLZ2dXb3JkSW5wdXQgd29yZCAtPgogICAgICAgICAgICBLZ2cud29yZElucHV0IG1vZGVsIHdvcmQKCiAgICAgICAgS2dnTG9hZEluaXRpYWxEYXRhIGdhbWVJZCAtPgogICAgICAgICAgICBLZ2cubG9hZEluaXRpYWxEYXRhIG1vZGVsIGdhbWVJZAoKICAgICAgICBLZ2dTdGFydEdhbWUgZ2FtZUlkIC0+CiAgICAgICAgICAgIEtnZy5zdGFydEdhbWUgbW9kZWwgZ2FtZUlkCgogICAgICAgIEtnZ1JlcXVlc3ROZXh0S2FuamkgZ2FtZUlkIC0+CiAgICAgICAgICAgIEtnZy5yZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZAoKICAgICAgICBLZ2dTZW5kV29yZCBnYW1lSWQgLT4KICAgICAgICAgICAgS2dnLnNlbmRXb3JkIG1vZGVsIGdhbWVJZAoKICAgICAgICAtLUdvdEtleXMgcmVzIC0+CiAgICAgICAgLS0gICAgY2FzZSByZXMgb2YKICAgICAgICAtLSAgICAgICAgT2sgcyAtPgogICAgICAgIC0tICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgIC0tICAgICAgICAgICAgLCBDbWQubm9uZQogICAgICAgIC0tICAgICAgICAgICAgKQogICAgICAgIC0tICAgICAgICBfIC0+CiAgICAgICAgLS0gICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCiAgICAgICAgR290VGltZUYgdGltZSAtPgogICAgICAgICAgICAoIHsgbW9kZWwgfCBub3cgPSB0aW1lIH0sIENtZC5ub25lICkKCiAgICAgICAgU2VuZFRvQmFja2VuZFdpdGhUaW1lIHRvQmFja2VuZCAtPgogICAgICAgICAgICAoIG1vZGVsLCBMYW1kZXJhLnNlbmRUb0JhY2tlbmQgdG9CYWNrZW5kICkKCiAgICAgICAgS2V5Ym9hcmRNc2cga2V5TXNnIC0+CiAgICAgICAgICAgIEtnZy5rZXlib2FyZE1zZyBtb2RlbCBrZXlNc2cKCiAgICAgICAgR290Sk1kaWN0U2VhcmNoUmVzdWx0c0VuZEdhbWUgZ2FtZUlkIHdvcmQgcmVzIC0+CiAgICAgICAgICAgIEtnZy5nb3RKTWRpY3RTZWFyY2hSZXN1bHRzRW5kR2FtZSBtb2RlbCBnYW1lSWQgd29yZCByZXMKCiAgICAgICAgTm9PcEZyb250ZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgpiYXNlVXJsID0KICAgICJodHRwczovL3d3dy51bWlub2tpcmluLmNvbSIKCgpnZXRLYW5qaUtleXMgPQogICAgSHR0cC5nZXQKICAgICAgICB7IHVybCA9IGJhc2VVcmwgKysgIi9hcGkvZ2V0S2FuamlLZXlzIgogICAgICAgICwgZXhwZWN0ID0gSHR0cC5leHBlY3RTdHJpbmcgR290S2V5cwogICAgICAgIH0KCgp1cGRhdGVGcm9tQmFja2VuZCA6IFRvRnJvbnRlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEZyb250ZW5kTXNnICkKdXBkYXRlRnJvbUJhY2tlbmQgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgVG9Gcm9udGVuZE1zZ1RGIHMgLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfSwgQ21kLm5vbmUgKQoKICAgICAgICBHYW1lQnJvYWRjYXN0VEYgZ2FtZSAtPgogICAgICAgICAgICBsZXQKICAgICAgICAgICAgICAgIG5ld01vZGVsID0KICAgICAgICAgICAgICAgICAgICB7IG1vZGVsCiAgICAgICAgICAgICAgICAgICAgICAgIHwga2dnYW1lcyA9IERpY3QuaW5zZXJ0IGdhbWUuZ2FtZUlkIGdhbWUgbW9kZWwua2dnYW1lcwogICAgICAgICAgICAgICAgICAgICAgICAsIGtnZ1dvcmRJbnB1dCA9IE5vdGhpbmcKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGluCiAgICAgICAgICAgIGNhc2UgZ2FtZS5nYW1lU3RhdGUgb2YKICAgICAgICAgICAgICAgIExvYWRpbmcgc3Vic3RhdGUgLT4KICAgICAgICAgICAgICAgICAgICBpZiBLZ2cuY3VycmVudEdhbWVJbml0aWFsTG9hZGluZ1N0YXR1cyBzdWJzdGF0ZSA9PSAxMDAgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICBLZ2cuc3RhcnRHYW1lIG5ld01vZGVsIGdhbWUuZ2FtZUlkCgogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgKCBuZXdNb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICAgICAgICAgIFZpY3RvcnkgeyB3b3JkcyB9IC0+CiAgICAgICAgICAgICAgICAgICAgKCBuZXdNb2RlbCwgZ2V0V29yZHNFbmRHYW1lIGdhbWUuZ2FtZUlkIChEaWN0LmtleXMgd29yZHMpICkKCiAgICAgICAgICAgICAgICBfIC0+CiAgICAgICAgICAgICAgICAgICAgKCBuZXdNb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBHYW1lVGltZXNCcm9hZGNhc3RURiBkYXRhIC0+CiAgICAgICAgICAgIGNhc2UgRGljdC5nZXQgZGF0YS5nYW1lSWQgbW9kZWwua2dnYW1lcyBvZgogICAgICAgICAgICAgICAgSnVzdCBnYW1lIC0+CiAgICAgICAgICAgICAgICAgICAgY2FzZSBnYW1lLmdhbWVTdGF0ZSBvZgogICAgICAgICAgICAgICAgICAgICAgICBJblBsYXkgc3Vic3RhdGUgLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0dhbWVTdGF0ZSA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEluUGxheQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdWJzdGF0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdGltZVRpbGxSb3VuZEVuZCA9IGRhdGEudGltZVRpbGxSb3VuZEVuZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgdGltZVRpbGxHYW1lT3ZlciA9IGRhdGEudGltZVRpbGxHYW1lT3ZlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdHYW1lID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBnYW1lIHwgbGFzdFVwZGF0ZWQgPSBkYXRhLmxhc3RVcGRhdGVkLCBnYW1lU3RhdGUgPSBuZXdHYW1lU3RhdGUsIGJ1ZmZlcmluZyA9IGRhdGEuYnVmZmVyaW5nIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZCA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlYnVnLmxvZyAibmV3R2FtZSIgbmV3R2FtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICggeyBtb2RlbCB8IGtnZ2FtZXMgPSBEaWN0Lmluc2VydCBkYXRhLmdhbWVJZCBuZXdHYW1lIG1vZGVsLmtnZ2FtZXMgfSwgQ21kLm5vbmUgKQoKICAgICAgICAgICAgICAgICAgICAgICAgXyAtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZCA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlYnVnLmxvZyAibm90IGluIHBsYXkiIGRhdGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgICAgICAgICAgXyAtPgogICAgICAgICAgICAgICAgICAgIGxldAogICAgICAgICAgICAgICAgICAgICAgICBkID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlYnVnLmxvZyAiZ2FtZSBtaXNzaW5nIiBkYXRhCiAgICAgICAgICAgICAgICAgICAgaW4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIFdyb25nV29yZFRGIHdyb25nV29yZCAtPgogICAgICAgICAgICAoIHsgbW9kZWwgfCBrZ2dXcm9uZ1dvcmRCdWZmZXIgPSBKdXN0IHdyb25nV29yZCB9LCBDbWQubm9uZSApCgogICAgICAgIFBsYXllckluZm9SZWdpc3RlcmVkVEYgcGxheWVyIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHRoaXNQbGF5ZXIgPSBKdXN0IHBsYXllciB9LCBMYW1kZXJhLnNlbmRUb0JhY2tlbmQgUmVxdWVzdEluaXRpYWxHYW1lc0Jyb2FkQ2FzdFRCICkKCiAgICAgICAgS2FuamlEaWN0RW50cmllc1RGIGVudHJpZXMgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IGthbmppZGljID0KICAgICAgICAgICAgICAgICAgICBMaXN0LmZvbGRyCiAgICAgICAgICAgICAgICAgICAgICAgIChcayBhY2MgLT4gRGljdC5pbnNlcnQgKGsua2FuamkgfD4gU3RyaW5nLnRvTGlzdCB8PiBMaXN0LmhlYWQgfD4gTWF5YmUud2l0aERlZmF1bHQgJ+KdjCcpIGsgYWNjKQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5rYW5qaWRpYwogICAgICAgICAgICAgICAgICAgICAgICBlbnRyaWVzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIENtZC5ub25lCiAgICAgICAgICAgICkKCiAgICAgICAgTm9PcFRGIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp2aWV3IDogTW9kZWwgLT4gQnJvd3Nlci5Eb2N1bWVudCBGcm9udGVuZE1zZwp2aWV3IG1vZGVsID0KICAgIHsgdGl0bGUgPSAiIgogICAgLCBib2R5ID0KICAgICAgICBbIEVsZW1lbnQubGF5b3V0IFtdIDx8CiAgICAgICAgICAgIGNhc2UgbW9kZWwudGhpc1BsYXllciBvZgogICAgICAgICAgICAgICAgSnVzdCBwbGF5ZXIgLT4KICAgICAgICAgICAgICAgICAgICBLZ2cudmlldyBtb2RlbAoKICAgICAgICAgICAgICAgIE5vdGhpbmcgLT4KICAgICAgICAgICAgICAgICAgICBjYXNlIG1vZGVsLmlzRW1iZWRkZWQgb2YKICAgICAgICAgICAgICAgICAgICAgICAgSnVzdCBUcnVlIC0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBLZ2cudmlldyBtb2RlbAoKICAgICAgICAgICAgICAgICAgICAgICAgSnVzdCBGYWxzZSAtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklucHV0VmlldyBtb2RlbAoKICAgICAgICAgICAgICAgICAgICAgICAgTm90aGluZyAtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWwgWyBwYWRkaW5nIDE1IF0gPHwgdGV4dCAiTG9hZGluZy4uLiIKICAgICAgICBdCiAgICB9CgoKdXNlcklucHV0VmlldyBtb2RlbCA9CiAgICBjb2x1bW4KICAgICAgICBbIHBhZGRpbmcgMTUgXQogICAgICAgIFsgY29sdW1uIFsgc3BhY2luZyAxNSBdCiAgICAgICAgICAgIFsgSW5wdXQudGV4dCBbXQogICAgICAgICAgICAgICAgeyBvbkNoYW5nZSA9IFVzZXJuYW1lSW5wdXQKICAgICAgICAgICAgICAgICwgdGV4dCA9IG1vZGVsLnVzZXJuYW1lIHw+IE1heWJlLndpdGhEZWZhdWx0ICIiCiAgICAgICAgICAgICAgICAsIHBsYWNlaG9sZGVyID0gTm90aGluZwogICAgICAgICAgICAgICAgLCBsYWJlbCA9IElucHV0LmxhYmVsQWJvdmUgW10gPHwgdGV4dCAiVXNlcm5hbWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICwgSW5wdXQuYnV0dG9uIChidXR0b25TdHlsZV8gKG1vZGVsLnVzZXJuYW1lIC89IE5vdGhpbmcpKQogICAgICAgICAgICAgICAgeyBvblByZXNzID0gTWF5YmUubWFwIChhbHdheXMgU2VuZFVzZXIpIG1vZGVsLnVzZXJuYW1lLCBsYWJlbCA9IHRleHQgIkVudm95ZXIiIH0KICAgICAgICAgICAgXQogICAgICAgIF0K",
					"AQAAAAAAAAABAAAAthkAAAAAAAC2GQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALgZAAAAAAAAuRkAAAAAAAAAAAAAuRkAAAAAAADNGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBkAAAAAAAC4GQAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"left_delete",
					null,
					"AQAAAMkZAAAAAAAAyRkAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAzRkAAAAAAADNGQAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "\nGame"
					},
					"BwAAAMkZAAAAAAAAyhkAAAAAAAAAAAAAyhkAAAAAAADaGQAAAAAAAAAAAAC5GQAAAAAAALkZAAAAAAAAEAAAACAgICAgICAgICAgICAgICDKGQAAAAAAAMsZAAAAAAAAAAAAAMsZAAAAAAAAzBkAAAAAAAAAAAAAzBkAAAAAAADNGQAAAAAAAAAAAADNGQAAAAAAAM4ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRkAAAAAAADJGQAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert_completion",
					{
						"completion": "GameOver",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "GameOver"
					},
					"AgAAAMoZAAAAAAAAyhkAAAAAAAAEAAAAR2FtZcoZAAAAAAAA0hkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhkAAAAAAADOGQAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANIZAAAAAAAA0xkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hkAAAAAAADSGQAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANMZAAAAAAAA1RkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xkAAAAAAADTGQAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "wir"
					},
					"AwAAANQZAAAAAAAA1RkAAAAAAAAAAAAA1RkAAAAAAADWGQAAAAAAAAAAAADWGQAAAAAAANcZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BkAAAAAAADUGQAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					2,
					"left_delete",
					null,
					"AgAAANYZAAAAAAAA1hkAAAAAAAABAAAActUZAAAAAAAA1RkAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA1xkAAAAAAADXGQAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAANUZAAAAAAAA1hkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RkAAAAAAADVGQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert_completion",
					{
						"completion": "words",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "words"
					},
					"AgAAANQZAAAAAAAA1BkAAAAAAAACAAAAd2/UGQAAAAAAANkZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hkAAAAAAADWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAANoZAAAAAAAA2xkAAAAAAAAAAAAA2xkAAAAAAADcGQAAAAAAAAAAAADcGQAAAAAAAN0ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hkAAAAAAADaGQAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0ZAAAAAAAA3hkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RkAAAAAAADdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AwAAAN4ZAAAAAAAA3xkAAAAAAAAAAAAA3xkAAAAAAADvGQAAAAAAAAAAAADvGQAAAAAAAPMZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hkAAAAAAADeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"paste",
					null,
					"AQAAAPMZAAAAAAAALxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xkAAAAAAADzGQAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "xs"
					},
					"AgAAAC8aAAAAAAAAMBoAAAAAAAAAAAAAMBoAAAAAAAAxGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxoAAAAAAAAvGgAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					2,
					"left_delete",
					null,
					"AgAAADAaAAAAAAAAMBoAAAAAAAABAAAAcy8aAAAAAAAALxoAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAMRoAAAAAAAAxGgAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAALxoAAAAAAAAvGgAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHAaAAAAAAAAcRoAAAAAAAAAAAAAcRoAAAAAAACFGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBoAAAAAAABwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAIUaAAAAAAAAhhoAAAAAAAAAAAAAhhoAAAAAAACaGgAAAAAAAAAAAABxGgAAAAAAAHEaAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAhRoAAAAAAACFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					3,
					"left_delete",
					null,
					"AwAAAIIaAAAAAAAAghoAAAAAAAAEAAAAICAgIH4aAAAAAAAAfhoAAAAAAAAEAAAAICAgIHoaAAAAAAAAehoAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAhhoAAAAAAACGGgAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "GameCance"
					},
					"CQAAAHoaAAAAAAAAexoAAAAAAAAAAAAAexoAAAAAAAB8GgAAAAAAAAAAAAB8GgAAAAAAAH0aAAAAAAAAAAAAAH0aAAAAAAAAfhoAAAAAAAAAAAAAfhoAAAAAAAB/GgAAAAAAAAAAAAB/GgAAAAAAAIAaAAAAAAAAAAAAAIAaAAAAAAAAgRoAAAAAAAAAAAAAgRoAAAAAAACCGgAAAAAAAAAAAACCGgAAAAAAAIMaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehoAAAAAAAB6GgAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "ledT"
					},
					"BAAAAIMaAAAAAAAAhBoAAAAAAAAAAAAAhBoAAAAAAACFGgAAAAAAAAAAAACFGgAAAAAAAIYaAAAAAAAAAAAAAIYaAAAAAAAAhxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxoAAAAAAACDGgAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAIcaAAAAAAAAiBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxoAAAAAAACHGgAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"left_delete",
					null,
					"AQAAAIcaAAAAAAAAhxoAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAiBoAAAAAAACIGgAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAIcaAAAAAAAAiBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxoAAAAAAACHGgAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAIgaAAAAAAAAiRoAAAAAAAAAAAAAiRoAAAAAAACKGgAAAAAAAAAAAACKGgAAAAAAAIsaAAAAAAAAAAAAAIsaAAAAAAAAjBoAAAAAAAAAAAAAjBoAAAAAAACNGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBoAAAAAAACIGgAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0aAAAAAAAAjhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRoAAAAAAACNGgAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"left_delete",
					null,
					"AQAAAI0aAAAAAAAAjRoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAjhoAAAAAAACOGgAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "Id"
					},
					"AgAAAI0aAAAAAAAAjhoAAAAAAAAAAAAAjhoAAAAAAACPGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRoAAAAAAACNGgAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI8aAAAAAAAAkBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxoAAAAAAACPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAAJAaAAAAAAAAkRoAAAAAAAAAAAAAkRoAAAAAAACSGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBoAAAAAAACQGgAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJIaAAAAAAAAkxoAAAAAAAAAAAAAkxoAAAAAAACbGgAAAAAAAAAAAACbGgAAAAAAAJ8aAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhoAAAAAAACSGgAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJ8aAAAAAAAAoBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxoAAAAAAACfGgAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"left_delete",
					null,
					"AQAAAJ8aAAAAAAAAnxoAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAoBoAAAAAAACgGgAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ8aAAAAAAAAoRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxoAAAAAAACfGgAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKAaAAAAAAAAohoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBoAAAAAAACgGgAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "model"
					},
					"BQAAAKEaAAAAAAAAohoAAAAAAAAAAAAAohoAAAAAAACjGgAAAAAAAAAAAACjGgAAAAAAAKQaAAAAAAAAAAAAAKQaAAAAAAAApRoAAAAAAAAAAAAApRoAAAAAAACmGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRoAAAAAAAChGgAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAAKYaAAAAAAAApxoAAAAAAAAAAAAApxoAAAAAAACoGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphoAAAAAAACmGgAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": " Dict.re"
					},
					"CAAAAKgaAAAAAAAAqRoAAAAAAAAAAAAAqRoAAAAAAACqGgAAAAAAAAAAAACqGgAAAAAAAKsaAAAAAAAAAAAAAKsaAAAAAAAArBoAAAAAAAAAAAAArBoAAAAAAACtGgAAAAAAAAAAAACtGgAAAAAAAK4aAAAAAAAAAAAAAK4aAAAAAAAArxoAAAAAAAAAAAAArxoAAAAAAACwGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBoAAAAAAACoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "no"
					},
					"AgAAALAaAAAAAAAAsRoAAAAAAAAAAAAAsRoAAAAAAACyGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBoAAAAAAACwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					2,
					"left_delete",
					null,
					"AgAAALEaAAAAAAAAsRoAAAAAAAABAAAAb7AaAAAAAAAAsBoAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAshoAAAAAAACyGgAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "move"
					},
					"BAAAALAaAAAAAAAAsRoAAAAAAAAAAAAAsRoAAAAAAACyGgAAAAAAAAAAAACyGgAAAAAAALMaAAAAAAAAAAAAALMaAAAAAAAAtBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBoAAAAAAACwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALQaAAAAAAAAtRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBoAAAAAAAC0GgAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert_completion",
					{
						"completion": "gameId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "gameId"
					},
					"AQAAALUaAAAAAAAAuxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRoAAAAAAAC1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " model."
					},
					"BwAAALsaAAAAAAAAvBoAAAAAAAAAAAAAvBoAAAAAAAC9GgAAAAAAAAAAAAC9GgAAAAAAAL4aAAAAAAAAAAAAAL4aAAAAAAAAvxoAAAAAAAAAAAAAvxoAAAAAAADAGgAAAAAAAAAAAADAGgAAAAAAAMEaAAAAAAAAAAAAAMEaAAAAAAAAwhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxoAAAAAAAC7GgAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "kgg"
					},
					"AwAAAMIaAAAAAAAAwxoAAAAAAAAAAAAAwxoAAAAAAADEGgAAAAAAAAAAAADEGgAAAAAAAMUaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhoAAAAAAADCGgAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert_completion",
					{
						"completion": "kggames",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "kggames"
					},
					"AgAAAMIaAAAAAAAAwhoAAAAAAAADAAAAa2dnwhoAAAAAAADJGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxRoAAAAAAADFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMoaAAAAAAAAyxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhoAAAAAAADKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " Cmd.none"
					},
					"CQAAAMsaAAAAAAAAzBoAAAAAAAAAAAAAzBoAAAAAAADNGgAAAAAAAAAAAADNGgAAAAAAAM4aAAAAAAAAAAAAAM4aAAAAAAAAzxoAAAAAAAAAAAAAzxoAAAAAAADQGgAAAAAAAAAAAADQGgAAAAAAANEaAAAAAAAAAAAAANEaAAAAAAAA0hoAAAAAAAAAAAAA0hoAAAAAAADTGgAAAAAAAAAAAADTGgAAAAAAANQaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxoAAAAAAADLGgAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "kggames"
					},
					"BwAAAKkaAAAAAAAAqhoAAAAAAAAAAAAAqhoAAAAAAACrGgAAAAAAAAAAAACrGgAAAAAAAKwaAAAAAAAAAAAAAKwaAAAAAAAArRoAAAAAAAAAAAAArRoAAAAAAACuGgAAAAAAAAAAAACuGgAAAAAAAK8aAAAAAAAAAAAAAK8aAAAAAAAAsBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRoAAAAAAACpGgAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALAaAAAAAAAAsRoAAAAAAAAAAAAAsRoAAAAAAACyGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBoAAAAAAACwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIaAAAAAAAAsxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshoAAAAAAACyGgAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAAsxoAAAAAAACzGgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/GuessingGame.elm",
			"settings":
			{
				"buffer_size": 32496,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					684,
					1,
					"paste",
					null,
					"AQAAALhMAAAAAAAAwkwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuEwAAAAAAAC4TAAAAAAAAAAAAAAAAPC/"
				],
				[
					685,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMJMAAAAAAAAw0wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwkwAAAAAAADCTAAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					5,
					"left_delete",
					null,
					"BQAAABhMAAAAAAAAGEwAAAAAAAABAAAAdBdMAAAAAAAAF0wAAAAAAAABAAAAaBZMAAAAAAAAFkwAAAAAAAABAAAAZxVMAAAAAAAAFUwAAAAAAAABAAAAaRRMAAAAAAAAFEwAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAGUwAAAAAAAAZTAAAAAAAAAAAAAAAAPC/"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": "Left"
					},
					"BAAAABRMAAAAAAAAFUwAAAAAAAAAAAAAFUwAAAAAAAAWTAAAAAAAAAAAAAAWTAAAAAAAABdMAAAAAAAAAAAAABdMAAAAAAAAGEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFEwAAAAAAAAUTAAAAAAAAAAAAAAAAPC/"
				],
				[
					690,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAAGEwAAAAAAAAYTAAAAAAAAAAAAAAAAPC/"
				],
				[
					695,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOlMAAAAAAAA6kwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6UwAAAAAAADpTAAAAAAAAAAAAAAAAPC/"
				],
				[
					696,
					1,
					"insert",
					{
						"characters": " Font"
					},
					"BQAAAOpMAAAAAAAA60wAAAAAAAAAAAAA60wAAAAAAADsTAAAAAAAAAAAAADsTAAAAAAAAO1MAAAAAAAAAAAAAO1MAAAAAAAA7kwAAAAAAAAAAAAA7kwAAAAAAADvTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6kwAAAAAAADqTAAAAAAAAAAAAAAAAPC/"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": ".si"
					},
					"AwAAAO9MAAAAAAAA8EwAAAAAAAAAAAAA8EwAAAAAAADxTAAAAAAAAAAAAADxTAAAAAAAAPJMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA70wAAAAAAADvTAAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert_completion",
					{
						"completion": "size",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "size"
					},
					"AgAAAPBMAAAAAAAA8EwAAAAAAAACAAAAc2nwTAAAAAAAAPRMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8kwAAAAAAADyTAAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPRMAAAAAAAA9UwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9EwAAAAAAAD0TAAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": "14"
					},
					"AgAAAPVMAAAAAAAA9kwAAAAAAAAAAAAA9kwAAAAAAAD3TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9UwAAAAAAAD1TAAAAAAAAAAAAAAAAPC/"
				],
				[
					701,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAA90wAAAAAAAD3TAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/Helpers.elm",
			"settings":
			{
				"buffer_size": 1474,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAN4EAAAAAAAA3wQAAAAAAAAAAAAA3wQAAAAAAADnBAAAAAAAAAAAAADnBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA8AQAAAAAAAAAAAAA3wQAAAAAAADfBAAAAAAAAAgAAAAgICAgICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4EAAAAAAAA3gQAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					2,
					"left_delete",
					null,
					"AgAAAOQEAAAAAAAA5AQAAAAAAAAEAAAAICAgIOAEAAAAAAAA4AQAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgEAAAAAAAA6AQAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAOAEAAAAAAAAwAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAEAAAAAAAA4AQAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAAwgUAAAAAAADIBQAAbW9kdWxlIEhlbHBlcnMgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEh0dHAgZXhwb3NpbmcgKC4uKQppbXBvcnQgUmFuZG9tCgoKaHR0cEVycm9yVG9TdHJpbmcgOiBIdHRwLkVycm9yIC0+IFN0cmluZwpodHRwRXJyb3JUb1N0cmluZyBlID0KICAgIGNhc2UgZSBvZgogICAgICAgIEJhZFVybCBzIC0+CiAgICAgICAgICAgICJVcmwgaW52YWxpZGU6ICIgKysgcwoKICAgICAgICBUaW1lb3V0IC0+CiAgICAgICAgICAgICJEw6lsYWkgZCdhdHRlbnRlIGTDqXBhc3PDqSIKCiAgICAgICAgTmV0d29ya0Vycm9yIC0+CiAgICAgICAgICAgICJFcnJldXIgZGUgcsOpc2VhdSIKCiAgICAgICAgQmFkU3RhdHVzIHN0YXR1c0NvZGUgLT4KICAgICAgICAgICAgIkVycmV1ciBzZXJ2ZXVyOiAiCiAgICAgICAgICAgICAgICArKyBTdHJpbmcuZnJvbUludCBzdGF0dXNDb2RlCgogICAgICAgIEJhZEJvZHkgZGV0YWlscyAtPgogICAgICAgICAgICAiRXJyZXVyIGTDqWNvZGFnZTogIiArKyBkZXRhaWxzCgoKc2h1ZmZsZSA6IFJhbmRvbS5TZWVkIC0+IExpc3QgYSAtPiBMaXN0IGEKc2h1ZmZsZSBzZWVkIHhzID0KICAgIGxldAogICAgICAgIG4gPQogICAgICAgICAgICBMaXN0Lmxlbmd0aCB4cwoKICAgICAgICAoIHJhbmRsaXN0LCBfICkgPQogICAgICAgICAgICBSYW5kb20uc3RlcCAoUmFuZG9tLmxpc3QgbiAoUmFuZG9tLmZsb2F0IDAgMSkpIHNlZWQKICAgIGluCiAgICBMaXN0Lm1hcDIgVHVwbGUucGFpciByYW5kbGlzdCB4cwogICAgICAgIHw+IExpc3Quc29ydEJ5IFR1cGxlLmZpcnN0CiAgICAgICAgfD4gTGlzdC5tYXAgVHVwbGUuc2Vjb25kCgoKc2h1ZmZsZVNlZWQgOiBSYW5kb20uU2VlZCAtPiBMaXN0IGEgLT4gKCBSYW5kb20uU2VlZCwgTGlzdCBhICkKc2h1ZmZsZVNlZWQgc2VlZCB4cyA9CiAgICBsZXQKICAgICAgICBuID0KICAgICAgICAgICAgTGlzdC5sZW5ndGggeHMKCiAgICAgICAgKCByYW5kbGlzdCwgbmV3U2VlZCApID0KICAgICAgICAgICAgUmFuZG9tLnN0ZXAgKFJhbmRvbS5saXN0IG4gKFJhbmRvbS5mbG9hdCAwIDEpKSBzZWVkCiAgICBpbgogICAgKCBuZXdTZWVkCiAgICAsIExpc3QubWFwMiBUdXBsZS5wYWlyIHJhbmRsaXN0IHhzCiAgICAgICAgfD4gTGlzdC5zb3J0QnkgVHVwbGUuZmlyc3QKICAgICAgICB8PiBMaXN0Lm1hcCBUdXBsZS5zZWNvbmQKICAgICkKCgptYlN0ciBzID0KICAgIGlmIHMgPT0gIiIgdGhlbgogICAgICAgIE5vdGhpbmcKCiAgICBlbHNlCiAgICAgICAgSnVzdCBzCgppc0hhbnppIGMgPQogICAgbGV0CiAgICAgICAgY29kZSA9CiAgICAgICAgICAgIENoYXIudG9Db2RlIGMKICAgIGluCiAgICBjID09ICfjgIUnIHx8IChjb2RlID49IDB4NEUwMCAmJiBjb2RlIDw9IDB4OUZCRikKCgppc0thbmEgYyA9CiAgICBsZXQKICAgICAgICBjb2RlID0KICAgICAgICAgICAgQ2hhci50b0NvZGUgYwogICAgaW4KICAgIGNvZGUgPj0gMHgzMDQwICYmIGNvZGUgPD0gMHgzMEZGCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAFAAAAAAAAwAUAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "src/ApiCalls.elm",
			"settings":
			{
				"buffer_size": 29009,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					144,
					1,
					"paste",
					null,
					"AgAAAAsgAAAAAAAAKCAAAAAAAAAAAAAAKCAAAAAAAAAoIAAAAAAAABYAAABHb3RKTWRpY3RTZWFyY2hSZXN1bHRz",
					"AQAAAAAAAAABAAAACyAAAAAAAAAhIAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AgAAADAgAAAAAAAAMSAAAAAAAAAAAAAAMSAAAAAAAAAxIAAAAAAAAAUAAABrYW5qaQ",
					"AQAAAAAAAAABAAAAMCAAAAAAAAA1IAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAAMSAAAAAAAAAxIAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "Fron"
					},
					"BQAAABUeAAAAAAAAFh4AAAAAAAAAAAAAFh4AAAAAAAAWHgAAAAAAAAoAAABCYWNrZW5kTXNnFh4AAAAAAAAXHgAAAAAAAAAAAAAXHgAAAAAAABgeAAAAAAAAAAAAABgeAAAAAAAAGR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFR4AAAAAAAAfHgAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert_completion",
					{
						"completion": "FrontendMsg",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "FrontendMsg"
					},
					"AgAAABUeAAAAAAAAFR4AAAAAAAAEAAAARnJvbhUeAAAAAAAAIB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGR4AAAAAAAAZHgAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAAIB4AAAAAAAAgHgAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"paste",
					null,
					"AgAAAJweAAAAAAAAuR4AAAAAAAAAAAAAuR4AAAAAAAC5HgAAAAAAABMAAABqbURpY3RTZWFyY2hGcm9tSmFw",
					"AQAAAAAAAAABAAAAnB4AAAAAAACvHgAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"elm_format",
					null,
					"",
					"AQAAAAAAAAABAAAAuR4AAAAAAAC5HgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/Backend.elm",
			"settings":
			{
				"buffer_size": 3757,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"insert",
					{
						"characters": "road"
					},
					"BAAAAI0OAAAAAAAAjg4AAAAAAAAAAAAAjg4AAAAAAACPDgAAAAAAAAAAAACPDgAAAAAAAJAOAAAAAAAAAAAAAJAOAAAAAAAAkQ4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNDgAAAAAAAI0OAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "CastT"
					},
					"BQAAAJEOAAAAAAAAkg4AAAAAAAAAAAAAkg4AAAAAAACTDgAAAAAAAAAAAACTDgAAAAAAAJQOAAAAAAAAAAAAAJQOAAAAAAAAlQ4AAAAAAAAAAAAAlQ4AAAAAAACWDgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRDgAAAAAAAJEOAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAJYOAAAAAAAAlw4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWDgAAAAAAAJYOAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAJYOAAAAAAAAlg4AAAAAAAABAAAAYg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXDgAAAAAAAJcOAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "B"
					},
					"AQAAAJYOAAAAAAAAlw4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWDgAAAAAAAJYOAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJcOAAAAAAAAmA4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXDgAAAAAAAJcOAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAAJgOAAAAAAAAmQ4AAAAAAAAAAAAAmQ4AAAAAAACaDgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYDgAAAAAAAJgOAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoOAAAAAAAAmw4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaDgAAAAAAAJoOAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJsOAAAAAAAAnA4AAAAAAAAAAAAAnA4AAAAAAACkDgAAAAAAAAAAAACkDgAAAAAAAKgOAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbDgAAAAAAAJsOAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKgOAAAAAAAAqg4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoDgAAAAAAAKgOAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "model,"
					},
					"BgAAAKkOAAAAAAAAqg4AAAAAAAAAAAAAqg4AAAAAAACrDgAAAAAAAAAAAACrDgAAAAAAAKwOAAAAAAAAAAAAAKwOAAAAAAAArQ4AAAAAAAAAAAAArQ4AAAAAAACuDgAAAAAAAAAAAACuDgAAAAAAAK8OAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpDgAAAAAAAKkOAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8OAAAAAAAAsA4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvDgAAAAAAAK8OAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "ini"
					},
					"AwAAALAOAAAAAAAAsQ4AAAAAAAAAAAAAsQ4AAAAAAACyDgAAAAAAAAAAAACyDgAAAAAAALMOAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwDgAAAAAAALAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					2,
					"left_delete",
					null,
					"AgAAALIOAAAAAAAAsg4AAAAAAAABAAAAabEOAAAAAAAAsQ4AAAAAAAABAAAAbg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzDgAAAAAAALMOAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAALAOAAAAAAAAsA4AAAAAAAABAAAAaQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxDgAAAAAAALEOAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"paste",
					null,
					"AQAAALAOAAAAAAAAxQ4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwDgAAAAAAALAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " model"
					},
					"BgAAAMUOAAAAAAAAxg4AAAAAAAAAAAAAxg4AAAAAAADHDgAAAAAAAAAAAADHDgAAAAAAAMgOAAAAAAAAAAAAAMgOAAAAAAAAyQ4AAAAAAAAAAAAAyQ4AAAAAAADKDgAAAAAAAAAAAADKDgAAAAAAAMsOAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFDgAAAAAAAMUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " cl"
					},
					"AwAAAMsOAAAAAAAAzA4AAAAAAAAAAAAAzA4AAAAAAADNDgAAAAAAAAAAAADNDgAAAAAAAM4OAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLDgAAAAAAAMsOAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert_completion",
					{
						"completion": "clientId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "clientId"
					},
					"AgAAAMwOAAAAAAAAzA4AAAAAAAACAAAAY2zMDgAAAAAAANQOAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADODgAAAAAAAM4OAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAAXg8AAAAAAABeDwAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKLS1pbXBvcnQgRGVidWdBcHAKLS1pbXBvcnQgRGVidWdneS5BcHAKCmltcG9ydCBBcGlDYWxscyBleHBvc2luZyAoLi4pCmltcG9ydCBEZWxheQppbXBvcnQgRGljdAppbXBvcnQgR2FtZSBleHBvc2luZyAoLi4pCmltcG9ydCBIZWxwZXJzIGV4cG9zaW5nICguLikKaW1wb3J0IExhbWRlcmEgZXhwb3NpbmcgKENsaWVudElkLCBTZXNzaW9uSWQsIGJyb2FkY2FzdCwgc2VuZFRvRnJvbnRlbmQpCmltcG9ydCBSYW5kb20KaW1wb3J0IFRhc2sKaW1wb3J0IFRpbWUKaW1wb3J0IFR5cGVzIGV4cG9zaW5nICguLikKCgp0eXBlIGFsaWFzIE1vZGVsID0KICAgIEJhY2tlbmRNb2RlbAoKCmFwcCA9CiAgICBMYW1kZXJhLmJhY2tlbmQKICAgICAgICAtLU5vT3BCYWNrZW5kTXNnCiAgICAgICAgLS0iMjIzODEzOGZkMTU2MGI0YyIKICAgICAgICB7IGluaXQgPSBpbml0CiAgICAgICAgLCB1cGRhdGUgPSB1cGRhdGUKICAgICAgICAsIHVwZGF0ZUZyb21Gcm9udGVuZCA9IHVwZGF0ZUZyb21Gcm9udGVuZAogICAgICAgICwgc3Vic2NyaXB0aW9ucyA9CiAgICAgICAgICAgIFxtIC0+CiAgICAgICAgICAgICAgICBpZiBnYW1lc1J1bm5pbmcgbSB0aGVuCiAgICAgICAgICAgICAgICAgICAgVGltZS5ldmVyeSAxMDAwIFJ1bkdhbWVzCgogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIFN1Yi5ub25lCiAgICAgICAgfQoKCmluaXQgOiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmluaXQgPQogICAgKCB7IG1lc3NhZ2UgPSAiIgogICAgICAsIGtnZ2FtZXMgPSBEaWN0LmVtcHR5CiAgICAgICwgcGxheWVycyA9IERpY3QuZW1wdHkKICAgICAgLCBzZWVkID0gUmFuZG9tLmluaXRpYWxTZWVkIDAKICAgICAgfQogICAgICAtLSwgZ2V0V29yZHMgJ+iqnicKICAgICAgLS0sIENtZC5ub25lCiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgLS0gQSBuZXcgY2xpZW50IGhhcyBqb2luZWQhIFNlbmQgdGhlbSBoaXN0b3J5LCBhbmQgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnRDb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAtLXttb2RlbCB8IHBsYXllcnMgPX0KICAgICAgICAgICAgLCBDbWQuYmF0Y2ggW10KICAgICAgICAgICAgICAtLVsgYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKEpvaW5lZCBjbGllbnRJZCkpCiAgICAgICAgICAgICAgLS0sIHNlbmRUb0Zyb250ZW5kIGNsaWVudElkIChIaXN0b3J5UmVjZWl2ZWQgbW9kZWwubWVzc2FnZXMpCiAgICAgICAgICAgICAgLS1dCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgLCBDbWQubm9uZQogICAgICAgICAgICApCgogICAgICAgIC0tYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKExlZnQgY2xpZW50SWQpKSApCiAgICAgICAgR290Sk1kaWN0U2VhcmNoUmVzdWx0cyBnYW1lSWQga2FuamkgcmVzIC0+CiAgICAgICAgICAgIGdvdEpNZGljdFNlYXJjaFJlc3VsdHMgbW9kZWwgZ2FtZUlkIGthbmppIHJlcwoKICAgICAgICBHZXRLZXlzIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5iYXRjaCBbIGdldEthbmppS2V5cyBdICkKCiAgICAgICAgR290S2V5cyByZXMgLT4KICAgICAgICAgICAgY2FzZSByZXMgb2YKICAgICAgICAgICAgICAgIE9rIHMgLT4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBtZXNzYWdlID0gcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiBzKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBFcnIgZSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIChodHRwRXJyb3JUb1N0cmluZyBlKSkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgIEdvdFRpbWUgcG9zaXggLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAoVGltZS5wb3NpeFRvTWlsbGlzIHBvc2l4KSB9LCBDbWQubm9uZSApCgogICAgICAgIFJ1bkdhbWVzIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lcyBtb2RlbCBub3cKCiAgICAgICAgTm9PcEJhY2tlbmRNc2cgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCnVwZGF0ZUZyb21Gcm9udGVuZCA6IFNlc3Npb25JZCAtPiBDbGllbnRJZCAtPiBUb0JhY2tlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGVGcm9tRnJvbnRlbmQgc2Vzc2lvbklkIGNsaWVudElkIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIEdldEtleXNUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIENyZWF0ZUdhbWVUQiBob3N0IGNvbmZpZyBub3cgLT4KICAgICAgICAgICAgY3JlYXRlR2FtZSBtb2RlbCBub3cgaG9zdCBjb25maWcKCiAgICAgICAgSm9pblRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgam9pbkdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBMZWF2ZVRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgVXBkYXRlQ29uZmlnVEIgZ2FtZUlkIGNvbmZpZyAtPgogICAgICAgICAgICB1cGRhdGVDb25maWcgbW9kZWwgZ2FtZUlkIGNvbmZpZwoKICAgICAgICBTdGFydFRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFJlcXVlc3ROZXh0S2FuamlUQiBnYW1lSWQgcGxheWVyIC0+CiAgICAgICAgICAgIHJlcXVlc3ROZXh0S2FuamkgbW9kZWwgZ2FtZUlkIHBsYXllcgoKICAgICAgICBBZGRXb3JkVEIgZ2FtZUlkIHBsYXllciB3b3JkIC0+CiAgICAgICAgICAgIGFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkCgogICAgICAgIFBsYXllckluZm9TdWJtaXR0ZWRUQiB1c2VybmFtZSBwaHBTZXNzaW9uSWQgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgIERpY3QuaW5zZXJ0IHNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB7IHBsYXllciA9IHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgICAgICAgICAgICAgLCBwaHBTZXNzaW9uSWQgPSBwaHBTZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5wbGF5ZXJzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIExhbWRlcmEuc2VuZFRvRnJvbnRlbmQgY2xpZW50SWQgPHwgUGxheWVySW5mb1JlZ2lzdGVyZWRURiB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICkKICAgICAgICBSZXF1ZXN0SW5pdGlhbEdhbWVzQnJvYWRDYXN0VEIgLT4gCiAgICAgICAgICAgIChtb2RlbCwgaW5pdGlhbEdhbWVzQnJvYWRjYXN0IG1vZGVsIGNsaWVudElkKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYDAAAAAAAAJgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAJ8LAAAAAAAAoAsAAAAAAAAAAAAAoAsAAAAAAACsCwAAAAAAAAAAAACsCwAAAAAAAK0LAAAAAAAAAAAAAK0LAAAAAAAAuQsAAAAAAAAAAAAAoAsAAAAAAACgCwAAAAAAAAwAAAAgICAgICAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwsAAAAAAACfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAKkLAAAAAAAAqQsAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQsAAAAAAACtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "LoadIni"
					},
					"BwAAAKkLAAAAAAAAqgsAAAAAAAAAAAAAqgsAAAAAAACrCwAAAAAAAAAAAACrCwAAAAAAAKwLAAAAAAAAAAAAAKwLAAAAAAAArQsAAAAAAAAAAAAArQsAAAAAAACuCwAAAAAAAAAAAACuCwAAAAAAAK8LAAAAAAAAAAAAAK8LAAAAAAAAsAsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQsAAAAAAACpCwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "tialData"
					},
					"CAAAALALAAAAAAAAsQsAAAAAAAAAAAAAsQsAAAAAAACyCwAAAAAAAAAAAACyCwAAAAAAALMLAAAAAAAAAAAAALMLAAAAAAAAtAsAAAAAAAAAAAAAtAsAAAAAAAC1CwAAAAAAAAAAAAC1CwAAAAAAALYLAAAAAAAAAAAAALYLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAAC4CwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsAsAAAAAAACwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "TB"
					},
					"AgAAALgLAAAAAAAAuQsAAAAAAAAAAAAAuQsAAAAAAAC6CwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuAsAAAAAAAC4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAALoLAAAAAAAAuwsAAAAAAAAAAAAAuwsAAAAAAAC8CwAAAAAAAAAAAAC8CwAAAAAAAL0LAAAAAAAAAAAAAL0LAAAAAAAAvgsAAAAAAAAAAAAAvgsAAAAAAAC/CwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAugsAAAAAAAC6CwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_completion",
					{
						"completion": "gameId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gameId"
					},
					"AgAAALsLAAAAAAAAuwsAAAAAAAAEAAAAZ2FtZbsLAAAAAAAAwQsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvwsAAAAAAAC/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMELAAAAAAAAwgsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQsAAAAAAADBCwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "now"
					},
					"AwAAAMILAAAAAAAAwwsAAAAAAAAAAAAAwwsAAAAAAADECwAAAAAAAAAAAADECwAAAAAAAMULAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwgsAAAAAAADCCwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAMULAAAAAAAAxgsAAAAAAAAAAAAAxgsAAAAAAADHCwAAAAAAAAAAAADHCwAAAAAAAMgLAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQsAAAAAAADFCwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAMgLAAAAAAAAyQsAAAAAAAAAAAAAyQsAAAAAAADRCwAAAAAAAAAAAADRCwAAAAAAANULAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyAsAAAAAAADICwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"paste",
					null,
					"AQAAANULAAAAAAAA7QsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1QsAAAAAAADVCwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAArA8AAAAAAACuDwAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKLS1pbXBvcnQgRGVidWdBcHAKLS1pbXBvcnQgRGVidWdneS5BcHAKCmltcG9ydCBBcGlDYWxscyBleHBvc2luZyAoLi4pCmltcG9ydCBEZWxheQppbXBvcnQgRGljdAppbXBvcnQgR2FtZSBleHBvc2luZyAoLi4pCmltcG9ydCBIZWxwZXJzIGV4cG9zaW5nICguLikKaW1wb3J0IExhbWRlcmEgZXhwb3NpbmcgKENsaWVudElkLCBTZXNzaW9uSWQsIGJyb2FkY2FzdCwgc2VuZFRvRnJvbnRlbmQpCmltcG9ydCBSYW5kb20KaW1wb3J0IFRhc2sKaW1wb3J0IFRpbWUKaW1wb3J0IFR5cGVzIGV4cG9zaW5nICguLikKCgp0eXBlIGFsaWFzIE1vZGVsID0KICAgIEJhY2tlbmRNb2RlbAoKCmFwcCA9CiAgICBMYW1kZXJhLmJhY2tlbmQKICAgICAgICAtLU5vT3BCYWNrZW5kTXNnCiAgICAgICAgLS0iMjIzODEzOGZkMTU2MGI0YyIKICAgICAgICB7IGluaXQgPSBpbml0CiAgICAgICAgLCB1cGRhdGUgPSB1cGRhdGUKICAgICAgICAsIHVwZGF0ZUZyb21Gcm9udGVuZCA9IHVwZGF0ZUZyb21Gcm9udGVuZAogICAgICAgICwgc3Vic2NyaXB0aW9ucyA9CiAgICAgICAgICAgIFxtIC0+CiAgICAgICAgICAgICAgICBpZiBnYW1lc1J1bm5pbmcgbSB0aGVuCiAgICAgICAgICAgICAgICAgICAgVGltZS5ldmVyeSAxMDAwIFJ1bkdhbWVzCgogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIFN1Yi5ub25lCiAgICAgICAgfQoKCmluaXQgOiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmluaXQgPQogICAgKCB7IG1lc3NhZ2UgPSAiIgogICAgICAsIGtnZ2FtZXMgPSBEaWN0LmVtcHR5CiAgICAgICwgcGxheWVycyA9IERpY3QuZW1wdHkKICAgICAgLCBzZWVkID0gUmFuZG9tLmluaXRpYWxTZWVkIDAKICAgICAgfQogICAgICAtLSwgZ2V0V29yZHMgJ+iqnicKICAgICAgLS0sIENtZC5ub25lCiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgLS0gQSBuZXcgY2xpZW50IGhhcyBqb2luZWQhIFNlbmQgdGhlbSBoaXN0b3J5LCBhbmQgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnRDb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAtLXttb2RlbCB8IHBsYXllcnMgPX0KICAgICAgICAgICAgLCBDbWQuYmF0Y2ggW10KICAgICAgICAgICAgICAtLVsgYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKEpvaW5lZCBjbGllbnRJZCkpCiAgICAgICAgICAgICAgLS0sIHNlbmRUb0Zyb250ZW5kIGNsaWVudElkIChIaXN0b3J5UmVjZWl2ZWQgbW9kZWwubWVzc2FnZXMpCiAgICAgICAgICAgICAgLS1dCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgLCBDbWQubm9uZQogICAgICAgICAgICApCgogICAgICAgIC0tYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKExlZnQgY2xpZW50SWQpKSApCiAgICAgICAgR290Sk1kaWN0U2VhcmNoUmVzdWx0cyBnYW1lSWQga2FuamkgcmVzIC0+CiAgICAgICAgICAgIGdvdEpNZGljdFNlYXJjaFJlc3VsdHMgbW9kZWwgZ2FtZUlkIGthbmppIHJlcwoKICAgICAgICBHZXRLZXlzIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5iYXRjaCBbIGdldEthbmppS2V5cyBdICkKCiAgICAgICAgR290S2V5cyByZXMgLT4KICAgICAgICAgICAgY2FzZSByZXMgb2YKICAgICAgICAgICAgICAgIE9rIHMgLT4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBtZXNzYWdlID0gcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiBzKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBFcnIgZSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIChodHRwRXJyb3JUb1N0cmluZyBlKSkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgIEdvdFRpbWUgcG9zaXggLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAoVGltZS5wb3NpeFRvTWlsbGlzIHBvc2l4KSB9LCBDbWQubm9uZSApCgogICAgICAgIFJ1bkdhbWVzIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lcyBtb2RlbCBub3cKCiAgICAgICAgTm9PcEJhY2tlbmRNc2cgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCnVwZGF0ZUZyb21Gcm9udGVuZCA6IFNlc3Npb25JZCAtPiBDbGllbnRJZCAtPiBUb0JhY2tlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGVGcm9tRnJvbnRlbmQgc2Vzc2lvbklkIGNsaWVudElkIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIEdldEtleXNUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIENyZWF0ZUdhbWVUQiBob3N0IGNvbmZpZyBub3cgLT4KICAgICAgICAgICAgY3JlYXRlR2FtZSBtb2RlbCBub3cgaG9zdCBjb25maWcKCiAgICAgICAgSm9pblRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgam9pbkdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBMZWF2ZVRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgVXBkYXRlQ29uZmlnVEIgZ2FtZUlkIGNvbmZpZyAtPgogICAgICAgICAgICB1cGRhdGVDb25maWcgbW9kZWwgZ2FtZUlkIGNvbmZpZwoKICAgICAgICBMb2FkSW5pdGlhbERhdGFUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBTdGFydFRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFJlcXVlc3ROZXh0S2FuamlUQiBnYW1lSWQgcGxheWVyIC0+CiAgICAgICAgICAgIHJlcXVlc3ROZXh0S2FuamkgbW9kZWwgZ2FtZUlkIHBsYXllcgoKICAgICAgICBBZGRXb3JkVEIgZ2FtZUlkIHBsYXllciB3b3JkIC0+CiAgICAgICAgICAgIGFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkCgogICAgICAgIFBsYXllckluZm9TdWJtaXR0ZWRUQiB1c2VybmFtZSBwaHBTZXNzaW9uSWQgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgIERpY3QuaW5zZXJ0IHNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB7IHBsYXllciA9IHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgICAgICAgICAgICAgLCBwaHBTZXNzaW9uSWQgPSBwaHBTZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5wbGF5ZXJzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIExhbWRlcmEuc2VuZFRvRnJvbnRlbmQgY2xpZW50SWQgPHwgUGxheWVySW5mb1JlZ2lzdGVyZWRURiB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICkKCiAgICAgICAgUmVxdWVzdEluaXRpYWxHYW1lc0Jyb2FkQ2FzdFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIGluaXRpYWxHYW1lc0Jyb2FkY2FzdCBtb2RlbCBjbGllbnRJZCApCgogICAgICAgIE5vT3BUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7QsAAAAAAADtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuDwAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKLS1pbXBvcnQgRGVidWdBcHAKLS1pbXBvcnQgRGVidWdneS5BcHAKCmltcG9ydCBBcGlDYWxscyBleHBvc2luZyAoLi4pCmltcG9ydCBEZWxheQppbXBvcnQgRGljdAppbXBvcnQgR2FtZSBleHBvc2luZyAoLi4pCmltcG9ydCBIZWxwZXJzIGV4cG9zaW5nICguLikKaW1wb3J0IExhbWRlcmEgZXhwb3NpbmcgKENsaWVudElkLCBTZXNzaW9uSWQsIGJyb2FkY2FzdCwgc2VuZFRvRnJvbnRlbmQpCmltcG9ydCBSYW5kb20KaW1wb3J0IFRhc2sKaW1wb3J0IFRpbWUKaW1wb3J0IFR5cGVzIGV4cG9zaW5nICguLikKCgp0eXBlIGFsaWFzIE1vZGVsID0KICAgIEJhY2tlbmRNb2RlbAoKCmFwcCA9CiAgICBMYW1kZXJhLmJhY2tlbmQKICAgICAgICAtLU5vT3BCYWNrZW5kTXNnCiAgICAgICAgLS0iMjIzODEzOGZkMTU2MGI0YyIKICAgICAgICB7IGluaXQgPSBpbml0CiAgICAgICAgLCB1cGRhdGUgPSB1cGRhdGUKICAgICAgICAsIHVwZGF0ZUZyb21Gcm9udGVuZCA9IHVwZGF0ZUZyb21Gcm9udGVuZAogICAgICAgICwgc3Vic2NyaXB0aW9ucyA9CiAgICAgICAgICAgIFxtIC0+CiAgICAgICAgICAgICAgICBpZiBnYW1lc1J1bm5pbmcgbSB0aGVuCiAgICAgICAgICAgICAgICAgICAgVGltZS5ldmVyeSAxMDAwIFJ1bkdhbWVzCgogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIFN1Yi5ub25lCiAgICAgICAgfQoKCmluaXQgOiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmluaXQgPQogICAgKCB7IG1lc3NhZ2UgPSAiIgogICAgICAsIGtnZ2FtZXMgPSBEaWN0LmVtcHR5CiAgICAgICwgcGxheWVycyA9IERpY3QuZW1wdHkKICAgICAgLCBzZWVkID0gUmFuZG9tLmluaXRpYWxTZWVkIDAKICAgICAgfQogICAgICAtLSwgZ2V0V29yZHMgJ+iqnicKICAgICAgLS0sIENtZC5ub25lCiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgLS0gQSBuZXcgY2xpZW50IGhhcyBqb2luZWQhIFNlbmQgdGhlbSBoaXN0b3J5LCBhbmQgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnRDb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAtLXttb2RlbCB8IHBsYXllcnMgPX0KICAgICAgICAgICAgLCBDbWQuYmF0Y2ggW10KICAgICAgICAgICAgICAtLVsgYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKEpvaW5lZCBjbGllbnRJZCkpCiAgICAgICAgICAgICAgLS0sIHNlbmRUb0Zyb250ZW5kIGNsaWVudElkIChIaXN0b3J5UmVjZWl2ZWQgbW9kZWwubWVzc2FnZXMpCiAgICAgICAgICAgICAgLS1dCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgLCBDbWQubm9uZQogICAgICAgICAgICApCgogICAgICAgIC0tYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKExlZnQgY2xpZW50SWQpKSApCiAgICAgICAgR290Sk1kaWN0U2VhcmNoUmVzdWx0cyBnYW1lSWQga2FuamkgcmVzIC0+CiAgICAgICAgICAgIGdvdEpNZGljdFNlYXJjaFJlc3VsdHMgbW9kZWwgZ2FtZUlkIGthbmppIHJlcwoKICAgICAgICBHZXRLZXlzIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5iYXRjaCBbIGdldEthbmppS2V5cyBdICkKCiAgICAgICAgR290S2V5cyByZXMgLT4KICAgICAgICAgICAgY2FzZSByZXMgb2YKICAgICAgICAgICAgICAgIE9rIHMgLT4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBtZXNzYWdlID0gcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiBzKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBFcnIgZSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIChodHRwRXJyb3JUb1N0cmluZyBlKSkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgIEdvdFRpbWUgcG9zaXggLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAoVGltZS5wb3NpeFRvTWlsbGlzIHBvc2l4KSB9LCBDbWQubm9uZSApCgogICAgICAgIFJ1bkdhbWVzIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lcyBtb2RlbCBub3cKCiAgICAgICAgTm9PcEJhY2tlbmRNc2cgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCnVwZGF0ZUZyb21Gcm9udGVuZCA6IFNlc3Npb25JZCAtPiBDbGllbnRJZCAtPiBUb0JhY2tlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGVGcm9tRnJvbnRlbmQgc2Vzc2lvbklkIGNsaWVudElkIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIEdldEtleXNUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIENyZWF0ZUdhbWVUQiBob3N0IGNvbmZpZyBub3cgLT4KICAgICAgICAgICAgY3JlYXRlR2FtZSBtb2RlbCBub3cgaG9zdCBjb25maWcKCiAgICAgICAgSm9pblRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgam9pbkdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBMZWF2ZVRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgVXBkYXRlQ29uZmlnVEIgZ2FtZUlkIGNvbmZpZyAtPgogICAgICAgICAgICB1cGRhdGVDb25maWcgbW9kZWwgZ2FtZUlkIGNvbmZpZwoKICAgICAgICBMb2FkSW5pdGlhbERhdGFUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBTdGFydFRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFJlcXVlc3ROZXh0S2FuamlUQiBnYW1lSWQgcGxheWVyIC0+CiAgICAgICAgICAgIHJlcXVlc3ROZXh0S2FuamkgbW9kZWwgZ2FtZUlkIHBsYXllcgoKICAgICAgICBBZGRXb3JkVEIgZ2FtZUlkIHBsYXllciB3b3JkIC0+CiAgICAgICAgICAgIGFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkCgogICAgICAgIFBsYXllckluZm9TdWJtaXR0ZWRUQiB1c2VybmFtZSBwaHBTZXNzaW9uSWQgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgIERpY3QuaW5zZXJ0IHNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB7IHBsYXllciA9IHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgICAgICAgICAgICAgLCBwaHBTZXNzaW9uSWQgPSBwaHBTZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5wbGF5ZXJzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIExhbWRlcmEuc2VuZFRvRnJvbnRlbmQgY2xpZW50SWQgPHwgUGxheWVySW5mb1JlZ2lzdGVyZWRURiB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICkKCiAgICAgICAgUmVxdWVzdEluaXRpYWxHYW1lc0Jyb2FkQ2FzdFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIGluaXRpYWxHYW1lc0Jyb2FkY2FzdCBtb2RlbCBjbGllbnRJZCApCgogICAgICAgIE5vT3BUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KAAAAAAAAAACsDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gsAAAAAAADaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuDwAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKLS1pbXBvcnQgRGVidWdBcHAKLS1pbXBvcnQgRGVidWdneS5BcHAKCmltcG9ydCBBcGlDYWxscyBleHBvc2luZyAoLi4pCmltcG9ydCBEZWxheQppbXBvcnQgRGljdAppbXBvcnQgR2FtZSBleHBvc2luZyAoLi4pCmltcG9ydCBIZWxwZXJzIGV4cG9zaW5nICguLikKaW1wb3J0IExhbWRlcmEgZXhwb3NpbmcgKENsaWVudElkLCBTZXNzaW9uSWQsIGJyb2FkY2FzdCwgc2VuZFRvRnJvbnRlbmQpCmltcG9ydCBSYW5kb20KaW1wb3J0IFRhc2sKaW1wb3J0IFRpbWUKaW1wb3J0IFR5cGVzIGV4cG9zaW5nICguLikKCgp0eXBlIGFsaWFzIE1vZGVsID0KICAgIEJhY2tlbmRNb2RlbAoKCmFwcCA9CiAgICBMYW1kZXJhLmJhY2tlbmQKICAgICAgICAtLU5vT3BCYWNrZW5kTXNnCiAgICAgICAgLS0iMjIzODEzOGZkMTU2MGI0YyIKICAgICAgICB7IGluaXQgPSBpbml0CiAgICAgICAgLCB1cGRhdGUgPSB1cGRhdGUKICAgICAgICAsIHVwZGF0ZUZyb21Gcm9udGVuZCA9IHVwZGF0ZUZyb21Gcm9udGVuZAogICAgICAgICwgc3Vic2NyaXB0aW9ucyA9CiAgICAgICAgICAgIFxtIC0+CiAgICAgICAgICAgICAgICBpZiBnYW1lc1J1bm5pbmcgbSB0aGVuCiAgICAgICAgICAgICAgICAgICAgVGltZS5ldmVyeSAxMDAwIFJ1bkdhbWVzCgogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIFN1Yi5ub25lCiAgICAgICAgfQoKCmluaXQgOiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmluaXQgPQogICAgKCB7IG1lc3NhZ2UgPSAiIgogICAgICAsIGtnZ2FtZXMgPSBEaWN0LmVtcHR5CiAgICAgICwgcGxheWVycyA9IERpY3QuZW1wdHkKICAgICAgLCBzZWVkID0gUmFuZG9tLmluaXRpYWxTZWVkIDAKICAgICAgfQogICAgICAtLSwgZ2V0V29yZHMgJ+iqnicKICAgICAgLS0sIENtZC5ub25lCiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgLS0gQSBuZXcgY2xpZW50IGhhcyBqb2luZWQhIFNlbmQgdGhlbSBoaXN0b3J5LCBhbmQgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnRDb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAtLXttb2RlbCB8IHBsYXllcnMgPX0KICAgICAgICAgICAgLCBDbWQuYmF0Y2ggW10KICAgICAgICAgICAgICAtLVsgYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKEpvaW5lZCBjbGllbnRJZCkpCiAgICAgICAgICAgICAgLS0sIHNlbmRUb0Zyb250ZW5kIGNsaWVudElkIChIaXN0b3J5UmVjZWl2ZWQgbW9kZWwubWVzc2FnZXMpCiAgICAgICAgICAgICAgLS1dCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgLCBDbWQubm9uZQogICAgICAgICAgICApCgogICAgICAgIC0tYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKExlZnQgY2xpZW50SWQpKSApCiAgICAgICAgR290Sk1kaWN0U2VhcmNoUmVzdWx0cyBnYW1lSWQga2FuamkgcmVzIC0+CiAgICAgICAgICAgIGdvdEpNZGljdFNlYXJjaFJlc3VsdHMgbW9kZWwgZ2FtZUlkIGthbmppIHJlcwoKICAgICAgICBHZXRLZXlzIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5iYXRjaCBbIGdldEthbmppS2V5cyBdICkKCiAgICAgICAgR290S2V5cyByZXMgLT4KICAgICAgICAgICAgY2FzZSByZXMgb2YKICAgICAgICAgICAgICAgIE9rIHMgLT4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBtZXNzYWdlID0gcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiBzKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBFcnIgZSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIChodHRwRXJyb3JUb1N0cmluZyBlKSkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgIEdvdFRpbWUgcG9zaXggLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAoVGltZS5wb3NpeFRvTWlsbGlzIHBvc2l4KSB9LCBDbWQubm9uZSApCgogICAgICAgIFJ1bkdhbWVzIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lcyBtb2RlbCBub3cKCiAgICAgICAgTm9PcEJhY2tlbmRNc2cgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCnVwZGF0ZUZyb21Gcm9udGVuZCA6IFNlc3Npb25JZCAtPiBDbGllbnRJZCAtPiBUb0JhY2tlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGVGcm9tRnJvbnRlbmQgc2Vzc2lvbklkIGNsaWVudElkIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIEdldEtleXNUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIENyZWF0ZUdhbWVUQiBob3N0IGNvbmZpZyBub3cgLT4KICAgICAgICAgICAgY3JlYXRlR2FtZSBtb2RlbCBub3cgaG9zdCBjb25maWcKCiAgICAgICAgSm9pblRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgam9pbkdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBMZWF2ZVRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgVXBkYXRlQ29uZmlnVEIgZ2FtZUlkIGNvbmZpZyAtPgogICAgICAgICAgICB1cGRhdGVDb25maWcgbW9kZWwgZ2FtZUlkIGNvbmZpZwoKICAgICAgICBMb2FkSW5pdGlhbERhdGFUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBTdGFydFRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFJlcXVlc3ROZXh0S2FuamlUQiBnYW1lSWQgcGxheWVyIC0+CiAgICAgICAgICAgIHJlcXVlc3ROZXh0S2FuamkgbW9kZWwgZ2FtZUlkIHBsYXllcgoKICAgICAgICBBZGRXb3JkVEIgZ2FtZUlkIHBsYXllciB3b3JkIC0+CiAgICAgICAgICAgIGFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkCgogICAgICAgIFBsYXllckluZm9TdWJtaXR0ZWRUQiB1c2VybmFtZSBwaHBTZXNzaW9uSWQgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgIERpY3QuaW5zZXJ0IHNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB7IHBsYXllciA9IHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgICAgICAgICAgICAgLCBwaHBTZXNzaW9uSWQgPSBwaHBTZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5wbGF5ZXJzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIExhbWRlcmEuc2VuZFRvRnJvbnRlbmQgY2xpZW50SWQgPHwgUGxheWVySW5mb1JlZ2lzdGVyZWRURiB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICkKCiAgICAgICAgUmVxdWVzdEluaXRpYWxHYW1lc0Jyb2FkQ2FzdFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIGluaXRpYWxHYW1lc0Jyb2FkY2FzdCBtb2RlbCBjbGllbnRJZCApCgogICAgICAgIE5vT3BUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KAAAAAAAAAACsDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gsAAAAAAADaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuDwAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKLS1pbXBvcnQgRGVidWdBcHAKLS1pbXBvcnQgRGVidWdneS5BcHAKCmltcG9ydCBBcGlDYWxscyBleHBvc2luZyAoLi4pCmltcG9ydCBEZWxheQppbXBvcnQgRGljdAppbXBvcnQgR2FtZSBleHBvc2luZyAoLi4pCmltcG9ydCBIZWxwZXJzIGV4cG9zaW5nICguLikKaW1wb3J0IExhbWRlcmEgZXhwb3NpbmcgKENsaWVudElkLCBTZXNzaW9uSWQsIGJyb2FkY2FzdCwgc2VuZFRvRnJvbnRlbmQpCmltcG9ydCBSYW5kb20KaW1wb3J0IFRhc2sKaW1wb3J0IFRpbWUKaW1wb3J0IFR5cGVzIGV4cG9zaW5nICguLikKCgp0eXBlIGFsaWFzIE1vZGVsID0KICAgIEJhY2tlbmRNb2RlbAoKCmFwcCA9CiAgICBMYW1kZXJhLmJhY2tlbmQKICAgICAgICAtLU5vT3BCYWNrZW5kTXNnCiAgICAgICAgLS0iMjIzODEzOGZkMTU2MGI0YyIKICAgICAgICB7IGluaXQgPSBpbml0CiAgICAgICAgLCB1cGRhdGUgPSB1cGRhdGUKICAgICAgICAsIHVwZGF0ZUZyb21Gcm9udGVuZCA9IHVwZGF0ZUZyb21Gcm9udGVuZAogICAgICAgICwgc3Vic2NyaXB0aW9ucyA9CiAgICAgICAgICAgIFxtIC0+CiAgICAgICAgICAgICAgICBpZiBnYW1lc1J1bm5pbmcgbSB0aGVuCiAgICAgICAgICAgICAgICAgICAgVGltZS5ldmVyeSAxMDAwIFJ1bkdhbWVzCgogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIFN1Yi5ub25lCiAgICAgICAgfQoKCmluaXQgOiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmluaXQgPQogICAgKCB7IG1lc3NhZ2UgPSAiIgogICAgICAsIGtnZ2FtZXMgPSBEaWN0LmVtcHR5CiAgICAgICwgcGxheWVycyA9IERpY3QuZW1wdHkKICAgICAgLCBzZWVkID0gUmFuZG9tLmluaXRpYWxTZWVkIDAKICAgICAgfQogICAgICAtLSwgZ2V0V29yZHMgJ+iqnicKICAgICAgLS0sIENtZC5ub25lCiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgLS0gQSBuZXcgY2xpZW50IGhhcyBqb2luZWQhIFNlbmQgdGhlbSBoaXN0b3J5LCBhbmQgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnRDb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAtLXttb2RlbCB8IHBsYXllcnMgPX0KICAgICAgICAgICAgLCBDbWQuYmF0Y2ggW10KICAgICAgICAgICAgICAtLVsgYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKEpvaW5lZCBjbGllbnRJZCkpCiAgICAgICAgICAgICAgLS0sIHNlbmRUb0Zyb250ZW5kIGNsaWVudElkIChIaXN0b3J5UmVjZWl2ZWQgbW9kZWwubWVzc2FnZXMpCiAgICAgICAgICAgICAgLS1dCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgLCBDbWQubm9uZQogICAgICAgICAgICApCgogICAgICAgIC0tYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKExlZnQgY2xpZW50SWQpKSApCiAgICAgICAgR290Sk1kaWN0U2VhcmNoUmVzdWx0cyBnYW1lSWQga2FuamkgcmVzIC0+CiAgICAgICAgICAgIGdvdEpNZGljdFNlYXJjaFJlc3VsdHMgbW9kZWwgZ2FtZUlkIGthbmppIHJlcwoKICAgICAgICBHZXRLZXlzIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5iYXRjaCBbIGdldEthbmppS2V5cyBdICkKCiAgICAgICAgR290S2V5cyByZXMgLT4KICAgICAgICAgICAgY2FzZSByZXMgb2YKICAgICAgICAgICAgICAgIE9rIHMgLT4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBtZXNzYWdlID0gcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiBzKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBFcnIgZSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIChodHRwRXJyb3JUb1N0cmluZyBlKSkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgIEdvdFRpbWUgcG9zaXggLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAoVGltZS5wb3NpeFRvTWlsbGlzIHBvc2l4KSB9LCBDbWQubm9uZSApCgogICAgICAgIFJ1bkdhbWVzIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lcyBtb2RlbCBub3cKCiAgICAgICAgTm9PcEJhY2tlbmRNc2cgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCnVwZGF0ZUZyb21Gcm9udGVuZCA6IFNlc3Npb25JZCAtPiBDbGllbnRJZCAtPiBUb0JhY2tlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGVGcm9tRnJvbnRlbmQgc2Vzc2lvbklkIGNsaWVudElkIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIEdldEtleXNUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIENyZWF0ZUdhbWVUQiBob3N0IGNvbmZpZyBub3cgLT4KICAgICAgICAgICAgY3JlYXRlR2FtZSBtb2RlbCBub3cgaG9zdCBjb25maWcKCiAgICAgICAgSm9pblRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgam9pbkdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBMZWF2ZVRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgVXBkYXRlQ29uZmlnVEIgZ2FtZUlkIGNvbmZpZyAtPgogICAgICAgICAgICB1cGRhdGVDb25maWcgbW9kZWwgZ2FtZUlkIGNvbmZpZwoKICAgICAgICBMb2FkSW5pdGlhbERhdGFUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBTdGFydFRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFJlcXVlc3ROZXh0S2FuamlUQiBnYW1lSWQgcGxheWVyIC0+CiAgICAgICAgICAgIHJlcXVlc3ROZXh0S2FuamkgbW9kZWwgZ2FtZUlkIHBsYXllcgoKICAgICAgICBBZGRXb3JkVEIgZ2FtZUlkIHBsYXllciB3b3JkIC0+CiAgICAgICAgICAgIGFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkCgogICAgICAgIFBsYXllckluZm9TdWJtaXR0ZWRUQiB1c2VybmFtZSBwaHBTZXNzaW9uSWQgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgIERpY3QuaW5zZXJ0IHNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB7IHBsYXllciA9IHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgICAgICAgICAgICAgLCBwaHBTZXNzaW9uSWQgPSBwaHBTZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5wbGF5ZXJzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIExhbWRlcmEuc2VuZFRvRnJvbnRlbmQgY2xpZW50SWQgPHwgUGxheWVySW5mb1JlZ2lzdGVyZWRURiB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICkKCiAgICAgICAgUmVxdWVzdEluaXRpYWxHYW1lc0Jyb2FkQ2FzdFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIGluaXRpYWxHYW1lc0Jyb2FkY2FzdCBtb2RlbCBjbGllbnRJZCApCgogICAgICAgIE5vT3BUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KAAAAAAAAAACsDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gsAAAAAAADaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuDwAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKLS1pbXBvcnQgRGVidWdBcHAKLS1pbXBvcnQgRGVidWdneS5BcHAKCmltcG9ydCBBcGlDYWxscyBleHBvc2luZyAoLi4pCmltcG9ydCBEZWxheQppbXBvcnQgRGljdAppbXBvcnQgR2FtZSBleHBvc2luZyAoLi4pCmltcG9ydCBIZWxwZXJzIGV4cG9zaW5nICguLikKaW1wb3J0IExhbWRlcmEgZXhwb3NpbmcgKENsaWVudElkLCBTZXNzaW9uSWQsIGJyb2FkY2FzdCwgc2VuZFRvRnJvbnRlbmQpCmltcG9ydCBSYW5kb20KaW1wb3J0IFRhc2sKaW1wb3J0IFRpbWUKaW1wb3J0IFR5cGVzIGV4cG9zaW5nICguLikKCgp0eXBlIGFsaWFzIE1vZGVsID0KICAgIEJhY2tlbmRNb2RlbAoKCmFwcCA9CiAgICBMYW1kZXJhLmJhY2tlbmQKICAgICAgICAtLU5vT3BCYWNrZW5kTXNnCiAgICAgICAgLS0iMjIzODEzOGZkMTU2MGI0YyIKICAgICAgICB7IGluaXQgPSBpbml0CiAgICAgICAgLCB1cGRhdGUgPSB1cGRhdGUKICAgICAgICAsIHVwZGF0ZUZyb21Gcm9udGVuZCA9IHVwZGF0ZUZyb21Gcm9udGVuZAogICAgICAgICwgc3Vic2NyaXB0aW9ucyA9CiAgICAgICAgICAgIFxtIC0+CiAgICAgICAgICAgICAgICBpZiBnYW1lc1J1bm5pbmcgbSB0aGVuCiAgICAgICAgICAgICAgICAgICAgVGltZS5ldmVyeSAxMDAwIFJ1bkdhbWVzCgogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIFN1Yi5ub25lCiAgICAgICAgfQoKCmluaXQgOiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCmluaXQgPQogICAgKCB7IG1lc3NhZ2UgPSAiIgogICAgICAsIGtnZ2FtZXMgPSBEaWN0LmVtcHR5CiAgICAgICwgcGxheWVycyA9IERpY3QuZW1wdHkKICAgICAgLCBzZWVkID0gUmFuZG9tLmluaXRpYWxTZWVkIDAKICAgICAgfQogICAgICAtLSwgZ2V0V29yZHMgJ+iqnicKICAgICAgLS0sIENtZC5ub25lCiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgLS0gQSBuZXcgY2xpZW50IGhhcyBqb2luZWQhIFNlbmQgdGhlbSBoaXN0b3J5LCBhbmQgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnRDb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAtLXttb2RlbCB8IHBsYXllcnMgPX0KICAgICAgICAgICAgLCBDbWQuYmF0Y2ggW10KICAgICAgICAgICAgICAtLVsgYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKEpvaW5lZCBjbGllbnRJZCkpCiAgICAgICAgICAgICAgLS0sIHNlbmRUb0Zyb250ZW5kIGNsaWVudElkIChIaXN0b3J5UmVjZWl2ZWQgbW9kZWwubWVzc2FnZXMpCiAgICAgICAgICAgICAgLS1dCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgLCBDbWQubm9uZQogICAgICAgICAgICApCgogICAgICAgIC0tYnJvYWRjYXN0IChNZXNzYWdlUmVjZWl2ZWQgKExlZnQgY2xpZW50SWQpKSApCiAgICAgICAgR290Sk1kaWN0U2VhcmNoUmVzdWx0cyBnYW1lSWQga2FuamkgcmVzIC0+CiAgICAgICAgICAgIGdvdEpNZGljdFNlYXJjaFJlc3VsdHMgbW9kZWwgZ2FtZUlkIGthbmppIHJlcwoKICAgICAgICBHZXRLZXlzIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5iYXRjaCBbIGdldEthbmppS2V5cyBdICkKCiAgICAgICAgR290S2V5cyByZXMgLT4KICAgICAgICAgICAgY2FzZSByZXMgb2YKICAgICAgICAgICAgICAgIE9rIHMgLT4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBtZXNzYWdlID0gcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiBzKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBFcnIgZSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIChodHRwRXJyb3JUb1N0cmluZyBlKSkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgIEdvdFRpbWUgcG9zaXggLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAoVGltZS5wb3NpeFRvTWlsbGlzIHBvc2l4KSB9LCBDbWQubm9uZSApCgogICAgICAgIFJ1bkdhbWVzIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lcyBtb2RlbCBub3cKCiAgICAgICAgTm9PcEJhY2tlbmRNc2cgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCnVwZGF0ZUZyb21Gcm9udGVuZCA6IFNlc3Npb25JZCAtPiBDbGllbnRJZCAtPiBUb0JhY2tlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGVGcm9tRnJvbnRlbmQgc2Vzc2lvbklkIGNsaWVudElkIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIEdldEtleXNUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIENyZWF0ZUdhbWVUQiBob3N0IGNvbmZpZyBub3cgLT4KICAgICAgICAgICAgY3JlYXRlR2FtZSBtb2RlbCBub3cgaG9zdCBjb25maWcKCiAgICAgICAgSm9pblRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgam9pbkdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBMZWF2ZVRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgVXBkYXRlQ29uZmlnVEIgZ2FtZUlkIGNvbmZpZyAtPgogICAgICAgICAgICB1cGRhdGVDb25maWcgbW9kZWwgZ2FtZUlkIGNvbmZpZwoKICAgICAgICBMb2FkSW5pdGlhbERhdGFUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBTdGFydFRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFJlcXVlc3ROZXh0S2FuamlUQiBnYW1lSWQgcGxheWVyIC0+CiAgICAgICAgICAgIHJlcXVlc3ROZXh0S2FuamkgbW9kZWwgZ2FtZUlkIHBsYXllcgoKICAgICAgICBBZGRXb3JkVEIgZ2FtZUlkIHBsYXllciB3b3JkIC0+CiAgICAgICAgICAgIGFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkCgogICAgICAgIFBsYXllckluZm9TdWJtaXR0ZWRUQiB1c2VybmFtZSBwaHBTZXNzaW9uSWQgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgIERpY3QuaW5zZXJ0IHNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB7IHBsYXllciA9IHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgICAgICAgICAgICAgLCBwaHBTZXNzaW9uSWQgPSBwaHBTZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5wbGF5ZXJzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIExhbWRlcmEuc2VuZFRvRnJvbnRlbmQgY2xpZW50SWQgPHwgUGxheWVySW5mb1JlZ2lzdGVyZWRURiB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICkKCiAgICAgICAgUmVxdWVzdEluaXRpYWxHYW1lc0Jyb2FkQ2FzdFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIGluaXRpYWxHYW1lc0Jyb2FkY2FzdCBtb2RlbCBjbGllbnRJZCApCgogICAgICAgIE5vT3BUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KAAAAAAAAAACsDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gsAAAAAAADaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAIgBAAAAAAAAiAEAAAAAAAA2AAAALS1Ob09wQmFja2VuZE1zZwogICAgICAgIC0tIjIyMzgxMzhmZDE1NjBiNGMiCiAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiAEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"left_delete",
					null,
					"AQAAAB4AAAAAAAAAHgAAAAAAAAAmAAAALS1pbXBvcnQgRGVidWdBcHAKLS1pbXBvcnQgRGVidWdneS5BcHA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAATg8AAAAAAABSDwAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKCgppbXBvcnQgQXBpQ2FsbHMgZXhwb3NpbmcgKC4uKQppbXBvcnQgRGVsYXkKaW1wb3J0IERpY3QKaW1wb3J0IEdhbWUgZXhwb3NpbmcgKC4uKQppbXBvcnQgSGVscGVycyBleHBvc2luZyAoLi4pCmltcG9ydCBMYW1kZXJhIGV4cG9zaW5nIChDbGllbnRJZCwgU2Vzc2lvbklkLCBicm9hZGNhc3QsIHNlbmRUb0Zyb250ZW5kKQppbXBvcnQgUmFuZG9tCmltcG9ydCBUYXNrCmltcG9ydCBUaW1lCmltcG9ydCBUeXBlcyBleHBvc2luZyAoLi4pCgoKdHlwZSBhbGlhcyBNb2RlbCA9CiAgICBCYWNrZW5kTW9kZWwKCgphcHAgPQogICAgTGFtZGVyYS5iYWNrZW5kCiAgICAgICAgeyBpbml0ID0gaW5pdAogICAgICAgICwgdXBkYXRlID0gdXBkYXRlCiAgICAgICAgLCB1cGRhdGVGcm9tRnJvbnRlbmQgPSB1cGRhdGVGcm9tRnJvbnRlbmQKICAgICAgICAsIHN1YnNjcmlwdGlvbnMgPQogICAgICAgICAgICBcbSAtPgogICAgICAgICAgICAgICAgaWYgZ2FtZXNSdW5uaW5nIG0gdGhlbgogICAgICAgICAgICAgICAgICAgIFRpbWUuZXZlcnkgMTAwMCBSdW5HYW1lcwoKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICBTdWIubm9uZQogICAgICAgIH0KCgppbml0IDogKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQppbml0ID0KICAgICggeyBtZXNzYWdlID0gIiIKICAgICAgLCBrZ2dhbWVzID0gRGljdC5lbXB0eQogICAgICAsIHBsYXllcnMgPSBEaWN0LmVtcHR5CiAgICAgICwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAwCiAgICAgIH0KICAgICAgLS0sIGdldFdvcmRzICfoqp4nCiAgICAgIC0tLCBDbWQubm9uZQogICAgLCBDbWQuYmF0Y2gKICAgICAgICBbIFRhc2sucGVyZm9ybSBHb3RUaW1lIFRpbWUubm93IF0KICAgICkKCgp1cGRhdGUgOiBCYWNrZW5kTXNnIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIC0tIEEgbmV3IGNsaWVudCBoYXMgam9pbmVkISBTZW5kIHRoZW0gaGlzdG9yeSwgYW5kIGxldCBldmVyeW9uZSBrbm93CiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgLS17bW9kZWwgfCBwbGF5ZXJzID19CiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICAgLS1bIGJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChKb2luZWQgY2xpZW50SWQpKQogICAgICAgICAgICAgIC0tLCBzZW5kVG9Gcm9udGVuZCBjbGllbnRJZCAoSGlzdG9yeVJlY2VpdmVkIG1vZGVsLm1lc3NhZ2VzKQogICAgICAgICAgICAgIC0tXQogICAgICAgICAgICApCgogICAgICAgIC0tIEEgY2xpZW50IGhhcyBkaXNjb25uZWN0ZWQsIGxldCBldmVyeW9uZSBrbm93CiAgICAgICAgQ2xpZW50RGlzY29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"left_delete",
					null,
					"AQAAAHQEAAAAAAAAdAQAAAAAAAAkAAAAICAgICAgICAgICAgICAtLXttb2RlbCB8IHBsYXllcnMgPX0K",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAQAAAAAAACYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"left_delete",
					null,
					"AQAAAOUDAAAAAAAA5QMAAAAAAABNAAAAICAgICAgICAtLSBBIG5ldyBjbGllbnQgaGFzIGpvaW5lZCEgU2VuZCB0aGVtIGhpc3RvcnksIGFuZCBsZXQgZXZlcnlvbmUga25vdwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QMAAAAAAAAyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAFAEAAAAAAAAUAQAAAAAAACOAAAALS1bIGJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChKb2luZWQgY2xpZW50SWQpKQogICAgICAgICAgICAgIC0tLCBzZW5kVG9Gcm9udGVuZCBjbGllbnRJZCAoSGlzdG9yeVJlY2VpdmVkIG1vZGVsLm1lc3NhZ2VzKQogICAgICAgICAgICAgIC0tXQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUAQAAAAAAADeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAANcEAAAAAAAA1wQAAAAAAAAFAAAAbW9kZWzXBAAAAAAAAN4EAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1wQAAAAAAADcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA3gQAAAAAAADfBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3QQAAAAAAADdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN8EAAAAAAAA4AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3wQAAAAAAADfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "pla"
					},
					"AwAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA4QQAAAAAAADiBAAAAAAAAAAAAADiBAAAAAAAAOMEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert_completion",
					{
						"completion": "players",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "players"
					},
					"AgAAAOAEAAAAAAAA4AQAAAAAAAADAAAAcGxh4AQAAAAAAADnBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4wQAAAAAAADjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOcEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADpBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5wQAAAAAAADnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " Dict.r"
					},
					"BwAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA6gQAAAAAAADrBAAAAAAAAAAAAADrBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADuBAAAAAAAAAAAAADuBAAAAAAAAO8EAAAAAAAAAAAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAPAEAAAAAAAA8QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AQAAAAAAADwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "move"
					},
					"BAAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA9QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8QQAAAAAAADxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPUEAAAAAAAA9gQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9QQAAAAAAAD1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "se"
					},
					"AgAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA9wQAAAAAAAD4BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gQAAAAAAAD2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert_completion",
					{
						"completion": "sessionId",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "sessionId"
					},
					"AgAAAPYEAAAAAAAA9gQAAAAAAAACAAAAc2X2BAAAAAAAAP8EAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " mode"
					},
					"BQAAAP8EAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAABBQAAAAAAAAAAAAABBQAAAAAAAAIFAAAAAAAAAAAAAAIFAAAAAAAAAwUAAAAAAAAAAAAAAwUAAAAAAAAEBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wQAAAAAAAD/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "l."
					},
					"AgAAAAQFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAGBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAUAAAAAAAAEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAYFAAAAAAAACAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgUAAAAAAAAGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": ";a"
					},
					"AgAAAAcFAAAAAAAACAUAAAAAAAAAAAAACAUAAAAAAAAJBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwUAAAAAAAAHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					2,
					"left_delete",
					null,
					"AgAAAAgFAAAAAAAACAUAAAAAAAABAAAAYQcFAAAAAAAABwUAAAAAAAABAAAAOw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQUAAAAAAAAJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAYFAAAAAAAABgUAAAAAAAABAAAAWwYFAAAAAAAABgUAAAAAAAABAAAAXQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwUAAAAAAAAHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "pla"
					},
					"AwAAAAYFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgUAAAAAAAAGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert_completion",
					{
						"completion": "players",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "players"
					},
					"AgAAAAYFAAAAAAAABgUAAAAAAAADAAAAcGxhBgUAAAAAAAANBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQUAAAAAAAAJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAAdA4AAAAAAACDDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIGdhbWVzUnVubmluZyBtIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAgIC0tLCBnZXRXb3JkcyAn6KqeJwogICAgICAtLSwgQ21kLm5vbmUKICAgICwgQ21kLmJhdGNoCiAgICAgICAgWyBUYXNrLnBlcmZvcm0gR290VGltZSBUaW1lLm5vdyBdCiAgICApCgoKdXBkYXRlIDogQmFja2VuZE1zZyAtPiBNb2RlbCAtPiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCnVwZGF0ZSBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBDbGllbnRDb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgLCBDbWQuYmF0Y2ggW10KICAgICAgICAgICAgICAKICAgICAgICAgICAgKQoKICAgICAgICAtLSBBIGNsaWVudCBoYXMgZGlzY29ubmVjdGVkLCBsZXQgZXZlcnlvbmUga25vdwogICAgICAgIENsaWVudERpc2Nvbm5lY3RlZCBzZXNzaW9uSWQgY2xpZW50SWQgLT4KICAgICAgICAgICAgKCB7bW9kZWwgfCBwbGF5ZXJzID0gRGljdC5yZW1vdmUgc2Vzc2lvbklkIG1vZGVsLnBsYXllcnN9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADQUAAAAAAAANBQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QEAAAAAAADlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "Dict.s"
					},
					"BgAAAOYBAAAAAAAA5wEAAAAAAAAAAAAA5wEAAAAAAADoAQAAAAAAAAAAAADoAQAAAAAAAOkBAAAAAAAAAAAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA6gEAAAAAAADrAQAAAAAAAAAAAADrAQAAAAAAAOwBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gEAAAAAAADmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "ic"
					},
					"AgAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADuAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAO0BAAAAAAAA7QEAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7gEAAAAAAADuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "xw"
					},
					"AgAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA7gEAAAAAAADvAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7QEAAAAAAADtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					2,
					"left_delete",
					null,
					"AgAAAO4BAAAAAAAA7gEAAAAAAAABAAAAd+0BAAAAAAAA7QEAAAAAAAABAAAAeA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wEAAAAAAADvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "ze"
					},
					"AgAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA7gEAAAAAAADvAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7QEAAAAAAADtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " model.k"
					},
					"CAAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA8AEAAAAAAADxAQAAAAAAAAAAAADxAQAAAAAAAPIBAAAAAAAAAAAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD0AQAAAAAAAAAAAAD0AQAAAAAAAPUBAAAAAAAAAAAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA9gEAAAAAAAD3AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wEAAAAAAADvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAAPYBAAAAAAAA9gEAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wEAAAAAAAD3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "jdd"
					},
					"AwAAAPYBAAAAAAAA9wEAAAAAAAAAAAAA9wEAAAAAAAD4AQAAAAAAAAAAAAD4AQAAAAAAAPkBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gEAAAAAAAD2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					3,
					"left_delete",
					null,
					"AwAAAPgBAAAAAAAA+AEAAAAAAAABAAAAZPcBAAAAAAAA9wEAAAAAAAABAAAAZPYBAAAAAAAA9gEAAAAAAAABAAAAag",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+QEAAAAAAAD5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "kf"
					},
					"AgAAAPYBAAAAAAAA9wEAAAAAAAAAAAAA9wEAAAAAAAD4AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gEAAAAAAAD2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAAPcBAAAAAAAA9wEAAAAAAAABAAAAZg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+AEAAAAAAAD4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "gg"
					},
					"AgAAAPcBAAAAAAAA+AEAAAAAAAAAAAAA+AEAAAAAAAD5AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wEAAAAAAAD3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert_completion",
					{
						"completion": "kggames",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "kggames"
					},
					"AgAAAPYBAAAAAAAA9gEAAAAAAAADAAAAa2dn9gEAAAAAAAD9AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+QEAAAAAAAD5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA/gEAAAAAAAD/AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QEAAAAAAAD9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAP8BAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAABAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wEAAAAAAAD/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " then"
					},
					"BQAAAAECAAAAAAAAAgIAAAAAAAAAAAAAAgIAAAAAAAADAgAAAAAAAAAAAAADAgAAAAAAAAQCAAAAAAAAAAAAAAQCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAGAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQIAAAAAAAABAgAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYCAAAAAAAABwIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgIAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABgCAAAAAAAAGgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAG8CAAAAAAAAcQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwIAAAAAAABzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					4,
					"left_delete",
					null,
					"BAAAAPQBAAAAAAAA9AEAAAAAAAABAAAAbPMBAAAAAAAA8wEAAAAAAAABAAAAZfIBAAAAAAAA8gEAAAAAAAABAAAAZPEBAAAAAAAA8QEAAAAAAAABAAAAbw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA5gEAAAAAAADnAQAAAAAAAAAAAADnAQAAAAAAAOgBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QEAAAAAAADlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAG4CAAAAAAAAbgIAAAAAAAACAAAALS0",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAIAAAAAAAB0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAAqg4AAAAAAACZDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4gaWYgRGljdC5zaXplIG0ua2dnYW1lcyA+IDAgdGhlbiAKICAgICAgICAgICAgICAgIC0taWYgZ2FtZXNSdW5uaW5nIG0gdGhlbgogICAgICAgICAgICAgICAgICAgIFRpbWUuZXZlcnkgMTAwMCBSdW5HYW1lcwoKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICBTdWIubm9uZQogICAgICAgIH0KCgppbml0IDogKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQppbml0ID0KICAgICggeyBtZXNzYWdlID0gIiIKICAgICAgLCBrZ2dhbWVzID0gRGljdC5lbXB0eQogICAgICAsIHBsYXllcnMgPSBEaWN0LmVtcHR5CiAgICAgICwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAwCiAgICAgIH0KICAgICAgLS0sIGdldFdvcmRzICfoqp4nCiAgICAgIC0tLCBDbWQubm9uZQogICAgLCBDbWQuYmF0Y2gKICAgICAgICBbIFRhc2sucGVyZm9ybSBHb3RUaW1lIFRpbWUubm93IF0KICAgICkKCgp1cGRhdGUgOiBCYWNrZW5kTXNnIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIENsaWVudENvbm5lY3RlZCBzZXNzaW9uSWQgY2xpZW50SWQgLT4KICAgICAgICAgICAgKCBtb2RlbAogICAgICAgICAgICAsIENtZC5iYXRjaCBbXQogICAgICAgICAgICApCgogICAgICAgIC0tIEEgY2xpZW50IGhhcyBkaXNjb25uZWN0ZWQsIGxldCBldmVyeW9uZSBrbm93CiAgICAgICAgQ2xpZW50RGlzY29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIHsgbW9kZWwgfCBwbGF5ZXJzID0gRGljdC5yZW1vdmUgc2Vzc2lvbklkIG1vZGVsLnBsYXllcnMgfQogICAgICAgICAgICAsIENtZC5ub25lCiAgICAgICAgICAgICkKCiAgICAgICAgLS1icm9hZGNhc3QgKE1lc3NhZ2VSZWNlaXZlZCAoTGVmdCBjbGllbnRJZCkpICkKICAgICAgICBHb3RKTWRpY3RTZWFyY2hSZXN1bHRzIGdhbWVJZCBrYW5qaSByZXMgLT4KICAgICAgICAgICAgZ290Sk1kaWN0U2VhcmNoUmVzdWx0cyBtb2RlbCBnYW1lSWQga2FuamkgcmVzCgogICAgICAgIEdldEtleXMgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLmJhdGNoIFsgZ2V0S2FuamlLZXlzIF0gKQoKICAgICAgICBHb3RLZXlzIHJlcyAtPgogICAgICAgICAgICBjYXNlIHJlcyBvZgogICAgICAgICAgICAgICAgT2sgcyAtPgogICAgICAgICAgICAgICAgICAgICggeyBtb2RlbCB8IG1lc3NhZ2UgPSBzIH0KICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIHMpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICAgICAgICAgIEVyciBlIC0+CiAgICAgICAgICAgICAgICAgICAgKCBtb2RlbAogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgKGh0dHBFcnJvclRvU3RyaW5nIGUpKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgR290VGltZSBwb3NpeCAtPgogICAgICAgICAgICAoIHsgbW9kZWwgfCBzZWVkID0gUmFuZG9tLmluaXRpYWxTZWVkIChUaW1lLnBvc2l4VG9NaWxsaXMgcG9zaXgpIH0sIENtZC5ub25lICkKCiAgICAgICAgUnVuR2FtZXMgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWVzIG1vZGVsIG5vdwoKICAgICAgICBOb09wQmFja2VuZE1zZyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKdXBkYXRlRnJvbUZyb250ZW5kIDogU2Vzc2lvbklkIC0+IENsaWVudElkIC0+IFRvQmFja2VuZCAtPiBNb2RlbCAtPiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCnVwZGF0ZUZyb21Gcm9udGVuZCBzZXNzaW9uSWQgY2xpZW50SWQgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgR2V0S2V5c1RCIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCiAgICAgICAgQ3JlYXRlR2FtZVRCIGhvc3QgY29uZmlnIG5vdyAtPgogICAgICAgICAgICBjcmVhdGVHYW1lIG1vZGVsIG5vdyBob3N0IGNvbmZpZwoKICAgICAgICBKb2luVEIgcGxheWVyIGdhbWVJZCAtPgogICAgICAgICAgICBqb2luR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIExlYXZlVEIgcGxheWVyIGdhbWVJZCAtPgogICAgICAgICAgICBsZWF2ZUdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBVcGRhdGVDb25maWdUQiBnYW1lSWQgY29uZmlnIC0+CiAgICAgICAgICAgIHVwZGF0ZUNvbmZpZyBtb2RlbCBnYW1lSWQgY29uZmlnCgogICAgICAgIExvYWRJbml0aWFsRGF0YVRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFN0YXJ0VEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgUmVxdWVzdE5leHRLYW5qaVRCIGdhbWVJZCBwbGF5ZXIgLT4KICAgICAgICAgICAgcmVxdWVzdE5leHRLYW5qaSBtb2RlbCBnYW1lSWQgcGxheWVyCgogICAgICAgIEFkZFdvcmRUQiBnYW1lSWQgcGxheWVyIHdvcmQgLT4KICAgICAgICAgICAgYWRkV29yZCBtb2RlbCBnYW1lSWQgcGxheWVyIHdvcmQKCiAgICAgICAgUGxheWVySW5mb1N1Ym1pdHRlZFRCIHVzZXJuYW1lIHBocFNlc3Npb25JZCAtPgogICAgICAgICAgICAoIHsgbW9kZWwKICAgICAgICAgICAgICAgIHwgcGxheWVycyA9CiAgICAgICAgICAgICAgICAgICAgRGljdC5pbnNlcnQgc2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIHsgcGxheWVyID0geyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICAgICAgICAgICAgICAsIHBocFNlc3Npb25JZCA9IHBocFNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsLnBsYXllcnMKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICwgTGFtZGVyYS5zZW5kVG9Gcm9udGVuZCBjbGllbnRJZCA8fCBQbGF5ZXJJbmZvUmVnaXN0ZXJlZFRGIHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgKQoKICAgICAgICBSZXF1ZXN0SW5pdGlhbEdhbWVzQnJvYWRDYXN0VEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgaW5pdGlhbEdhbWVzQnJvYWRjYXN0IG1vZGVsIGNsaWVudElkICkKCiAgICAgICAgTm9PcFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcgIAAAAAAAByAgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"left_delete",
					null,
					"AQAAABYCAAAAAAAAFgIAAAAAAAAtAAAAICAgICAgICAgICAgICAgICAgICAtLWlmIGdhbWVzUnVubmluZyBtIHRoZW4K",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgIAAAAAAABDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAACsDAAAAAAAAKwMAAAAAAAAlAAAALS0sIGdldFdvcmRzICfoqp4nCiAgICAgIC0tLCBDbWQubm9uZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKwMAAAAAAABOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAAUw4AAAAAAABaDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAgIAogICAgLCBDbWQuYmF0Y2gKICAgICAgICBbIFRhc2sucGVyZm9ybSBHb3RUaW1lIFRpbWUubm93IF0KICAgICkKCgp1cGRhdGUgOiBCYWNrZW5kTXNnIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIENsaWVudENvbm5lY3RlZCBzZXNzaW9uSWQgY2xpZW50SWQgLT4KICAgICAgICAgICAgKCBtb2RlbAogICAgICAgICAgICAsIENtZC5iYXRjaCBbXQogICAgICAgICAgICApCgogICAgICAgIC0tIEEgY2xpZW50IGhhcyBkaXNjb25uZWN0ZWQsIGxldCBldmVyeW9uZSBrbm93CiAgICAgICAgQ2xpZW50RGlzY29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIHsgbW9kZWwgfCBwbGF5ZXJzID0gRGljdC5yZW1vdmUgc2Vzc2lvbklkIG1vZGVsLnBsYXllcnMgfQogICAgICAgICAgICAsIENtZC5ub25lCiAgICAgICAgICAgICkKCiAgICAgICAgLS1icm9hZGNhc3QgKE1lc3NhZ2VSZWNlaXZlZCAoTGVmdCBjbGllbnRJZCkpICkKICAgICAgICBHb3RKTWRpY3RTZWFyY2hSZXN1bHRzIGdhbWVJZCBrYW5qaSByZXMgLT4KICAgICAgICAgICAgZ290Sk1kaWN0U2VhcmNoUmVzdWx0cyBtb2RlbCBnYW1lSWQga2FuamkgcmVzCgogICAgICAgIEdldEtleXMgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLmJhdGNoIFsgZ2V0S2FuamlLZXlzIF0gKQoKICAgICAgICBHb3RLZXlzIHJlcyAtPgogICAgICAgICAgICBjYXNlIHJlcyBvZgogICAgICAgICAgICAgICAgT2sgcyAtPgogICAgICAgICAgICAgICAgICAgICggeyBtb2RlbCB8IG1lc3NhZ2UgPSBzIH0KICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIHMpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICAgICAgICAgIEVyciBlIC0+CiAgICAgICAgICAgICAgICAgICAgKCBtb2RlbAogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgKGh0dHBFcnJvclRvU3RyaW5nIGUpKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgR290VGltZSBwb3NpeCAtPgogICAgICAgICAgICAoIHsgbW9kZWwgfCBzZWVkID0gUmFuZG9tLmluaXRpYWxTZWVkIChUaW1lLnBvc2l4VG9NaWxsaXMgcG9zaXgpIH0sIENtZC5ub25lICkKCiAgICAgICAgUnVuR2FtZXMgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWVzIG1vZGVsIG5vdwoKICAgICAgICBOb09wQmFja2VuZE1zZyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKdXBkYXRlRnJvbUZyb250ZW5kIDogU2Vzc2lvbklkIC0+IENsaWVudElkIC0+IFRvQmFja2VuZCAtPiBNb2RlbCAtPiAoIE1vZGVsLCBDbWQgQmFja2VuZE1zZyApCnVwZGF0ZUZyb21Gcm9udGVuZCBzZXNzaW9uSWQgY2xpZW50SWQgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgR2V0S2V5c1RCIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCiAgICAgICAgQ3JlYXRlR2FtZVRCIGhvc3QgY29uZmlnIG5vdyAtPgogICAgICAgICAgICBjcmVhdGVHYW1lIG1vZGVsIG5vdyBob3N0IGNvbmZpZwoKICAgICAgICBKb2luVEIgcGxheWVyIGdhbWVJZCAtPgogICAgICAgICAgICBqb2luR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIExlYXZlVEIgcGxheWVyIGdhbWVJZCAtPgogICAgICAgICAgICBsZWF2ZUdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBVcGRhdGVDb25maWdUQiBnYW1lSWQgY29uZmlnIC0+CiAgICAgICAgICAgIHVwZGF0ZUNvbmZpZyBtb2RlbCBnYW1lSWQgY29uZmlnCgogICAgICAgIExvYWRJbml0aWFsRGF0YVRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFN0YXJ0VEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgUmVxdWVzdE5leHRLYW5qaVRCIGdhbWVJZCBwbGF5ZXIgLT4KICAgICAgICAgICAgcmVxdWVzdE5leHRLYW5qaSBtb2RlbCBnYW1lSWQgcGxheWVyCgogICAgICAgIEFkZFdvcmRUQiBnYW1lSWQgcGxheWVyIHdvcmQgLT4KICAgICAgICAgICAgYWRkV29yZCBtb2RlbCBnYW1lSWQgcGxheWVyIHdvcmQKCiAgICAgICAgUGxheWVySW5mb1N1Ym1pdHRlZFRCIHVzZXJuYW1lIHBocFNlc3Npb25JZCAtPgogICAgICAgICAgICAoIHsgbW9kZWwKICAgICAgICAgICAgICAgIHwgcGxheWVycyA9CiAgICAgICAgICAgICAgICAgICAgRGljdC5pbnNlcnQgc2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIHsgcGxheWVyID0geyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICAgICAgICAgICAgICAsIHBocFNlc3Npb25JZCA9IHBocFNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsLnBsYXllcnMKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICwgTGFtZGVyYS5zZW5kVG9Gcm9udGVuZCBjbGllbnRJZCA8fCBQbGF5ZXJJbmZvUmVnaXN0ZXJlZFRGIHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgKQoKICAgICAgICBSZXF1ZXN0SW5pdGlhbEdhbWVzQnJvYWRDYXN0VEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgaW5pdGlhbEdhbWVzQnJvYWRjYXN0IG1vZGVsIGNsaWVudElkICkKCiAgICAgICAgTm9PcFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKwMAAAAAAAArAwAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgAAAAAAAAAAUw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgAAAAAAAAAAUw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgAAAAAAAAAAUw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgAAAAAAAAAAUw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgAAAAAAAAAAUw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gcAAAAAAADmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABTDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgAAAAAAAAAAUw4AAAAAAAAAAAAAAAAAAAAAAABTDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gcAAAAAAADmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAKsFAAAAAAAArAUAAAAAAAAAAAAArAUAAAAAAAC4BQAAAAAAAAAAAAC4BQAAAAAAALkFAAAAAAAAAAAAALkFAAAAAAAAxQUAAAAAAAAAAAAArAUAAAAAAACsBQAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsFAAAAAAAAqwUAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAALUFAAAAAAAAtQUAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkFAAAAAAAAuQUAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAALUFAAAAAAAA3QUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUFAAAAAAAAtQUAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"paste",
					null,
					"AQAAALUFAAAAAAAAxwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUFAAAAAAAAtQUAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcFAAAAAAAAyAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcFAAAAAAAAxwUAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAMgFAAAAAAAAyAUAAAAAAAAoAAAAKFJlc3VsdCBIdHRwLkVycm9yIChMaXN0IEthbmppZGljRW50cnkpKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgFAAAAAAAA8AUAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "res"
					},
					"AwAAAMgFAAAAAAAAyQUAAAAAAAAAAAAAyQUAAAAAAADKBQAAAAAAAAAAAADKBQAAAAAAAMsFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgFAAAAAAAAyAUAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAMsFAAAAAAAAzAUAAAAAAAAAAAAAzAUAAAAAAADNBQAAAAAAAAAAAADNBQAAAAAAAM4FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsFAAAAAAAAywUAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAM4FAAAAAAAAzwUAAAAAAAAAAAAAzwUAAAAAAADXBQAAAAAAAAAAAADXBQAAAAAAANsFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4FAAAAAAAAzgUAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANsFAAAAAAAA3QUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsFAAAAAAAA2wUAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "model,"
					},
					"BgAAANwFAAAAAAAA3QUAAAAAAAAAAAAA3QUAAAAAAADeBQAAAAAAAAAAAADeBQAAAAAAAN8FAAAAAAAAAAAAAN8FAAAAAAAA4AUAAAAAAAAAAAAA4AUAAAAAAADhBQAAAAAAAAAAAADhBQAAAAAAAOIFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwFAAAAAAAA3AUAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " Cmd.none"
					},
					"CQAAAOIFAAAAAAAA4wUAAAAAAAAAAAAA4wUAAAAAAADkBQAAAAAAAAAAAADkBQAAAAAAAOUFAAAAAAAAAAAAAOUFAAAAAAAA5gUAAAAAAAAAAAAA5gUAAAAAAADnBQAAAAAAAAAAAADnBQAAAAAAAOgFAAAAAAAAAAAAAOgFAAAAAAAA6QUAAAAAAAAAAAAA6QUAAAAAAADqBQAAAAAAAAAAAADqBQAAAAAAAOsFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIFAAAAAAAA4gUAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAAlg4AAAAAAACUDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR290S2FuamlkaWNFbnRyaWVzIHJlcyAtPgogICAgICAgICAgICAobW9kZWwsIENtZC5ub25lKQoKICAgICAgICBHZXRLZXlzIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5iYXRjaCBbIGdldEthbmppS2V5cyBdICkKCiAgICAgICAgR290S2V5cyByZXMgLT4KICAgICAgICAgICAgY2FzZSByZXMgb2YKICAgICAgICAgICAgICAgIE9rIHMgLT4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBtZXNzYWdlID0gcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiBzKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBFcnIgZSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIChodHRwRXJyb3JUb1N0cmluZyBlKSkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgIEdvdFRpbWUgcG9zaXggLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAoVGltZS5wb3NpeFRvTWlsbGlzIHBvc2l4KSB9LCBDbWQubm9uZSApCgogICAgICAgIFJ1bkdhbWVzIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lcyBtb2RlbCBub3cKCiAgICAgICAgTm9PcEJhY2tlbmRNc2cgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCnVwZGF0ZUZyb21Gcm9udGVuZCA6IFNlc3Npb25JZCAtPiBDbGllbnRJZCAtPiBUb0JhY2tlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGVGcm9tRnJvbnRlbmQgc2Vzc2lvbklkIGNsaWVudElkIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIEdldEtleXNUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIENyZWF0ZUdhbWVUQiBob3N0IGNvbmZpZyBub3cgLT4KICAgICAgICAgICAgY3JlYXRlR2FtZSBtb2RlbCBub3cgaG9zdCBjb25maWcKCiAgICAgICAgSm9pblRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgam9pbkdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBMZWF2ZVRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgVXBkYXRlQ29uZmlnVEIgZ2FtZUlkIGNvbmZpZyAtPgogICAgICAgICAgICB1cGRhdGVDb25maWcgbW9kZWwgZ2FtZUlkIGNvbmZpZwoKICAgICAgICBMb2FkSW5pdGlhbERhdGFUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBTdGFydFRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFJlcXVlc3ROZXh0S2FuamlUQiBnYW1lSWQgcGxheWVyIC0+CiAgICAgICAgICAgIHJlcXVlc3ROZXh0S2FuamkgbW9kZWwgZ2FtZUlkIHBsYXllcgoKICAgICAgICBBZGRXb3JkVEIgZ2FtZUlkIHBsYXllciB3b3JkIC0+CiAgICAgICAgICAgIGFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkCgogICAgICAgIFBsYXllckluZm9TdWJtaXR0ZWRUQiB1c2VybmFtZSBwaHBTZXNzaW9uSWQgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgIERpY3QuaW5zZXJ0IHNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB7IHBsYXllciA9IHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgICAgICAgICAgICAgLCBwaHBTZXNzaW9uSWQgPSBwaHBTZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5wbGF5ZXJzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIExhbWRlcmEuc2VuZFRvRnJvbnRlbmQgY2xpZW50SWQgPHwgUGxheWVySW5mb1JlZ2lzdGVyZWRURiB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICkKCiAgICAgICAgUmVxdWVzdEluaXRpYWxHYW1lc0Jyb2FkQ2FzdFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIGluaXRpYWxHYW1lc0Jyb2FkY2FzdCBtb2RlbCBjbGllbnRJZCApCgogICAgICAgIE5vT3BUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsFAAAAAAAA6wUAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "gameId"
					},
					"BgAAAMgFAAAAAAAAyQUAAAAAAAAAAAAAyQUAAAAAAADKBQAAAAAAAAAAAADKBQAAAAAAAMsFAAAAAAAAAAAAAMsFAAAAAAAAzAUAAAAAAAAAAAAAzAUAAAAAAADNBQAAAAAAAAAAAADNBQAAAAAAAM4FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgFAAAAAAAAyAUAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM4FAAAAAAAAzwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4FAAAAAAAAzgUAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAAnQ4AAAAAAACdDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR290S2FuamlkaWNFbnRyaWVzIGdhbWVJZCByZXMgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBHZXRLZXlzIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5iYXRjaCBbIGdldEthbmppS2V5cyBdICkKCiAgICAgICAgR290S2V5cyByZXMgLT4KICAgICAgICAgICAgY2FzZSByZXMgb2YKICAgICAgICAgICAgICAgIE9rIHMgLT4KICAgICAgICAgICAgICAgICAgICAoIHsgbW9kZWwgfCBtZXNzYWdlID0gcyB9CiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiBzKQogICAgICAgICAgICAgICAgICAgICkKCiAgICAgICAgICAgICAgICBFcnIgZSAtPgogICAgICAgICAgICAgICAgICAgICggbW9kZWwKICAgICAgICAgICAgICAgICAgICAsIGJyb2FkY2FzdCAoVG9Gcm9udGVuZE1zZ1RGIChodHRwRXJyb3JUb1N0cmluZyBlKSkKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgIEdvdFRpbWUgcG9zaXggLT4KICAgICAgICAgICAgKCB7IG1vZGVsIHwgc2VlZCA9IFJhbmRvbS5pbml0aWFsU2VlZCAoVGltZS5wb3NpeFRvTWlsbGlzIHBvc2l4KSB9LCBDbWQubm9uZSApCgogICAgICAgIFJ1bkdhbWVzIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lcyBtb2RlbCBub3cKCiAgICAgICAgTm9PcEJhY2tlbmRNc2cgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCnVwZGF0ZUZyb21Gcm9udGVuZCA6IFNlc3Npb25JZCAtPiBDbGllbnRJZCAtPiBUb0JhY2tlbmQgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGVGcm9tRnJvbnRlbmQgc2Vzc2lvbklkIGNsaWVudElkIG1zZyBtb2RlbCA9CiAgICBjYXNlIG1zZyBvZgogICAgICAgIEdldEtleXNUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgogICAgICAgIENyZWF0ZUdhbWVUQiBob3N0IGNvbmZpZyBub3cgLT4KICAgICAgICAgICAgY3JlYXRlR2FtZSBtb2RlbCBub3cgaG9zdCBjb25maWcKCiAgICAgICAgSm9pblRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgam9pbkdhbWUgbW9kZWwgcGxheWVyIGdhbWVJZAoKICAgICAgICBMZWF2ZVRCIHBsYXllciBnYW1lSWQgLT4KICAgICAgICAgICAgbGVhdmVHYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgVXBkYXRlQ29uZmlnVEIgZ2FtZUlkIGNvbmZpZyAtPgogICAgICAgICAgICB1cGRhdGVDb25maWcgbW9kZWwgZ2FtZUlkIGNvbmZpZwoKICAgICAgICBMb2FkSW5pdGlhbERhdGFUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBTdGFydFRCIGdhbWVJZCBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZSBtb2RlbCBub3cgZ2FtZUlkCgogICAgICAgIFJlcXVlc3ROZXh0S2FuamlUQiBnYW1lSWQgcGxheWVyIC0+CiAgICAgICAgICAgIHJlcXVlc3ROZXh0S2FuamkgbW9kZWwgZ2FtZUlkIHBsYXllcgoKICAgICAgICBBZGRXb3JkVEIgZ2FtZUlkIHBsYXllciB3b3JkIC0+CiAgICAgICAgICAgIGFkZFdvcmQgbW9kZWwgZ2FtZUlkIHBsYXllciB3b3JkCgogICAgICAgIFBsYXllckluZm9TdWJtaXR0ZWRUQiB1c2VybmFtZSBwaHBTZXNzaW9uSWQgLT4KICAgICAgICAgICAgKCB7IG1vZGVsCiAgICAgICAgICAgICAgICB8IHBsYXllcnMgPQogICAgICAgICAgICAgICAgICAgIERpY3QuaW5zZXJ0IHNlc3Npb25JZAogICAgICAgICAgICAgICAgICAgICAgICB7IHBsYXllciA9IHsgbmFtZSA9IHVzZXJuYW1lLCBpZCA9IGNsaWVudElkIH0KICAgICAgICAgICAgICAgICAgICAgICAgLCBwaHBTZXNzaW9uSWQgPSBwaHBTZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5wbGF5ZXJzCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAsIExhbWRlcmEuc2VuZFRvRnJvbnRlbmQgY2xpZW50SWQgPHwgUGxheWVySW5mb1JlZ2lzdGVyZWRURiB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICkKCiAgICAgICAgUmVxdWVzdEluaXRpYWxHYW1lc0Jyb2FkQ2FzdFRCIC0+CiAgICAgICAgICAgICggbW9kZWwsIGluaXRpYWxHYW1lc0Jyb2FkY2FzdCBtb2RlbCBjbGllbnRJZCApCgogICAgICAgIE5vT3BUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQubm9uZSApCgoKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8FAAAAAAAAzwUAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"paste",
					null,
					"AgAAAOIFAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAFBgAAAAAAABMAAAAoIG1vZGVsLCBDbWQubm9uZSAp",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIFAAAAAAAA9QUAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"elm_format",
					null,
					"AQAAAAAAAAAAAAAArQ4AAAAAAACtDgAAbW9kdWxlIEJhY2tlbmQgZXhwb3NpbmcgKC4uKQoKaW1wb3J0IEFwaUNhbGxzIGV4cG9zaW5nICguLikKaW1wb3J0IERlbGF5CmltcG9ydCBEaWN0CmltcG9ydCBHYW1lIGV4cG9zaW5nICguLikKaW1wb3J0IEhlbHBlcnMgZXhwb3NpbmcgKC4uKQppbXBvcnQgTGFtZGVyYSBleHBvc2luZyAoQ2xpZW50SWQsIFNlc3Npb25JZCwgYnJvYWRjYXN0LCBzZW5kVG9Gcm9udGVuZCkKaW1wb3J0IFJhbmRvbQppbXBvcnQgVGFzawppbXBvcnQgVGltZQppbXBvcnQgVHlwZXMgZXhwb3NpbmcgKC4uKQoKCnR5cGUgYWxpYXMgTW9kZWwgPQogICAgQmFja2VuZE1vZGVsCgoKYXBwID0KICAgIExhbWRlcmEuYmFja2VuZAogICAgICAgIHsgaW5pdCA9IGluaXQKICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZQogICAgICAgICwgdXBkYXRlRnJvbUZyb250ZW5kID0gdXBkYXRlRnJvbUZyb250ZW5kCiAgICAgICAgLCBzdWJzY3JpcHRpb25zID0KICAgICAgICAgICAgXG0gLT4KICAgICAgICAgICAgICAgIGlmIERpY3Quc2l6ZSBtLmtnZ2FtZXMgPiAwIHRoZW4KICAgICAgICAgICAgICAgICAgICBUaW1lLmV2ZXJ5IDEwMDAgUnVuR2FtZXMKCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgU3ViLm5vbmUKICAgICAgICB9CgoKaW5pdCA6ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKaW5pdCA9CiAgICAoIHsgbWVzc2FnZSA9ICIiCiAgICAgICwga2dnYW1lcyA9IERpY3QuZW1wdHkKICAgICAgLCBwbGF5ZXJzID0gRGljdC5lbXB0eQogICAgICAsIHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgMAogICAgICB9CiAgICAsIENtZC5iYXRjaAogICAgICAgIFsgVGFzay5wZXJmb3JtIEdvdFRpbWUgVGltZS5ub3cgXQogICAgKQoKCnVwZGF0ZSA6IEJhY2tlbmRNc2cgLT4gTW9kZWwgLT4gKCBNb2RlbCwgQ21kIEJhY2tlbmRNc2cgKQp1cGRhdGUgbXNnIG1vZGVsID0KICAgIGNhc2UgbXNnIG9mCiAgICAgICAgQ2xpZW50Q29ubmVjdGVkIHNlc3Npb25JZCBjbGllbnRJZCAtPgogICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICwgQ21kLmJhdGNoIFtdCiAgICAgICAgICAgICkKCiAgICAgICAgLS0gQSBjbGllbnQgaGFzIGRpc2Nvbm5lY3RlZCwgbGV0IGV2ZXJ5b25lIGtub3cKICAgICAgICBDbGllbnREaXNjb25uZWN0ZWQgc2Vzc2lvbklkIGNsaWVudElkIC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHBsYXllcnMgPSBEaWN0LnJlbW92ZSBzZXNzaW9uSWQgbW9kZWwucGxheWVycyB9CiAgICAgICAgICAgICwgQ21kLm5vbmUKICAgICAgICAgICAgKQoKICAgICAgICAtLWJyb2FkY2FzdCAoTWVzc2FnZVJlY2VpdmVkIChMZWZ0IGNsaWVudElkKSkgKQogICAgICAgIEdvdEpNZGljdFNlYXJjaFJlc3VsdHMgZ2FtZUlkIGthbmppIHJlcyAtPgogICAgICAgICAgICBnb3RKTWRpY3RTZWFyY2hSZXN1bHRzIG1vZGVsIGdhbWVJZCBrYW5qaSByZXMKCiAgICAgICAgR290S2FuamlkaWNFbnRyaWVzIGdhbWVJZCByZXMgLT4KICAgICAgICAgICAgZ290S2FuamlkaWNFbnRyaWVzIG1vZGVsIGdhbWVJZCByZXMKCiAgICAgICAgR2V0S2V5cyAtPgogICAgICAgICAgICAoIG1vZGVsLCBDbWQuYmF0Y2ggWyBnZXRLYW5qaUtleXMgXSApCgogICAgICAgIEdvdEtleXMgcmVzIC0+CiAgICAgICAgICAgIGNhc2UgcmVzIG9mCiAgICAgICAgICAgICAgICBPayBzIC0+CiAgICAgICAgICAgICAgICAgICAgKCB7IG1vZGVsIHwgbWVzc2FnZSA9IHMgfQogICAgICAgICAgICAgICAgICAgICwgYnJvYWRjYXN0IChUb0Zyb250ZW5kTXNnVEYgcykKICAgICAgICAgICAgICAgICAgICApCgogICAgICAgICAgICAgICAgRXJyIGUgLT4KICAgICAgICAgICAgICAgICAgICAoIG1vZGVsCiAgICAgICAgICAgICAgICAgICAgLCBicm9hZGNhc3QgKFRvRnJvbnRlbmRNc2dURiAoaHR0cEVycm9yVG9TdHJpbmcgZSkpCiAgICAgICAgICAgICAgICAgICAgKQoKICAgICAgICBHb3RUaW1lIHBvc2l4IC0+CiAgICAgICAgICAgICggeyBtb2RlbCB8IHNlZWQgPSBSYW5kb20uaW5pdGlhbFNlZWQgKFRpbWUucG9zaXhUb01pbGxpcyBwb3NpeCkgfSwgQ21kLm5vbmUgKQoKICAgICAgICBSdW5HYW1lcyBub3cgLT4KICAgICAgICAgICAgcnVuR2FtZXMgbW9kZWwgbm93CgogICAgICAgIE5vT3BCYWNrZW5kTXNnIC0+CiAgICAgICAgICAgICggbW9kZWwsIENtZC5ub25lICkKCgp1cGRhdGVGcm9tRnJvbnRlbmQgOiBTZXNzaW9uSWQgLT4gQ2xpZW50SWQgLT4gVG9CYWNrZW5kIC0+IE1vZGVsIC0+ICggTW9kZWwsIENtZCBCYWNrZW5kTXNnICkKdXBkYXRlRnJvbUZyb250ZW5kIHNlc3Npb25JZCBjbGllbnRJZCBtc2cgbW9kZWwgPQogICAgY2FzZSBtc2cgb2YKICAgICAgICBHZXRLZXlzVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKICAgICAgICBDcmVhdGVHYW1lVEIgaG9zdCBjb25maWcgbm93IC0+CiAgICAgICAgICAgIGNyZWF0ZUdhbWUgbW9kZWwgbm93IGhvc3QgY29uZmlnCgogICAgICAgIEpvaW5UQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGpvaW5HYW1lIG1vZGVsIHBsYXllciBnYW1lSWQKCiAgICAgICAgTGVhdmVUQiBwbGF5ZXIgZ2FtZUlkIC0+CiAgICAgICAgICAgIGxlYXZlR2FtZSBtb2RlbCBwbGF5ZXIgZ2FtZUlkCgogICAgICAgIFVwZGF0ZUNvbmZpZ1RCIGdhbWVJZCBjb25maWcgLT4KICAgICAgICAgICAgdXBkYXRlQ29uZmlnIG1vZGVsIGdhbWVJZCBjb25maWcKCiAgICAgICAgTG9hZEluaXRpYWxEYXRhVEIgZ2FtZUlkIG5vdyAtPgogICAgICAgICAgICBydW5HYW1lIG1vZGVsIG5vdyBnYW1lSWQKCiAgICAgICAgU3RhcnRUQiBnYW1lSWQgbm93IC0+CiAgICAgICAgICAgIHJ1bkdhbWUgbW9kZWwgbm93IGdhbWVJZAoKICAgICAgICBSZXF1ZXN0TmV4dEthbmppVEIgZ2FtZUlkIHBsYXllciAtPgogICAgICAgICAgICByZXF1ZXN0TmV4dEthbmppIG1vZGVsIGdhbWVJZCBwbGF5ZXIKCiAgICAgICAgQWRkV29yZFRCIGdhbWVJZCBwbGF5ZXIgd29yZCAtPgogICAgICAgICAgICBhZGRXb3JkIG1vZGVsIGdhbWVJZCBwbGF5ZXIgd29yZAoKICAgICAgICBQbGF5ZXJJbmZvU3VibWl0dGVkVEIgdXNlcm5hbWUgcGhwU2Vzc2lvbklkIC0+CiAgICAgICAgICAgICggeyBtb2RlbAogICAgICAgICAgICAgICAgfCBwbGF5ZXJzID0KICAgICAgICAgICAgICAgICAgICBEaWN0Lmluc2VydCBzZXNzaW9uSWQKICAgICAgICAgICAgICAgICAgICAgICAgeyBwbGF5ZXIgPSB7IG5hbWUgPSB1c2VybmFtZSwgaWQgPSBjbGllbnRJZCB9CiAgICAgICAgICAgICAgICAgICAgICAgICwgcGhwU2Vzc2lvbklkID0gcGhwU2Vzc2lvbklkCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwucGxheWVycwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgLCBMYW1kZXJhLnNlbmRUb0Zyb250ZW5kIGNsaWVudElkIDx8IFBsYXllckluZm9SZWdpc3RlcmVkVEYgeyBuYW1lID0gdXNlcm5hbWUsIGlkID0gY2xpZW50SWQgfQogICAgICAgICAgICApCgogICAgICAgIFJlcXVlc3RJbml0aWFsR2FtZXNCcm9hZENhc3RUQiAtPgogICAgICAgICAgICAoIG1vZGVsLCBpbml0aWFsR2FtZXNCcm9hZGNhc3QgbW9kZWwgY2xpZW50SWQgKQoKICAgICAgICBOb09wVEIgLT4KICAgICAgICAgICAgKCBtb2RlbCwgQ21kLm5vbmUgKQoKCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUGAAAAAAAABQYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "elm-pkg-js-includes.js",
			"settings":
			{
				"buffer_size": 564,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAAiAIAAAAAAAB+AgAALy8gQE5PVEUgdGhpcyBmaWxlIHdpbGwgaG9wZWZ1bGx5IGJlIGF1dG8tZ2VuZXJhdGVkIGJ5IGVsbS1wa2ctanMgaW4gZnV0dXJlIQovLyBGb3Igbm93LCBpdHMgcHJlc2Vuc2Ugd2lsbCBtZWFuIExhbWRlcmEgZGV0ZWN0cyB0aGUgZXh0cmEgSlMgYW5kIHBhY2thZ2VzCi8vIEluIGZ1dHVyZSB0aGlzIHdpbGwgYmUgbW9yZSBzdHJ1Y3R1cmVkICsgcmVzdHJpY3RlZCBvbmNlIHRoZSBkZXNpZ24gaXMgZG9uZQpjb25zdCBnZW9Mb2MgPSByZXF1aXJlKCcuL2VsbS1wa2ctanMvZ2VvbG9jLmpzJykKY29uc3QgaW1nUHJvYyA9IHJlcXVpcmUoJy4vZWxtLXBrZy1qcy9pbWFnZV9sb2FkZXIuanMnKQoKZXhwb3J0cy5pbml0ID0gYXN5bmMgZnVuY3Rpb24gaW5pdChhcHApIHsKICAvLyBAV0FSTklORzogdGhpcyBvbmx5IHJ1bnMgZm9yIExhbWRlcmEgcHJvZHVjdGlvbiBkZXBsb3lzIQogIC8vIFRoaXMgZmlsZSB3aWxsIG5vdCBydW4gaW4gTG9jYWwgZGV2ZWxvcG1lbnQsIGFuIGVxdWl2YWxlbnQgdG8gdGhpcyBpcwogIC8vIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGluIExvY2FsIERldmVsb3BtZW50IGZvciBldmVyeSBmaWxlIGluIGVsbS1wa2ctanMvCiAgZ2VvTG9jLmluaXQoYXBwKQogIGltZ1Byb2MuaW5pdChhcHApCn0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "coms"
					},
					"BQAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAPAQAAAAAAAAYAAABnZW9sb2MPAQAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4BAAAAAAAAFAEAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAABgBAAAAAAAAGAEAAAAAAAA4AAAAY29uc3QgaW1nUHJvYyA9IHJlcXVpcmUoJy4vZWxtLXBrZy1qcy9pbWFnZV9sb2FkZXIuanMnKQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgBAAAAAAAAUAEAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "coms"
					},
					"BQAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAAYAAABnZW9Mb2PwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8AAAAAAAAA9QAAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "coms"
					},
					"BQAAACQCAAAAAAAAJQIAAAAAAAAAAAAAJQIAAAAAAAAlAgAAAAAAAAYAAABnZW9Mb2MlAgAAAAAAACYCAAAAAAAAAAAAACYCAAAAAAAAJwIAAAAAAAAAAAAAJwIAAAAAAAAoAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQCAAAAAAAAKgIAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"left_delete",
					null,
					"AQAAADMCAAAAAAAAMwIAAAAAAAAWAAAAICAgIGltZ1Byb2MuaW5pdChhcHApCg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMCAAAAAAAASQIAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"clang_format",
					{
						"whole_buffer": true
					},
					"AQAAAAAAAAAAAAAANAIAAAAAAAA0AgAALy8gQE5PVEUgdGhpcyBmaWxlIHdpbGwgaG9wZWZ1bGx5IGJlIGF1dG8tZ2VuZXJhdGVkIGJ5IGVsbS1wa2ctanMgaW4gZnV0dXJlIQovLyBGb3Igbm93LCBpdHMgcHJlc2Vuc2Ugd2lsbCBtZWFuIExhbWRlcmEgZGV0ZWN0cyB0aGUgZXh0cmEgSlMgYW5kIHBhY2thZ2VzCi8vIEluIGZ1dHVyZSB0aGlzIHdpbGwgYmUgbW9yZSBzdHJ1Y3R1cmVkICsgcmVzdHJpY3RlZCBvbmNlIHRoZSBkZXNpZ24gaXMgZG9uZQpjb25zdCBjb21zID0gcmVxdWlyZSgnLi9lbG0tcGtnLWpzL2NvbXMuanMnKQoKZXhwb3J0cy5pbml0ID0gYXN5bmMgZnVuY3Rpb24gaW5pdChhcHApIHsKICAgIC8vIEBXQVJOSU5HOiB0aGlzIG9ubHkgcnVucyBmb3IgTGFtZGVyYSBwcm9kdWN0aW9uIGRlcGxveXMhCiAgICAvLyBUaGlzIGZpbGUgd2lsbCBub3QgcnVuIGluIExvY2FsIGRldmVsb3BtZW50LCBhbiBlcXVpdmFsZW50IHRvIHRoaXMgaXMKICAgIC8vIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGluIExvY2FsIERldmVsb3BtZW50IGZvciBldmVyeSBmaWxlIGluIGVsbS1wa2ctanMvCiAgICBjb21zLmluaXQoYXBwKQp9",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMCAAAAAAAAMwIAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"up",
				"Package Control: Upgrade Package"
			],
			[
				"terminus",
				"Terminus: Toggle Panel"
			],
			[
				"term",
				"Terminal: Open"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"teminus ope",
				"Terminus: Toggle Panel"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"open",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"terminus ",
				"Terminus: Close All"
			],
			[
				"terminus open",
				"Terminus: Toggle Panel"
			],
			[
				"terminus: io",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"Package Control: up",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"floo",
				"Floobits - Settings (~/.floorc.json)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"pac",
				"Package Control: Upgrade Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 159.0,
		"history":
		[
			"terminus",
			"teminus",
			"Terminus: Open Default Shell in Tab"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/eniac314/prog/elm/kgg",
		"/Users/eniac314/prog/elm/kgg/elm-pkg-js",
		"/Users/eniac314/prog/elm/kgg/src",
		"/Users/eniac314/prog/elm/kgg/src/Evergreen",
		"/Users/eniac314/prog/elm/kgg/src/Evergreen/Migrate"
	],
	"file_history":
	[
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/02-2025/Notes 24-02.txt",
		"/Users/eniac314/Desktop/Notes déménagement.txt",
		"/Users/eniac314/prog/elm/kgg/src/Evergreen/Migrate/V7.elm",
		"/Users/eniac314/prog/elm/kgg/src/Evergreen/Migrate/V6.elm",
		"/Users/eniac314/prog/elm/kgg/src/Evergreen/Migrate/V4.elm",
		"/Users/eniac314/prog/elm/kgg/src/GuessingGame.elm",
		"/Users/eniac314/prog/elm/kanjiGame/auth-src/Auth/Common.elm",
		"/Users/eniac314/prog/elm/kanjiGame/src/Types.elm",
		"/Users/eniac314/prog/elm/kanjiGame/elm.json",
		"/Users/eniac314/prog/elm/kanjiGameOld/src/Types.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Types.elm",
		"/Users/eniac314/prog/elm/kanjiGame/src/Auth.elm",
		"/Users/eniac314/prog/elm/kanjiGame/src/Env.elm",
		"/Users/eniac314/prog/elm/kanjiGame/src/Backend.elm",
		"/Users/eniac314/prog/elm/kanjiGame/src/Frontend.elm",
		"/Users/eniac314/prog/elm/kanjiGame/src/Config.elm",
		"/Users/eniac314/Desktop/trad momoko.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Main.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Routes.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/restricted/membersBlog/Notes Révisions MNN1.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/index.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Plugins/Decomposer.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Blog.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Home.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 29/grammar_less_29.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Kanji/Data.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/JapaneseDictionary.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Verbs/VerbsFormsTable.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Kanji/Conversion.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Markdown/MarkdownParser.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Markdown/MarkdownEditor.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Markdown/JapPreprocessor.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Utils/Utils.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Plugins/QCM.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Verbs.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Verbs/VerbsData.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/MnnManual.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/restricted/pdfConfigs/less01Romaji.json",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/restricted/MinnaNoNihongo1Romaji/lessons/splitter.sh",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Markdown/Renderer.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Plugins/Whiteboard.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Kanji/KanjiEditor.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Kanji/KanjiQuiz.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Verbs/VerbsQuiz.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Yann/06-2024/Notes 29-06",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 27/grammar_less_27.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/08-2024/Notes 04-08.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/08-2024/Notes 02-08",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/07-2024/notes 31-07",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Adjectives/AdjectivesQuiz.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/07-2024/notes 19-07",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/07-2024/notes 12-07.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Plugins/PdfReader.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/07-2024/notes 10-07",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/07-2024/notes themes version",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/07-2024/notes 08-07.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Verbs/VerbsLessons.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Classical/ClassicalQuizes.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Classical/InflectedForms.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Classical/InflectedFormsDataSet.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Kanji.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 20/grammar_less_20.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 23/grammar_less_23.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Plugins/PitchAccent.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/blog/Variations de niveau de language.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/02-2024/Notes 28-02.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 11/leçon 11.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 05/leçon 05.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Adjectives/AdjectivesData.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 09/leçon 09.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/assets/batchUpdateVocPitchAccent.py",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/blog/L'accent en japonais.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Vocabulary.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/modules/vocabulary/update_mnn_voc_entry.inc.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/assets/python_scripts/updateVoc.py",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/classNotes/Aurelien/02-2024/Notes 23-02.txt",
		"/Users/eniac314/Downloads/images étiquettes amarante/etiquettes.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 14/leçon 14.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 27/leçon 27.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 01/leçon 01Voc.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 17/leçon 17Voc.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/assets/accents.sql",
		"/opt/homebrew/etc/php/8.3/php.ini",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/assets/accents.py",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/assets/accents.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/elm.json",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Presentation.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Adjectives.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Auth.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/Notes.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/MnnGrammar.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/Less 19/grammar_less_19.md",
		"/Users/eniac314/Desktop/tmp/\u001f漢字.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/assets/KanjiJLPT.txt",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Style/Palette.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Style/Helpers.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/Fonts/font.css",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/blog/Donner et recevoir : あげる、くれる、もらう.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Plugins/VocMemo.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/apiIndex.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/modules/japTokenization/tokenizeJapStrings.inc.php",
		"/opt/homebrew/etc/httpd/httpd.conf",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/.htaccess",
		"/opt/homebrew/etc/httpd/extra/httpd-ssl.conf",
		"/opt/homebrew/etc/httpd/extra/httpd-vhosts.conf",
		"/Users/eniac314/Sites/https/Readme.md",
		"/opt/homebrew/etc/httpd/server.crt",
		"/opt/homebrew/var/log/httpd/error_log",
		"/usr/local/etc/httpd/httpd.conf",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/exosKanji/exosGen.md",
		"/Users/eniac314/Downloads/yomitan-settings-2024-01-03-10-40-17.json",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/public/data/exosKanji/exosGenFurigana.md",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/modules/auth/refresh.inc.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Auth/Login.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Auth/Logout.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/FlashCards/FlashCardsViews.elm",
		"/Users/eniac314/prog/elm/laTerreDuChat2.0/apache/includes/config.inc.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/includes/config.inc.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/modules/japTokenization/furigana.inc.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/LegacyKana/KanaVirtKeyb.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/includes/private.inc.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/includes/utils.inc.php",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/LegacyKana/PracticeContent.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/apache/restricted/pdfConfigs/less15.json",
		"/Users/eniac314/Sites/backupPaniersSaison/fk_dump.sql",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/Kanji/MainView.elm",
		"/Users/eniac314/prog/elm/uminokirin2.0/src/Pages/FlashCards.elm",
		"/Users/eniac314/Downloads/matomodb5000151866_hosting-data_io.sql"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 457.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Commencer",
			"leav",
			"GameO",
			"Vict",
			"meaningsView",
			"sho",
			"mainKanjiView",
			"kanjid",
			"kanji",
			"kanjidic",
			"mainKanjiView",
			"gameView",
			"inPlayView",
			"gameView",
			"gameStateView",
			"inPlayView",
			"mainKanjiView",
			"getKanjisDatabase",
			"Lobb",
			"GotK",
			"Loading",
			"request",
			"addWordView",
			"buffering",
			"etCustomKanjiSet",
			"KggSetCustomKanjiSet",
			"Random",
			"cleanGame",
			"gameOrphaned",
			"inPla",
			"isCurrentlyPlaying",
			"gameRunning",
			"GameOv",
			"Uni",
			"buffering",
			"sendToBackendWithTime",
			"laun",
			"currentGameInitialLoadingStatus",
			"%",
			"launchPlay",
			"loadingView",
			"currentGameInitialLoadingStatus",
			"view",
			"gamestateV",
			"currentGameInitialLoadingStatus",
			"gameStateView",
			"gameView",
			"view",
			"loading",
			"synci",
			"kggSyn",
			"init",
			"isCurrentlyPlaying",
			"broadcastGame",
			"KggSendWord",
			"K",
			"Unimplementеd",
			"gotIFrameTestResult",
			"Unimplementеd"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "elm-pkg-js/coms.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1231,
						"regions":
						{
						},
						"selection":
						[
							[
								147,
								147
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".\"'/@<",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-typescript"
								}
							],
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_uri": "file:///Users/eniac314/prog/elm/kgg/elm-pkg-js/coms.js",
							"remote_loading": false,
							"show_definitions": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/Game.elm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23861,
						"regions":
						{
						},
						"selection":
						[
							[
								2570,
								2570
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/eniac314/prog/elm/kgg/src/Game.elm",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Elm Syntax Highlighting/src/elm.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1249.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Frontend.elm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10129,
						"regions":
						{
						},
						"selection":
						[
							[
								344,
								346
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/eniac314/prog/elm/kgg/src/Frontend.elm",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Elm Syntax Highlighting/src/elm.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/GuessingGame.elm",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32496,
						"regions":
						{
						},
						"selection":
						[
							[
								19703,
								19703
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/eniac314/prog/elm/kgg/src/GuessingGame.elm",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Elm Syntax Highlighting/src/elm.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11068.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Helpers.elm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1474,
						"regions":
						{
						},
						"selection":
						[
							[
								1473,
								1473
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/eniac314/prog/elm/kgg/src/Helpers.elm",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Elm Syntax Highlighting/src/elm.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/ApiCalls.elm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29009,
						"regions":
						{
						},
						"selection":
						[
							[
								7865,
								7865
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/eniac314/prog/elm/kgg/src/ApiCalls.elm",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Elm Syntax Highlighting/src/elm.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3525.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/Backend.elm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3757,
						"regions":
						{
						},
						"selection":
						[
							[
								1541,
								1541
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"lsp_uri": "file:///Users/eniac314/prog/elm/kgg/src/Backend.elm",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Elm Syntax Highlighting/src/elm.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "elm-pkg-js-includes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 564,
						"regions":
						{
						},
						"selection":
						[
							[
								563,
								563
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".\"'/@<",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-typescript"
								}
							],
							"incomplete_sync": null,
							"lsp_active": true,
							"lsp_uri": "file:///Users/eniac314/prog/elm/kgg/elm-pkg-js-includes.js",
							"remote_loading": false,
							"show_definitions": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 155.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 243.0
	},
	"output.Terminus 2":
	{
		"height": 102.0
	},
	"output.Terminus 3":
	{
		"height": 114.0
	},
	"output.Terminus 4":
	{
		"height": 114.0
	},
	"output.Terminus 5":
	{
		"height": 114.0
	},
	"output.Terminus 6":
	{
		"height": 114.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.elm_format":
	{
		"height": 227.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "kgg.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"secre",
				"apacheBackup/vendor/paragonie/halite/src/Asymmetric/SecretKey.php"
			],
			[
				"getFeuill",
				"html/feuillesLiaison/getFeuilleLiaison.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 501.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/prog/elm/paniersSaison/paniersSaison.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 305.0,
		"last_filter": "subs",
		"selected_items":
		[
			[
				"subs",
				"subscriptions"
			],
			[
				"edit",
				"defEditingSelectedArtwork"
			],
			[
				"mobiel",
				"mobileNavView"
			],
			[
				"compute",
				"computeDisplayMinHeight"
			],
			[
				"contactV",
				"contactView"
			],
			[
				"content",
				"content"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
